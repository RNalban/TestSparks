<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="049dbecd-c426-4b9a-baf0-60e4405b407b" created="2.8.0" activeEnvironment="Default environment" name="Corporate_On_Boarding_MultiBook_MLP-UAT" resourceRoot="${projectDir}" authProfile="Basic" updated="3.20.1 2022-01-18T13:40:47Z" encryptionMode="Not encrypted" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.6.0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">true</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting>
    <con:setting id="GeneratableJUnitReport@Folder">D:\API_Testing\Daily_Health_Check_Report_21_04_2020\Corporate_OnBoarding</con:setting>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="Corporate_OnBoarding"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="CreateCorporateAccount"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Users\Amaranath.Arava-e\AppData\Local\SmartBear\ReadyAPI-2.8.0\bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerUIAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value="XLS"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="&lt;all>"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="&lt;all>"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Users\Monika.Sindhe-e\AppData\Local\SmartBear\ReadyAPI-3.2.0\bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
    <con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormBase Path"/>
    <con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormTarget Path"/>
    <con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormFormat">json</con:setting>
    <con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormAPI Version">1.0</con:setting>
    <con:setting id="com.smartbear.swagger.ExportSwaggerAction$FormVersion">OpenAPI 3.0</con:setting>
  </con:settings>
  <con:interface xsi:type="con:RestService" id="36d38cf7-d321-4897-8d04-10e8641a233b" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://${#Project#url}" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
    </con:endpoints>
    <con:resource name="GetFixDepositProducts" path="/api/BankSmart/GetFixDepositProducts" id="16c4b67a-f6a0-4f56-99c1-42332c05b779">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of GetAccountDetail" path="/api/BankSmart/GetAccountDetail" id="81b7ea20-267e-4c88-bf6f-0ef929efd68e">
        <con:settings/>
        <con:parameters/>
        <con:method name="GetAccountDetail" id="feffe07a-9b1a-4421-954f-391d226c0253" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:request name="UnMark Account Status" id="9ccc95a3-2370-49d0-aaff-3a6ac696a6b7" mediaType="application/json">
            <con:settings/>
            <con:endpoint>http://localhost:2181</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "AccountId": "",
    "IBAN": "AE700330100100000003202"
}</con:request>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
        <con:method name="GetAccountDetail 2" id="4607c67e-d819-4428-be3b-3fb64eecb716" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:request name="Get Account Status Marking" id="5391b3b2-87ba-41f4-a20a-1350cb043895" mediaType="application/json">
            <con:settings/>
            <con:endpoint>http://localhost:2181</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "AccountId": "",
    "IBAN": "AE700330100100000003202"
}</con:request>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
      <con:method name="GetFixDepositProducts" id="5baae4f8-d6ba-438f-a19e-3149d6134d5f" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetFixDepositProducts">get:Fault</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetFixDepositProducts">get:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>500</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400 401</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetFixDepositProducts">get:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Get Fix Deposit Products" id="b5f6b9f0-06de-410f-9fb1-59847e2d1a9e" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
    "DateTime": "2019-03-06T00:00:00",
    "ChannelId": "5",
    "OurBranchId": "01"
}</con:request>
          <con:originalUri>http://https/waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/GetFixDepositProducts</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="SingleDebitSingleCredit" path="/api/ECSFin/singleDebitSingleCredit" id="049c6431-a2c2-441e-a83d-a5ae8248aa5d">
      <con:settings/>
      <con:parameters/>
      <con:method name="SingleDebitSingleCredit" id="3a895299-6081-49d2-81d5-0f58d2310c42" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic Og==</con:value>
            <con:style>HEADER</con:style>
            <con:default>Basic Og==</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>CHANNEL_ID</con:name>
            <con:value>WAQFE_TO_IMS</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>401</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:sin="http://10.4.128.8/api/ECSFin/singleDebitSingleCredit">sin:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:sin="http://10.4.128.8/api/ECSFin/singleDebitSingleCredit">sin:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="single Debit Single Credit inter" id="858898a4-932c-4d52-9ef8-39fa1ce3920e" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "10",
        "OurBranchId": "01"
    },
    "RootObject": {
        "dataHeader": {
            "uniqueId": "1031903250000112",
            "timestamp": "2019-09-05T05:45:28.003+0000"
        },
        "data": {
            "channelInfo": "MOBILE",
            "valueDate": "2019-09-05",
            "segmentType": "Retail",
            "paymentChannel": "INTER",
            "reference": "R-38523250444444",
            "transactionTypeCode": "OAT",
            "totalInstrAmount": "1000.00",
            "totalSettledAmount": "10000.00",
            "remarks": "FOR INVOICE NO. #906745",
            "debitReference": "EIM001",
            "sendersCharges": "2.00",
            "orderCust": {
                "amt": "1000.00",
                "cur": "AED",
                "type": "1001/",
                "cifNumber": "000014416",
                "bankCode": "ABNAAEAE",
                "accNo": "0150100001441601",
                "iban": "AE050900150100001441601",
                "phone": "9076532156",
                "email": "Amar003@hotmail.com",
                "name": "Amar",
                "addr": " 111 MAIN TOWN UAE"
            },
            "benef": {
                "txnRef": "R-38523250444444",
                "cifNumber": "200003426",
                "exchangeRate": "1",
                "settlementCurrency": "AED",
                "settledAmount": "10000.00",
                "mode": "INTER",
                "cur": "AED",
                "country": "AE",
                "bankcountry": "AE",
                "bankCode": "EBOK",
                "accNo": "0959024729001",
                "bankBic": "ABNAAEAE",
                "iban": "/AE850260000959024729001",
                "chargeBearer": "BEN",
                "name": "JOHN DOE",
                "addr": "456 St Anytown UAE",
                "bankName": "EARDAH CAPITAL",
                "phone": "8787418702",
                "bankAddr": "111 MAIN TOWN UAE",
                "remarks": "FOR INVOICE NO. #906745"
            }
        }
    }
}</con:request>
          <con:originalUri>http://10.4.128.8/api/ECSFin/singleDebitSingleCredit</con:originalUri>
          <con:credentials>
            <con:username>vendor10-erc</con:username>
            <con:password>P@ssw0rd10</con:password>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:preemptive>true</con:preemptive>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic Og=="/>
            <con:entry key="CHANNEL_ID" value="WAQFE_TO_IMS"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
            <con:entry>CHANNEL_ID</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
      <con:method name="SingleDebitSingleCredit 2" id="2a3a7a80-b234-4d3f-8e69-7e0208e3498e" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic Og==</con:value>
            <con:style>HEADER</con:style>
            <con:default>Basic Og==</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>text/html; charset=us-ascii</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:sin="http://10.4.128.8/api/ECSFin/singleDebitSingleCredit">sin:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:sin="http://10.4.128.8/api/ECSFin/singleDebitSingleCredit">sin:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:sin="http://10.4.128.8/api/ECSFin/singleDebitSingleCredit">sin:Fault</con:element>
        </con:representation>
        <con:request name="single Debit Single Credit Intra" id="7adc01a9-ab18-41b7-99e3-5f5aa61d63de" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
 "SignOnRq": {
  "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
  "DateTime": "2019-09-05T00:00:00",
  "ChannelId": "10",
  "OurBranchId": "01"
 },
 "RootObject":{
  "dataHeader": {
        "uniqueId": "7809457821456035",
        "timestamp": "2019-09-05T10:45:28.003+0000"
    },
    "data": {
        "channelInfo": "WEB",
        "valueDate": "2019-09-05",
        "segmentType": "CORP",
        "paymentChannel": "INTRA",
        "reference": "1038523250453236",
        "remarks": "TEST REMARKS!!!",
        "orderCust": {
            "amt": "100.00",
            "cur": "AED",
            "cifNumber": "000014416",
            "accNo": "0150100001441601"
        },
        "benef": {
            "txnRef": "1038523250453236",
            "cifNumber": "",
            "exchangeRate": "1",
            "settlementCurrency": "AED",
            "settledAmount": "100.00",
            "mode": "INTRA",
            "cur": "AED",
            "accNo": "0100200000051901",
            "remarks": "FOR INVOICE NO. #906745"
        }
    }
 }
}</con:request>
          <con:originalUri>http://10.4.128.8/api/ECSFin/singleDebitSingleCredit</con:originalUri>
          <con:credentials>
            <con:username>vendor10-erc</con:username>
            <con:password>P@ssw0rd10</con:password>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:preemptive>true</con:preemptive>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic Og=="/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="AccountInquiry" path="/api/BankSmart/AccountInquiry" id="2cf85620-3f85-4165-8d88-336469635042">
      <con:settings/>
      <con:parameters/>
      <con:method name="AccountInquiry" id="82a7f45c-a8ec-4949-8636-9d7e84c12393" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:acc="http://10.4.128.8/api/BankSmart/AccountInquiry">acc:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:acc="http://10.4.128.8/api/BankSmart/AccountInquiry">acc:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element xmlns:acc="http://10.4.128.8/api/BankSmart/AccountInquiry">acc:Fault</con:element>
        </con:representation>
        <con:request name="AccountInquiry" id="beafddd0-0a15-4428-bd5e-cdd0db732a6e" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
\r
	"SignOnRq": {\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime": "2019-03-06T00:00:00",\r
		"ChannelId": "5",\r
		"OurBranchId": "01"\r
	},\r
	"AccountId":"",\r
	"MobileNo":"",\r
	"IBAN":"AE950900100200000067501"\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="ValidateSingleDebitSingleCredit" path="/api/ECSFin/validateSingleDebitSingleCredit" id="cf1ee780-6b3d-421b-bd46-cf348ebfc807">
      <con:settings/>
      <con:parameters/>
      <con:method name="ValidateSingleDebitSingleCredit" id="e52349df-d7a0-43ff-bb95-3cbc28c767f3" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic Og==</con:value>
            <con:style>HEADER</con:style>
            <con:default>Basic Og==</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>text/html; charset=us-ascii</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:val="http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit">val:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:val="http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit">val:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:val="http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit">val:Fault</con:element>
        </con:representation>
        <con:request name="validate Single Debit Single Credit Intra" id="04cba670-9083-4469-b114-ddd53a955ee7" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Server" value="Microsoft-IIS/10.0"/>
  <con:entry key="Content-Length" value="301"/>
  <con:entry key="Date" value="Thu, 05 Sep 2019 05:50:33 GMT"/>
  <con:entry key="Content-Type" value="application/json; charset=utf-8"/>
</xml-fragment>]]></con:setting>
          </con:settings>
          <con:endpoint>http://10.4.128.8:2181</con:endpoint>
          <con:request>{
 "SignOnRq": {
  "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
  "DateTime": "2019-09-05T00:00:00",
  "ChannelId": "10",
  "OurBranchId": "01"
 },
 "RootObject":{
  "dataHeader": {
        "uniqueId": "7809457821456035",
        "timestamp": "2019-09-05T10:45:28.003+0000"
    },
    "data": {
        "channelInfo": "WEB",
        "valueDate": "2019-09-05",
        "segmentType": "CORP",
        "paymentChannel": "INTRA",
        "reference": "1038523250453236",
        "remarks": "TEST REMARKS!!!",
        "orderCust": {
            "amt": "100.00",
            "cur": "AED",
            "cifNumber": "000014416",
            "accNo": "0150100001441601"
        },
        "benef": {
            "txnRef": "1038523250453236",
            "cifNumber": "",
            "exchangeRate": "1",
            "settlementCurrency": "AED",
            "settledAmount": "100.00",
            "mode": "INTRA",
            "cur": "AED",
            "iban": "AE250900100200000083602",
            
            "remarks": "FOR INVOICE NO. #906745"
        }
    }
 }
}</con:request>
          <con:originalUri>http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit</con:originalUri>
          <con:credentials>
            <con:username>vendor10-erc</con:username>
            <con:password>P@ssw0rd10</con:password>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:preemptive>true</con:preemptive>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic Og=="/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
      <con:method name="ValidateSingleDebitSingleCredit 2" id="5967cd54-bf3a-4eca-bff7-8b2395056740" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic Og==</con:value>
            <con:style>HEADER</con:style>
            <con:default>Basic Og==</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>text/html; charset=us-ascii</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>401</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:val="http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit">val:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:val="http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit">val:Response</con:element>
        </con:representation>
        <con:request name="validate Single Debit Single Credit Inter" id="287d3158-dc7e-459d-9537-a662efd20fc1" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-09-05T00:00:00",
        "ChannelId": "10",
        "OurBranchId": "01"
    },
    "RootObject": {
        "dataHeader": {
            "uniqueId": "1031903250000112",
            "timestamp": "2019-09-05 05:45:28.003"
        },
        "data": {
            "channelInfo": "MOBILE",
            "valueDate": "2019-09-05",
            "segmentType": "Retail",
            "paymentChannel": "INTER",
            "reference": "R-38523250444444",
            "transactionTypeCode": "OAT",
            "totalInstrAmount": "1000.00",
            "totalSettledAmount": "1000.00",
            "remarks": "FTS Transfer to @IBAN",
            "debitReference": "EIM001",
            "sendersCharges": "2.00",
            "orderCust": {
                "amt": "1000.00",
                "cur": "AED",
                "type": "1100/",
                "cifNumber": "000014416",
                "bankCode": "ABNAAEAE",
                "accNo": "0150100001441601",
                "iban": "AE050900150100001441601",
                "phone": "9076532156",
                "email": "Amar003@hotmail.com",
                "name": "Amar",
                "addr": "4/c block a "
            },
            "benef": {
                "txnRef": "R-38523250444444",
                "cifNumber": "200003426",
                "exchangeRate": "1",
                "settlementCurrency": "AED",
                "settledAmount": "10000.00",
                "mode": "INTER",
                "cur": "AED",
                "country": "AE",
                "bankcountry": "AE",
                "bankCode": "026",
                "accNo": "0959024729001",
                "bankBic": "EBILAEAD",
                "iban": "/AE850260000959024729001",
                "chargeBearer": "BEN",
                "name": "JOHN DOE",
                "addr": "456 St Anytown UAE",
                "bankName": "EARDAH CAPITAL",
                "phone": "8787418702",
                "bankAddr": "111 MAIN TOWN UAE",
                "remarks": "FOR INVOICE NO. #906745",
                "docs": [
                    {
                        "doc_id": "112233",
                        "doc_name": "EC192042NBUMMQ190614052713102365478963302.XLS",
                        "doc_ext": "XLS",
                        "doc_date": "2019-05-21",
                        "purpose": "AUTH_REF",
                        "amt": "10000.00",
                        "cur": "AED",
                        "base64file": "MTIwMTAwMjE1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMjAwMDAw"
                    }
                ]
            }
        }
    }
}</con:request>
          <con:originalUri>http://10.4.128.8/api/ECSFin/validateSingleDebitSingleCredit</con:originalUri>
          <con:credentials>
            <con:username>vendor10-erc</con:username>
            <con:password>P@ssw0rd10</con:password>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:preemptive>true</con:preemptive>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic Og=="/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="DepositsListClientWise" path="/api/BankSmart/DepositsListClientWise" id="b301b481-0aae-4417-8652-e394c81e257e">
      <con:settings/>
      <con:parameters/>
      <con:method name="DepositsListClientWise" id="8e4e0c83-b203-49b8-975e-486791703176" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:dep="http://10.4.128.8/api/BankSmart/DepositsListClientWise">dep:Response</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:dep="http://10.4.128.8/api/BankSmart/DepositsListClientWise">dep:Fault</con:element>
        </con:representation>
        <con:request name="Deposits List Client Wise" id="51acd0c6-9f40-48ff-ba8f-8e0a9ea162d8" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
	"SignOnRq": {\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime": "2019-03-06T00:00:00",\r
		"ChannelId": "5",\r
		"OurBranchId": "01"\r
	},\r
	"ClientID": "000000018",\r
	"ProductID": "TDR7D"\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCIFAccountsBalanceInq" path="/api/BankSmart/GetCIFAccountsBalanceInq" id="f82ae442-3350-46db-9b0a-b6b7dd013654">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCIFAccountsBalanceInq" id="646f2d74-1a6e-4ea9-b6be-7f5a58466cfa" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq">get:Fault</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq">get:Response</con:element>
        </con:representation>
        <con:request name="Get CIF Accounts Balance Inq" id="ee7046ef-fa17-4024-a1d1-9d82c570c7ef" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
"signOnRq":{ \r
"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
"DateTime":"2019-03-06T00:00:00",\r
"ChannelId":"5",\r
"OurBranchId":"01"},\r
"ClientID": "000000675"\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="ScreeningLegalPersonModel" path="/api/IMTF/ScreeningLegalPersonModel" id="bd4f61ae-8162-4b67-800f-ca176537ceeb">
      <con:settings/>
      <con:parameters/>
      <con:method name="ScreeningLegalPersonModel" id="d41ce394-ba3e-4da8-8f1d-23141f20cc71" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>401</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:scr="http://10.4.128.8/api/IMTF/ScreeningLegalPersonModel">scr:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500 400 401</con:status>
          <con:params/>
          <con:element xmlns:scr="http://10.4.128.8/api/IMTF/ScreeningLegalPersonModel">scr:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:scr="http://10.4.128.8/api/IMTF/ScreeningLegalPersonModel">scr:Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="ScreeningLegalPersonModel" id="fb269761-0750-49ef-b1ce-71e6da1eb3a1" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "10",
        "OurBranchId": "01"
    },
    "RootObject": {
        "RequestMetaData": {
            "type": "NBK_SCR_CRP",
            "sendTime": "23/04/2019 13:57:36.036629",
            "timeZone": "4",
            "userId": "SYSTEM",
            "requestUid": "use_case_legal_entity",
            "orgUnit": "ORG_GLOBAL/ORG_AE/AE_CORP",
            "branchCompanyId": "HAS",
            "branchLocationId": "784101",
            "systemId": "CIF",
            "serviceId": ""
        },
        "RequestDataObject": {
            "DoiPerson": [
                {
                    "entityType": "3001",
                    "originId": "2111CWS2016",
                    "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",
                    "legalStatus": "L",
                    "fullName": "INTERNATIONAL FINANCIAL ADVISORS",
                    "sex": "",
                    "function": "",
                    "profOccupation": "",
                    "activityCode": "3",
                    "businessCode": "C",
                    "dob": "",
                    "startDtg": "21/09/2016 00:00:00.000000",
                    "placeOfBirth": "",
                    "cityOfBirth": "",
                    "countryOfBirth": "",
                    "legalForm": "",
                    "customerStatus": "",
                    "vatNumber": "",
                    "giin": "",
                    "tin": "",
                    "DoiNickname": [
                        {
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",
                            "nickName": ""
                        }
                    ],
                    "DoiPersonPhysChar": [
                        {
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",
                            "nationality": "AE"
                        }
                    ],
                    "DoiIdentificationDocEntity": [
                        {
                            "entityType": "18",
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ID",
                            "type": "CR",
                            "issuingCountry": "AE",
                            "number": "5896AE78",
                            "collectDate": "23/04/2019 00:00:00.000000",
                            "startDtg": "",
                            "endDtg": "30/01/2026 00:00:00.000000"
                        }
                    ],
                    "DoiFile": [
                        {
                            "entityType": "12",
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_DOC",
                            "collectDate": "23/04/2019 00:00:00.000000",
                            "startDtg": "23/04/2019 00:00:00.000000",
                            "endDtg": "21/07/2021 00:00:00.000000",
                            "DoiFileCategory": [
                                {
                                    "originId": "2111CWS2016",
                                    "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_DOC",
                                    "category": "KYC form"
                                }
                            ]
                        }
                    ],
                    "DoiRisk": [
                        {
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",
                            "riskCategory": "Risk from Core SYSTEM",
                            "riskSubCategory": "Non-Resident Risk",
                            "riskScoring": "0",
                            "riskStartDate": "",
                            "riskEndDate": ""
                        }
                    ],
                    "DoiLocation": [
                        {
                            "entityType": "21",
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ADR",
                            "fullAddressText": "Umm Al Sheif Road 58, Dubai",
                            "country": "AE"
                        }
                    ],
                    "DoiPhoneEntity": [
                        {
                            "entityType": "10",
                            "originId": "2111CWS2016_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_4N",
                            "phoneIdentifierFull": "",
                            "number": "121212188",
                            "countryPrefix": "+971",
                            "country": "AE",
                            "type": "L"
                        }
                    ],
                    "DoiEMailEntity": [
                        {
                            "entityType": "16",
                            "originId": "2111CWS2016_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_EMAIL",
                            "email": "InternationalFinancialAdvisors@gmail.ae",
                            "emailType": "CORP"
                        }
                    ],
                    "DoiAccountEntity": [
                        {
                            "entityType": "4",
                            "originId": "12587444",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ACC",
                            "accountType": "CURRENT",
                            "accountNumber": "12587444",
                            "bic": "NBKDAEXX",
                            "bankIban": "AE9000300012587444",
                            "bankName": "NEW BANK DUBAI",
                            "branchName": "Main Office",
                            "branchCity": "Dubai",
                            "branchCountry": "AE",
                            "status": "1",
                            "openingDate": "23/04/2019 09:01:36.000000",
                            "closingDate": "",
                            "DoiAccountBalance": [
                                {
                                    "originId": "12587444",
                                    "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ACC",
                                    "baseAmountBalance": "12547.00",
                                    "baseCurrency": "USD",
                                    "balanceDate": "23/04/2019 11:00:36.000000"
                                }
                            ],
                            "DoiRisk": [
                                {
                                    "originId": "12587444",
                                    "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ACC",
                                    "riskCategory": "bbbbbbb",
                                    "riskSubCategory": "vvvvvvvvvv",
                                    "riskScoring": "20",
                                    "riskStartDate": "23/04/2019 00:00:00.000000",
                                    "riskEndDate": "23/08/2020 00:00:00.000000"
                                }
                            ]
                        }
                    ],
                    "DoiRelation": [
                        {
                            "entityType": "2000",
                            "originId": "2111CWS2016",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/RELAT",
                            "originIdEnd2": "2111CWS2017",
                            "type": "EP",
                            "linkDirection": "3",
                            "linkWeight": "",
                            "description": "",
                            "startDtg": "21/09/2016 00:00:00.000000",
                            "startDtgTz": "4",
                            "endDtg": "",
                            "endDtgTz": ""
                        }
                    ]
                },
                {
                    "entityType": "3001",
                    "originId": "2111CWS2017",
                    "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP",
                    "legalStatus": "N",
                    "fullName": "Yassin SALDDHI",
                    "sex": "M",
                    "function": "",
                    "profOccupation": "1292088",
                    "activityCode": "",
                    "businessCode": "",
                    "dob": "18/02/1986 00:00:00.000000",
                    "placeOfBirth": "Kuwait,Al Ahmadi",
                    "cityOfBirth": "Al Ahmadi",
                    "countryOfBirth": "KW",
                    "legalForm": "",
                    "customerStatus": "",
                    "vatNumber": "",
                    "giin": "",
                    "tin": "",
                    "DoiNickname": [
                        {
                            "originId": "2111CWS2017_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP",
                            "nickName": ""
                        }
                    ],
                    "DoiPersonPhysChar": [
                        {
                            "originId": "2111CWS2017_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP",
                            "nationality": "KW"
                        }
                    ],
                    "DoiIdentificationDocEntity": [
                        {
                            "entityType": "18",
                            "originId": "2111CWS2017_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ID",
                            "type": "PP",
                            "issuingCountry": "KW",
                            "number": "KW59336987",
                            "collectDate": "23/04/2019 00:00:00.000000",
                            "startDtg": "",
                            "endDtg": "10/11/2027 00:00:00.000000"
                        }
                    ],
                    "DoiLocation": [
                        {
                            "entityType": "21",
                            "originId": "2111CWS2017_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ADR",
                            "fullAddressText": "Dabous Street, Block 6, Kuwait City",
                            "country": "KW"
                        }
                    ],
                    "DoiPhoneEntity": [
                        {
                            "entityType": "10",
                            "originId": "2111CWS2017_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP_4N",
                            "phoneIdentifierFull": "",
                            "number": "358749654",
                            "countryPrefix": "+965",
                            "country": "KW",
                            "type": "M"
                        }
                    ],
                    "DoiEMailEntity": [
                        {
                            "entityType": "16",
                            "originId": "2111CWS2017_1",
                            "listId": "ORG_GLOBAL/ORG_AE/AE_CORP/REP_EMAIL",
                            "email": "yassin_salddhi@gmail.com",
                            "emailType": "PERS"
                        }
                    ]
                }
            ]
        }
    }
}</con:request>
          <con:originalUri>http://10.4.128.8/api/IMTF/ScreeningLegalPersonModel</con:originalUri>
          <con:credentials>
            <con:username>vendor10-erc</con:username>
            <con:password>P@ssw0rd10</con:password>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:preemptive>true</con:preemptive>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Preemptive</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCorporateAccountDetail" path="/api/BankSmart/GetCorporateAccountDetail" id="d8b46ddb-9566-4c48-8c25-3f27f615c3cb">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCorporateAccountDetail" id="275988bd-910f-4f54-a1f0-66b69e2c672e" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail">get:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail">get:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail">get:Fault</con:element>
        </con:representation>
        <con:request name="GetCorporateAccountDetail" id="87c21957-0d4c-4df2-a3ef-227b1401526e" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
	
     "SignOnRq":{ 
               "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
                  "DateTime":"2019-03-06T00:00:00",
                 "ChannelId":"5",
               "OurBranchId":"01"},
               "AccountID":"jjj",
               "IBAN":""
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CIFinquiryViaCIF" path="/api/BankSmart/CIFinquiryViaCIF" id="5fe166d4-d121-4492-948f-3252c002831a">
      <con:settings/>
      <con:parameters/>
      <con:method name="CIFinquiryViaCIF" id="105df4d2-df60-48a8-9e1f-45adacafc0a0" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:cif="http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF">cif:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:cif="http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF">cif:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element xmlns:xht="http://www.w3.org/1999/xhtml">xht:html</con:element>
        </con:representation>
        <con:request name="CIF Inquiry Via CIF" id="b3cee076-90fc-4126-b65a-d6d95689b67d" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "d23ba6cd-77f4-4f93-b0ef-6fc64dafddc5",
        "DateTime": "2019-08-05T17:10:35.985736+04:00",
        "ChannelId": "1",
        "OurBranchId": "01"
    },
    "ClientID": "000000679"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CreateCorporateAccount" path="/api/BankSmart/CreateCorporateAccount" id="6f7311c6-cb1f-4541-84c0-29c3133e58d3">
      <con:settings/>
      <con:parameters/>
      <con:method name="CreateCorporateAccount" id="9f4d67fd-611b-44f6-84c8-c83dcee93e8d" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:cre="http://10.4.128.8/api/BankSmart/CreateCorporateAccount">cre:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:cre="http://10.4.128.8/api/BankSmart/CreateCorporateAccount">cre:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/problem+json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:cre="http://10.4.128.8/api/BankSmart/CreateCorporateAccount">cre:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element xmlns:cre="http://10.4.128.8/api/BankSmart/CreateCorporateAccount">cre:Fault</con:element>
        </con:representation>
        <con:request name="Create Corporate  Account" id="acbd2f65-3b5f-4ae8-b962-07ba00c71d96" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
    "SignOnRq": {\r
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
        "DateTime": "2019-03-06T00:00:00",\r
        "ChannelId": "5",\r
        "OurBranchId": "01"\r
    },\r
    "SignatureInstructions": "this is to allow all",\r
    "Acc": {\r
        "ClientID": "000000287",\r
        "ProductID": "AGRMR",\r
        "Name": "Fahad",\r
        "Address": "4/c block a ",\r
        "CountryID": "ARE",\r
        "StateID": "001",\r
        "CityID": "005",\r
        "StatementFrequency": "Q",\r
        "HoldMail": 1,\r
        "ZakatExemption":1,\r
        "ContactPersonName": "",\r
        "Designation": "test",\r
        "Phone1": "1231231",\r
        "Phone2": "2312312",\r
        "MobileNo": "test",\r
        "Fax": "test",\r
        "EmailID": "",\r
        "IntroducerAccountNo": "test",\r
        "IntroducedBy": "test",\r
        "IntroducerAddress": "",\r
        "IntroducerCityID": "005",\r
        "IntroducerStateID": "001",\r
        "IntroducerCountryID": "ARE",\r
        "ModeOfOperation": "Company Mandate",\r
        "Reminder": "test",\r
        "Notes": "test",\r
        "NatureID": "0101",\r
        "RelationshipCode": "CAD",\r
        "AllowCreditTransaction": 1,\r
        "AllowDebitTransaction": 1,\r
        "NotServiceCharges": 1,\r
        "NotStopPaymentCharges": 1,\r
        "NotChequeBookCharges": 1,\r
        "TurnOver": "Above 10M",\r
        "NoOfDrTrx":1,\r
        "NoOfCrTrx":1,\r
        "DrThresholdLimit":1,\r
        "CrThresholdLimit":1,\r
        "ProductCash": 1,\r
        "ProductClearing": 1,\r
        "ProductCollection": 1,\r
        "ProductRemittance": 1,\r
        "ProductCross": 1,\r
        "ProductOthers": 1,\r
        "ProductOthersDesc": "test"\r
    }\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
      <con:method name="CreateCorporateAccount 2" id="05a19246-7a69-4d92-8ba0-632677c1622e" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Corporate  Account Copy" id="8800d22d-e3d9-4c01-8dd4-b8c4334e0dad" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
    "SignOnRq": {\r
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
        "DateTime": "2019-03-06T00:00:00",\r
        "ChannelId": "5",\r
        "OurBranchId": "01"\r
    },\r
    "SignatureInstructions": "this is to allow all",\r
    "Acc": {\r
        "ClientID": "000000287",\r
        "ProductID": "AGRMR",\r
        "Name": "Fahad",\r
        "Address": "4/c block a ",\r
        "CountryID": "ARE",\r
        "StateID": "001",\r
        "CityID": "005",\r
        "StatementFrequency": "Q",\r
        "HoldMail": 1,\r
        "ZakatExemption":1,\r
        "ContactPersonName": "",\r
        "Designation": "test",\r
        "Phone1": "1231231",\r
        "Phone2": "2312312",\r
        "MobileNo": "test",\r
        "Fax": "test",\r
        "EmailID": "",\r
        "IntroducerAccountNo": "test",\r
        "IntroducedBy": "test",\r
        "IntroducerAddress": "",\r
        "IntroducerCityID": "005",\r
        "IntroducerStateID": "001",\r
        "IntroducerCountryID": "ARE",\r
        "ModeOfOperation": "Company Mandate",\r
        "Reminder": "test",\r
        "Notes": "test",\r
        "NatureID": "0101",\r
        "RelationshipCode": "CAD",\r
        "AllowCreditTransaction": 1,\r
        "AllowDebitTransaction": 1,\r
        "NotServiceCharges": 1,\r
        "NotStopPaymentCharges": 1,\r
        "NotChequeBookCharges": 1,\r
        "TurnOver": "Above 10M",\r
        "NoOfDrTrx":1,\r
        "NoOfCrTrx":1,\r
        "DrThresholdLimit":1,\r
        "CrThresholdLimit":1,\r
        "ProductCash": 1,\r
        "ProductClearing": 1,\r
        "ProductCollection": 1,\r
        "ProductRemittance": 1,\r
        "ProductCross": 1,\r
        "ProductOthers": 1,\r
        "ProductOthersDesc": "test"\r
    }\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetDepositRates" path="/api/BankSmart/GetDepositRates" id="9849da7c-28bc-45e5-b95b-3ad6e1a3cd07">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetDepositRates" id="4807247c-28a8-4482-b977-efe0bbb53e55" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetDepositRates">get:Response</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Get Deposit Rates" id="8ccc867a-d298-4457-b6a5-b621736fdb30" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "ProductID": "TDR1Y",
    "ReciptID": "18",
    "Date": "2019-05-05T00:00:00"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="UpdateCorporateClient" path="/api/BankSmart/UpdateCorporateClientV2" id="72cf20cc-0815-4dde-95f1-41787b379723">
      <con:settings/>
      <con:parameters/>
      <con:method name="UpdateCorporateClient" id="71d749eb-4c45-40c8-b669-b42444c413e0" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>401</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateCorporateClient">upd:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateCorporateClient">upd:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/problem+json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateCorporateClient">upd:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400 401</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateCorporateClient">upd:Fault</con:element>
        </con:representation>
        <con:request name="Update Corporate CIF" id="1bb55f0f-7866-4261-8aba-74b5f7e0dd63" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
\r
	"SignOnRq": {\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime": "2019-03-06",\r
		"ChannelId": "5",\r
		"OurBranchId": "01"\r
	},\r
	"Cust": {\r
		"ClientID": "000000287",\r
		"GroupCode": "GRE",\r
		"RManager": "fahad",\r
		"RiskProfile": "Low",\r
		"EntityNameCorp": "abc ",\r
		"EntityTypeCorp": "FOC",\r
		"YearofestablishmentCorp": "2019-03-06",\r
		"RegisteredAddressCorp": "abc",\r
		"ContactName1Corp": "Fahad",\r
		"ContactID1Corp": "abc",\r
		"IDTypeCorp": "DLL",\r
		"Address1Corp": "abc",\r
		"PhoneNumberCorp": "134234",\r
		"AlternatePhonenumberCorp": null,\r
		"EmailIDCorp": "fahad_Ali1003@hotmail.com",\r
		"ContactName2Corp": "",\r
		"ContactID2Corp": "",\r
		"IDType2": "",\r
		"Address2Corp": "",\r
		"PhoneNumber2Corp": null,\r
		"AlternatePhonenumber2Corp": null,\r
		"EmailID2Corp": "",\r
		"BusinessActivity": "0111",\r
		"SICCodesCorp": "110",\r
		"IndustryCorp": "MFT",\r
		"PresenceinCISCountryCorp": "Y",\r
		"DealingwithCISCountryCorp": "Y",\r
		"TradeLicenseNumberCorp": "777701777",\r
		"CountryofIncorporationCorp": "UAE",\r
		"TradeLicenseIssuedateCorp": "2019-03-06",\r
		"TradeLicenseExpirydateCorp": "2022-03-06",\r
		"TradeLicenseIssuanceAuthorityCorp": "abc",\r
		"TRNNoCorp": "",\r
		"PEPCorp": "Y",\r
		"BlackListCorp": "Y",\r
		"KYCReviewDateCorp": "2019-03-06",\r
		"FATCARelevantCorp": "Y",\r
		"CRSRelevantCorp": "Y",\r
		"USAEntityCorp": "Y",\r
		"FFICorp": "Y",\r
		"FFICategoryCorp": null,\r
		"GIINNoCorp": "",\r
		"GIINNACorp": "",\r
		"SponsorNameCorp": "",\r
		"SponsorGIIN": "",\r
		"NFFECorp": null,\r
		"StockExchangeCorp": "",\r
		"TradingSymbolCorp": "",\r
		"USAORUAECorp": "Y",\r
		"TINAvailableCorp": "",\r
		"TinNo1Corp": "1",\r
		"TaxCountry1Corp": "",\r
		"TinNo2Corp": "",\r
		"TaxCountry2Corp": "",\r
		"TinNo3Corp": "",\r
		"TaxCountry3Corp": "",\r
		"TinNo4Corp": "",\r
		"TaxCountry4Corp": "",\r
		"TinNo5Corp": "",\r
		"TaxCountry5Corp": "",\r
		"FATCANoReasonCorp": "Reason B",\r
		"ReasonBCorp": "",\r
		"CompanyWebsite": "",\r
		"CompCashIntensive": "Y",\r
		"PubLimCompCorp": "Y",\r
		"RegAddCountryCorp": "UAE",\r
		"REGADDSTATECORP": "DAU",\r
		"RegAddCityCorp": "DBX",\r
		"Add1CountryCorp": "UAE",\r
		"Add1StateCorp": "DAU",\r
		"Add1CityCorp": "DBX",\r
		"Add2CountryCorp": "",\r
		"Add2StateCorp": "",\r
		"Add2CityCorp": "",\r
		"VATRegistered":null\r
	}\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="UpdateAccountStatus" path="/api/BankSmart/UpdateAccountStatus" id="146ce774-c213-49eb-af00-a8e85c32955a">
      <con:settings/>
      <con:parameters/>
      <con:method name="UpdateAccountStatus" id="50107c0f-27ee-4c24-af3a-d50ba5c23a7a" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateAccountStatus">upd:Response</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateAccountStatus">upd:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element xmlns:upd="http://10.4.128.8/api/BankSmart/UpdateAccountStatus">upd:Fault</con:element>
        </con:representation>
        <con:request name="Activate Account" id="811fa04a-efaa-4e33-b850-5fb0f30e1cef" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
                 "signOnRq":{ \r
                "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
                  "DateTime":"2019-03-06T00:00:00",\r
                  "ChannelId":"1",\r
                 "OurBranchId":"01"},\r
				"AccountID":"0130000000000302",\r
				"Status":""\r
     }\r
     \r</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="DepositsDetails" path="/api/BankSmart/DepositsDetails" id="01b19ff5-08aa-4241-9064-046e874d191b">
      <con:settings/>
      <con:parameters/>
      <con:method name="DepositsDetails" id="f31d4391-30b2-4e7e-8123-ff3f347e97c3" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:dep="http://10.4.128.8/api/BankSmart/DepositsDetails">dep:Response</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:dep="http://10.4.128.8/api/BankSmart/DepositsDetails">dep:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element xmlns:dep="http://10.4.128.8/api/BankSmart/DepositsDetails">dep:Fault</con:element>
        </con:representation>
        <con:request name="DepositsDetails" id="8c48ae28-67d1-41fb-a914-00e726226f3f" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
	"SignOnRq": {\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime": "2019-03-06T00:00:00",\r
		"ChannelId": "5",\r
		"OurBranchId": "01"\r
	},\r
	"AccountID":"0102400000001801",\r
	"ReceiptID":"17"\r
	}\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="OpenFixDeposit" path="/api/BankSmart/OpenFixDeposit" id="a2e239fd-4703-4d1d-bde5-12b315479d0b">
      <con:settings/>
      <con:parameters/>
      <con:method name="OpenFixDeposit" id="27437237-ab58-4ef5-81a6-80df099b83a0" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:open="http://10.4.128.8/api/BankSmart/OpenFixDeposit">open:Fault</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:open="http://10.4.128.8/api/BankSmart/OpenFixDeposit">open:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:open="http://10.4.128.8/api/BankSmart/OpenFixDeposit">open:Fault</con:element>
        </con:representation>
        <con:request name="Open Fix Deposit" id="f29bff09-f748-4615-b26f-87e1c5123862" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{\r
	"SignOnRq": {\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime": "2019-03-06T00:00:00",\r
		"ChannelId": "5",\r
		"OurBranchId": "01"\r
	},\r
	"NoOfIssues":2,\r
	"TDRIssuance": {\r
		"ProductID": "TDR7D",\r
		"AccountID": "0102400000001801",\r
		"NAccount": "0100200000001801",\r
		"Amount": 20,\r
		"ExchangeRate": 1,\r
		"IssueDate": "2019-03-06T00:00:00",\r
		"StartDate": "2019-03-06T00:00:00",\r
		"MaturityDate": "2019-03-06T00:00:00",\r
		"Rate": 1,\r
		"AutoProfit": "Yes",\r
		"Monthly": "1",\r
		"Treatment": "Encashment",\r
		"PaymentPeriod":"Monthly",\r
		"AutoRollover": "Yes",\r
		"OptionsAtMaturity": "Principal Plus Profit Encashment"\r
	}\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetTransactionListCorporate" path="/api/BankSmart/GetTransactionListCorporate" id="c0951c8d-dd00-4b68-864c-88364e91d540">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetTransactionListCorporate" id="76851823-bd72-46cd-922e-fddb895adf85" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetTransactionListCorporate">get:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetTransactionListCorporate">get:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:get="http://10.4.128.8/api/BankSmart/GetTransactionListCorporate">get:Fault</con:element>
        </con:representation>
        <con:request name="Get Transaction List Corporate" id="9f7f6a61-f6f7-4e5e-9a2b-1148d618a58f" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
	
     "SignOnRq":{ 
               "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
                  "DateTime":"2019-03-06T00:00:00",
                 "ChannelId":"5",
               "OurBranchId":"01"},
               	"AccountID":"0150400000003701",
              "startdate":"2018-03-06T00:00:00",
              "enddate":"2020-03-06T00:00:00"
             
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CreateCorporateCIF" path="/api/BankSmart/CreateCorporateCIFV2" id="26541973-120c-42cb-b173-ecebfb2d143b">
      <con:settings/>
      <con:parameters/>
      <con:method name="CreateCorporateCIF" id="0557c2f5-a0d8-42d2-97f5-9551fa391b92" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:cre="http://null/api/BankSmart/CreateCorporateCIF">cre:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:cre="http://null/api/BankSmart/CreateCorporateCIF">cre:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>500 400 401</con:status>
          <con:params/>
          <con:element xmlns:cre="http://null/api/BankSmart/CreateCorporateCIF">cre:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/problem+json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:cre="http://null/api/BankSmart/CreateCorporateCIF">cre:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Create Corporate CIF" id="5d62baed-678d-4062-9083-7ab192d5d64e" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#pURL}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "Cust": {
        "Name": "fahad",
        "CategoryId": "Corporate",
        "RiskProfile": "Low",
        "EntityNameCorp": "abc ",
        "EntityTypeCorp": "FOC",
        "YearofestablishmentCorp": "2019-03-06",
        "RegisteredAddressCorp": "abc",
        "ContactName1Corp": "Fahad",
        "ContactID1Corp": "abc",
        "IDTypeCorp": "DLL",
        "Address1Corp": "abc",
        "PhoneNumberCorp": "0090998",
        "AlternatePhonenumberCorp": null,
        "EmailIDCorp": "fahad_Ali1003@hotmail.com",
        "ContactName2Corp": "",
        "ContactID2Corp": "",
        "IDType2": "",
        "Address2Corp": "",
        "PhoneNumber2Corp": null,
        "AlternatePhonenumber2Corp": null,
        "EmailID2Corp": "",
        "SICCodesCorp": "110",
        "IndustryCorp": "MFT",
        "TradeLicenseNumberCorp": "585858856",
        "CountryofIncorporationCorp": "UAE",
        "TradeLicenseIssuedateCorp": "2019-03-06",
        "TradeLicenseExpirydateCorp": "2022-03-06",
        "TradeLicenseIssuanceAuthorityCorp": "abc",
        "TRNNoCorp": "",
        "PEPCorp": "Y",
        "BlackListCorp": "",
        "KYCReviewDateCorp": "2019-03-06",
        "FATCARelevantCorp": "Y",
        "CRSRelevantCorp": "Y",
        "USAEntityCorp": "Y",
        "FFICorp": "Y",
        "FFICategoryCorp": null,
        "GIINNoCorp": "",
        "GIINNACorp": "",
        "SponsorNameCorp": "",
        "SponsorGIIN": "",
        "NFFECorp": null,
        "StockExchangeCorp": "",
        "TradingSymbolCorp": "",
        "USAORUAECorp": "Y",
        "TINAvailableCorp": "",
        "TinNo1Corp": "1",
        "TaxCountry1Corp": "",
        "TinNo2Corp": "",
        "TaxCountry2Corp": "",
        "TinNo3Corp": "",
        "TaxCountry3Corp": "",
        "TinNo4Corp": "",
        "TaxCountry4Corp": "",
        "TinNo5Corp": "",
        "TaxCountry5Corp": "",
        "FATCANoReasonCorp": "Reason B",
        "ReasonBCorp": "",
        "CompanyWebsite": "",
        "CompCashIntensive": "Y",
        "PubLimCompCorp": "Y",
        "RegAddCountryCorp": "UAE",
        "REGADDSTATECORP": "DAU",
        "RegAddCityCorp": "DBX",
        "Add1CountryCorp": "UAE",
        "Add1StateCorp": "DAU",
        "Add1CityCorp": "DBX",
        "Add2CountryCorp": "",
        "Add2StateCorp": "",
        "Add2CityCorp": "",
        "VATRegistered": null
    },
    "ShareHolders": [
        {
            "ShareHolderName": "fahad",
            "ShareHolderAddress": "5c",
            "ShareholderType": "COM",
            "ShareholdersIDtype": "DLL",
            "ShareholdersIDNo": "123",
            "ShareholdersIDExpirydate": "2019-03-06",
            "CountryofIncorporation": "UAE",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "UAE",
            "OwnershipPercentage": 123,
            "Blacklist": "",
            "PEP": "Y",
            "FATCARelevant": "Y",
            "CRSRelevant": "Y",
            "USCitizen": "Y",
            "AreyouaUSTaxResident": "Y",
            "WereyoubornintheUS": "Y",
            "USAEntity": "",
            "FFI": "",
            "FFICategory": "",
            "GIINNo": "",
            "GIINNA": "",
            "SponsorName": "",
            "SponsorGIIN": "",
            "NFFE": "",
            "StockExchange": "",
            "TradingSymbol": "",
            "USAORUAE": "Y",
            "TINAvailable": "",
            "TinNo1": "",
            "TaxCountry1": "",
            "TinNo2": "",
            "TaxCountry2": "",
            "TinNo3": "",
            "TaxCountry3": "",
            "TinNo4": "",
            "TaxCountry4": "",
            "TinNo5": "",
            "TaxCountry5": "",
            "FATCANoReason": "Reason A",
            "ReasonB": "",
            "SHCity": "DBX",
            "SHState": "DAU",
            "SHCountry": "UAE",
            "SHIDIssuanceCountry": "UAE",
            "IDGender": "M",
            "DateOfBirth": "2019-03-06",
            "IDNationality": "UAE"
        }
    ],
    "Authignatories": [
        {
            "AuthorisedsignatoriesName": "fahad",
            "PhoneNumber": "123123",
            "EmailID": "faha@dhotmai",
            "CorrespondenceAddress": "4/x",
            "AuthorisedsignatoryIDtype1": "DLL",
            "AuthorisedsignatoryIDNumber1": "112312",
            "AuthorisedsignatoryIDExpirydate1": "2019-03-06",
            "AuthorisedsignatoryIDIssueCountry1": "UAE",
            "AuthorisedsignatoryIDtype2": "DLL",
            "AuthorisedsignatoryIDNumber2": "123",
            "AuthorisedsignatoryIDExpirydate2": "2019-03-06",
            "AuthorisedsignatoryIDIssueCountry2": "UAE",
            "AuthorisedsignatoryVisaIssuedby": "fahad",
            "AuthorisedsignatoryVisaNumber": "123",
            "AuthorisedsignatoryVisaExpiry": "2019-03-06",
            "Remarks": "test",
            "Blacklist": "",
            "PEP": "Y",
            "FATCARelevant": "Y",
            "CRSRelevant": "Y",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "Y",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "Y",
            "TINAvailable": "",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": "",
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "",
            "ReasonB": "",
            "ASCity": "DBX",
            "ASState": "DAU",
            "ASCountry": "UAE",
            "IDGender": "M",
            "DateOfBirth": "2019-03-06",
            "IDNationality": "UAE"
        }
    ],
    "BoardDirectors": [
        {
            "BoardDirectorName": "fahad",
            "Designation": "president",
            "BoardDirectorAddress": "4/c",
            "BoardDirectorIDExpirydate": "2019-03-06",
            "ResidentNonResident": "N",
            "CountryofResidence": "UAE",
            "BoardDirectorIDtype": "DLL",
            "BoardDirectorIDNo": "123123",
            "Blacklist": "",
            "PEP": "Y",
            "FATCARelevant": "Y",
            "CRSRelevant": "Y",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "Y",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "Y",
            "TINAvailable": "",
            "TinNo1": "",
            "TaxCountry1": null,
            "TinNo2": "",
            "TaxCountry2": null,
            "TinNo3": "",
            "TaxCountry3": null,
            "TinNo4": "",
            "TaxCountry4": null,
            "TinNo5": "",
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": "",
            "BDCity": "DBX",
            "BDState": "DAU",
            "BDCountry": "UAE",
            "IDGender": "M",
            "DateOfBirth": "2019-03-06",
            "IDNationality": "UAE"
        }
    ],
    "BeneficialOwners": [
        {
            "BeneficialName": "fahad",
            "BeneficialAddress": "4/c",
            "BeneficialIDNo": "1212",
            "BeneficialIDExpirydate": "2019-03-06",
            "ResidentNonResident": "Y",
            "CountryOfResidence": "UAE",
            "BeneficialIDtype": "DLL",
            "Blacklist": "",
            "PEP": "Y",
            "FATCARelevant": "Y",
            "CRSRelevant": "Y",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "Y",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "Y",
            "TINAvailable": "",
            "TinNo1": "",
            "TaxCountry1": null,
            "TinNo2": "",
            "TaxCountry2": null,
            "TinNo3": "",
            "TaxCountry3": null,
            "TinNo4": "",
            "TaxCountry4": null,
            "TinNo5": "",
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": "",
            "BOCity": "DBX",
            "BOState": "DAU",
            "BOCountry": "UAE",
            "IDGender": "M",
            "DateOfBirth": "2019-03-06",
            "IDNationality": "UAE"
        }
    ]
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
            <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
            <con:authType>Global HTTP Settings</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="DepositsList" path="" id="0d84c095-af55-4e5a-ab8f-c851a6d44dfc">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of DepositsList" path="/api/BankSmart/DepositsList" id="4622bd86-97ef-410b-9e78-bb8d57dadb2f">
        <con:settings/>
        <con:parameters/>
        <con:method name="DepositsList" id="dfd7eaa3-7a99-49a2-9aae-a7a624be15d5" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:dep="http://null/api/BankSmart/DepositsList">dep:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:dep="http://null/api/BankSmart/DepositsList">dep:Fault</con:element>
          </con:representation>
          <con:request name="Deposits List" id="6cdfb268-0ea5-4eea-a242-97b932ec8a02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
	"SignOnRq": {
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
		"DateTime": "2019-03-06T00:00:00",
		"ChannelId": "10",
		"OurBranchId": "01"
	},
"clientID": "000009293"
	}</con:request>
            <con:originalUri>http://null/api/BankSmart/DepositsList</con:originalUri>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="OpenFDAccount" path="" id="141d7557-02ac-4fc1-ae73-e3269804e4b9">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of OpenFDAccount" path="/api/BankSmart/OpenFDAccount" id="f5326a55-30c1-43a0-bac0-51cc4c1ec5f9">
        <con:settings/>
        <con:parameters/>
        <con:method name="OpenFDAccount" id="35716d01-1560-4aff-952b-96bcbdda14fc" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:open="http://10.4.128.8/api/BankSmart/OpenFDAccount">open:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:open="http://10.4.128.8/api/BankSmart/OpenFDAccount">open:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:open="http://10.4.128.8/api/BankSmart/OpenFDAccount">open:Fault</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>text/html;charset=utf-8</con:mediaType>
            <con:status>403</con:status>
            <con:params/>
            <con:element>html</con:element>
          </con:representation>
          <con:request name="Open FD Account" id="41fe8948-e550-447f-838a-5e903c3b0480" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
"SignOnRq":{
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
    "DateTime": "2019-03-06T00:00:00",
    "ChannelId": "10",
    "OurBranchId": "01"
},
"ClientID":"000009293",
"ProductID":"TDR1Y"
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/OpenFDAccount</con:originalUri>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="CalculateMaturityDate" path="" id="3935a12f-354d-4209-96b8-445899563d06">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of CalculateMaturityDate" path="/api/BankSmart/CalculateMaturityDate" id="13bd4b29-1ffd-488c-b769-c6dace49c067">
        <con:settings/>
        <con:parameters/>
        <con:method name="CalculateMaturityDate" id="5b95aaea-4e01-46c1-b738-6c2b339ad7f7" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:cal="http://10.4.128.8/api/BankSmart/CalculateMaturityDate">cal:Response</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:cal="http://10.4.128.8/api/BankSmart/CalculateMaturityDate">cal:Fault</con:element>
          </con:representation>
          <con:request name="Calculate Maturity Date" id="da25c2ae-04cc-4bc7-9915-0b47d577d094" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
	"SignOnRq": {
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
		"DateTime": "2019-03-06T00:00:00",
		"ChannelId": "10",
		"OurBranchId": "01"
	},
	"ProductID": "TDR1Y",
	"ValueDate": "2019-10-01T00:00:00",
	"Rate":1.2,
	"Amount":10
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/CalculateMaturityDate</con:originalUri>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="BalanceInquiry" path="" id="e53d56e5-d0c8-4017-b1b8-c4e838214742">
      <con:settings/>
      <con:parameters/>
      <con:resource name="BalanceInquiry" path="/api/BankSmart/BalanceInquiry" id="06a80d64-c65a-4a2f-a3ea-a17e7175e69d">
        <con:settings/>
        <con:parameters/>
        <con:method name="BalanceInquiry" id="e40e24c6-9ca7-406d-abb3-42dc2fd32226" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:bal="http://10.4.128.8/api/BankSmart/BalanceInquiry">bal:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:bal="http://10.4.128.8/api/BankSmart/BalanceInquiry">bal:Response</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>500</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400 401</con:status>
            <con:params/>
            <con:element xmlns:bal="http://10.4.128.8/api/BankSmart/BalanceInquiry">bal:Fault</con:element>
          </con:representation>
          <con:request name="Balance Inquiry" id="31706188-18bd-4631-9724-4171df9e80bf" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "3365cc3d-5c29-487a-a8fa-be6e413ee571",
        "DateTime": "2019-09-05T09:15:12.0270941+00:00",
        "ChannelId": "1",
        "OurBranchId": "01"
    },
    "AccountId": "0150100001441601"
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/BalanceInquiry</con:originalUri>
            <con:credentials>
              <con:username>vendor1-erc</con:username>
              <con:password>Lkjh123!@#</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="transfer" path="" id="1fd4d2ce-ff6a-49b8-a54e-6840568e33aa">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Transfer" path="/api/BankSmart/transfer" id="acff6d8e-bdf5-406b-94e6-e36e01d42e74">
        <con:settings/>
        <con:parameters/>
        <con:method name="Transfer" id="6285c338-e1de-4536-8282-7c2ce739fe69" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:tran="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer">tran:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:tran="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer">tran:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:tran="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer">tran:Fault</con:element>
          </con:representation>
          <con:request name="Local Transfer" id="9f92a562-d89d-4b06-b7d2-4dc66f1d635a" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-10-01T00:00:00",
        "ChannelId": "1",
        "OurBranchId": "01"
    },
    "ChannelRefId": "101010",
    "TransferEntries": [
        {
            "AccountId": "1010101001",
            "AccountType": "G",
            "EntryType": "D",
            "CurrencyID": "AED",
            "Amount": 50000,
            "ExchangeRate": 1,
            "LocalEq": 50000,
            "NarrationId": "103",
            "Memo": "Test"
        },
        {
            "AccountId": "0150100001875301",
            "AccountType": "C",
            "EntryType": "C",
            "CurrencyID": "AED",
            "Amount": 50000,
            "ExchangeRate": 1,
            "LocalEq": 50000,
            "NarrationId": "102",
            "Memo": "Test"
        }
    ]
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer</con:originalUri>
            <con:credentials>
              <con:username>vendor1-erc</con:username>
              <con:password>Lkjh123!@#</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="Multibranch" path="" id="638116fe-198a-4fa6-a250-dd664b5725c6">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Multibranch" path="/api/BankSmart/Multibranch" id="acff6d8e-bdf5-406b-94e6-e36e01d42e74">
        <con:settings/>
        <con:parameters/>
        <con:method name="Multibranch" id="6285c338-e1de-4536-8282-7c2ce739fe69" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:tran="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer">tran:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:tran="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer">tran:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400 401</con:status>
            <con:params/>
            <con:element xmlns:tran="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer">tran:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:request name="Multibranch" id="9f92a562-d89d-4b06-b7d2-4dc66f1d635a" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "${=java.util.UUID.randomUUID()}",
        "DateTime": "2020-03-07T00:00:00",
        "ChannelId": "9",
        "OurBranchId": "01"
    },
    "ChannelRefId": "8675384758394788",
    "TransferEntries": [
        {
            "branchID": "03",
            "AccountId": "1010110001784",
            "AccountType": "G",
            "EntryType": "D",
            "CurrencyID": "AED",
            "Amount": 100,
            "ExchangeRate": 1,
            "CoverRate": 1,
            "LocalEq": 100,
            "NarrationId": "200010",
            "Memo": "incoming domestic transfer from Account ID:1010110001784",
            "valueDate": "",
            "chequeID": "",
            "chequeDate": ""
        },
        {
            "BranchID": "03",
            "AccountId": "0310100022110101",
            "AccountType": "C",
            "EntryType": "C",
            "CurrencyID": "AED",
            "Amount": 100,
            "ExchangeRate": 1,
            "CoverRate": 1,
            "LocalEq": 100,
            "NarrationId": "100010",
            "Memo": "incoming domestic transfer to Account ID:0310100022110101 ",
            "valueDate": "",
            "chequeID": "",
            "chequeDate": ""
        }
    ]
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer</con:originalUri>
            <con:credentials>
              <con:username>vendor9-erc</con:username>
              <con:password>P@ssw0rd9</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="GetBasicAccountInquiry" path="" id="c1f9c6b6-f0c2-4903-91b5-1e5f3f71cd5f">
      <con:settings/>
      <con:parameters/>
      <con:resource name="GetBasicAccountInquiry" path="/api/BankSmart/GetBasicAccountInquiry" id="06a80d64-c65a-4a2f-a3ea-a17e7175e69d">
        <con:settings/>
        <con:parameters/>
        <con:method name="GetBasicAccountInquiry" id="e40e24c6-9ca7-406d-abb3-42dc2fd32226" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:bal="http://10.4.128.8/api/BankSmart/BalanceInquiry">bal:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:bal="http://10.4.128.8/api/BankSmart/BalanceInquiry">bal:Response</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>500</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>text/html;charset=utf-8</con:mediaType>
            <con:status>403</con:status>
            <con:params/>
            <con:element>html</con:element>
          </con:representation>
          <con:request name="GetBasicAccountInquiry" id="31706188-18bd-4631-9724-4171df9e80bf" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "3365cc3d-5c29-487a-a8fa-be6e413ee571",
        "DateTime": "2019-09-05T09:15:12.0270941+00:00",
        "ChannelId": "9",
        "OurBranchId": "01"
    },
    "AccountId": "0150100001441601"
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/BalanceInquiry</con:originalUri>
            <con:credentials>
              <con:username>vendor9-erc</con:username>
              <con:password>P@ssw0rd9</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="FDPartialWithdrawal" path="" id="0c2bac78-a9a9-4f36-8b7d-6cc2ba010366">
      <con:settings/>
      <con:parameters/>
      <con:resource name="FDPartialWithdrawal" path="/api/BankSmart/FDPartialWithdrawal" id="d8a3173c-710e-489a-a160-56b678e4e19d">
        <con:settings/>
        <con:parameters/>
        <con:method name="FDPartialWithdrawal" id="8b810569-7637-4052-b310-86c570f3a595" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400 401</con:status>
            <con:params/>
            <con:element xmlns:fdp="http://10.4.128.10/api/BankSmart/FDPartialWithdrawal">fdp:Fault</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>text/html;charset=utf-8</con:mediaType>
            <con:status>403</con:status>
            <con:params/>
            <con:element>html</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:fdp="http://https/waqfepayment.gslb.uat.eradahcapital.com:443/api/BankSmart/FDPartialWithdrawal">fdp:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:fdp="http://https/waqfepayment.gslb.uat.eradahcapital.com:443/api/BankSmart/FDPartialWithdrawal">fdp:Response</con:element>
          </con:representation>
          <con:request name="FDPartialWithdrawal" id="c460907d-0adf-4ee8-ac1e-33082ac102c7" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
	"SignOnRq": {
		"LogId": "2556704b-bdf9-4849-9c27-6f42bcc536d6",
		"DateTime": "2019-03-06T00:00:00",
		"ChannelId": "10",
		"OurBranchId": "03"
	},
	"ReceiptID": "999",
	"AccountID": "0325600014032601",
	"preMatureRate":"2",
	"newReceiptRate":"40",
	"PartialAmount": 5000,
	"Penalty":"N",
	"PenaltyType":"R",
	"PenaltyAmount":"0",
	"penaltyRate":"0"
}</con:request>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="CloseFixedDeposit" path="" id="bea2e266-f290-42d5-83cb-ca250ac8b7de">
      <con:settings/>
      <con:parameters/>
      <con:resource name="CloseFixedDeposit" path="/api/BankSmart/CloseFixedDeposit" id="d8a3173c-710e-489a-a160-56b678e4e19d">
        <con:settings/>
        <con:parameters/>
        <con:method name="CloseFixedDeposit" id="8b810569-7637-4052-b310-86c570f3a595" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:fdp="http://10.4.128.10/api/BankSmart/FDPartialWithdrawal">fdp:Fault</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:clos="https://waqfepayment.gslb.uat.eradahcapital.com/api/BankSmart/CloseFixedDeposit">clos:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:clos="https://waqfepayment.gslb.uat.eradahcapital.com/api/BankSmart/CloseFixedDeposit">clos:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>text/html;charset=utf-8</con:mediaType>
            <con:status>403</con:status>
            <con:params/>
            <con:element>html</con:element>
          </con:representation>
          <con:request name="CloseFixedDeposit" id="c460907d-0adf-4ee8-ac1e-33082ac102c7" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{
	"SignOnRq": {
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acd6fb0665e3",
		"DateTime": "2019-03-06T00:00:00",
		"ChannelId": "10",
		"OurBranchId": "03"
	},
	"ReceiptID": "1",
	"AccountID": "0325600000030201",
	"Penalty":"N",
	"PenaltyType":"R",
	"PenaltyAmount":"1",
	"PenaltyRate":"1",
	"ZeroInterest":"N",
	"preMatureRate":"10.0"
}</con:request>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="AddShareholder" path="" id="594fa873-1852-446c-b9eb-e6ec02152ff3">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of AddShareHolder" path="/api/BankSmart/AddShareHolder" id="ca9a8f8c-3f6c-42be-98ab-9d8947114b8c">
        <con:settings/>
        <con:parameters/>
        <con:method name="AddShareHolder" id="49a19a6b-796a-4a28-9aaa-7b77c891d80d" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:add="https://waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/AddShareHolder">add:Fault</con:element>
          </con:representation>
          <con:request name="Add  Share Holder" id="e3fa45ae-a57c-4a6b-a839-4eb18b9a6328" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "ShareHolder":{\r
  	"ShareHolderName": "salman",\r
			"ShareHolderAddress": "5c",\r
			"ShareholderType": "COM",\r
			"ShareholdersIDtype": "DLL",\r
			"ShareholdersIDNo": "123",\r
			"ShareholdersIDExpirydate": "2019-03-06",\r
			"CountryofIncorporation": "UAE",\r
			"BoardMember": "Y",\r
			"AuthorisedSignatory": "Y",\r
			"BeneficialOwner": "Y",\r
			"ResidentNonResident": "N",\r
			"CountryofResidence": "UAE",\r
			"OwnershipPercentage": 123,\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"USCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAEntity": "",\r
			"FFI": "",\r
			"FFICategory": "",\r
			"GIINNo": "",\r
			"GIINNA": "",\r
			"SponsorName": "",\r
			"SponsorGIIN": "",\r
			"NFFE": "",\r
			"StockExchange": "",\r
			"TradingSymbol": "",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": "",\r
			"TaxCountry1": "",\r
			"TinNo2": "",\r
			"TaxCountry2": "",\r
			"TinNo3": "",\r
			"TaxCountry3": "",\r
			"TinNo4": "",\r
			"TaxCountry4": "",\r
			"TinNo5": "",\r
			"TaxCountry5": "",\r
			"FATCANoReason": "Reason A",\r
			"ReasonB": "",\r
			"SHCity": "DBX",\r
			"SHState": "DAU",\r
			"SHCountry": "UAE",\r
			"SHIDIssuanceCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
  }\r
}</con:request>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="UpdateShareholder" path="" id="e53085a6-2ed0-4947-a3cc-1cadf8efa65c">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of UpdateShareHolder" path="/api/BankSmart/UpdateShareHolder" id="b15d7451-25f4-4e0b-ad51-ff54ed52b984">
        <con:settings/>
        <con:parameters/>
        <con:method name="UpdateShareHolder" id="eccecdb2-2234-4a25-a7e3-fde0f6ca92eb" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>401</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateShareHolder">upd:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateShareHolder">upd:Response</con:element>
          </con:representation>
          <con:request name="Update Share Holder" id="719fff5e-3685-4815-b5a5-2ec285a17b36" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "ShareHolder":{\r
  	"ShareHolderID":301,\r
  	"ShareHolderName": "salman",\r
			"ShareHolderAddress": "5c",\r
			"ShareholderType": "COM",\r
			"ShareholdersIDtype": "DLL",\r
			"ShareholdersIDNo": "123",\r
			"ShareholdersIDExpirydate": "2019-03-06",\r
			"CountryofIncorporation": "UAE",\r
			"BoardMember": "Y",\r
			"AuthorisedSignatory": "Y",\r
			"BeneficialOwner": "Y",\r
			"ResidentNonResident": "N",\r
			"CountryofResidence": "UAE",\r
			"OwnershipPercentage": 123,\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"USCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAEntity": "",\r
			"FFI": "",\r
			"FFICategory": "",\r
			"GIINNo": "",\r
			"GIINNA": "",\r
			"SponsorName": "",\r
			"SponsorGIIN": "",\r
			"NFFE": "",\r
			"StockExchange": "",\r
			"TradingSymbol": "",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": "",\r
			"TaxCountry1": "",\r
			"TinNo2": "",\r
			"TaxCountry2": "",\r
			"TinNo3": "",\r
			"TaxCountry3": "",\r
			"TinNo4": "",\r
			"TaxCountry4": "",\r
			"TinNo5": "",\r
			"TaxCountry5": "",\r
			"FATCANoReason": "Reason A",\r
			"ReasonB": "",\r
			"SHCity": "DBX",\r
			"SHState": "DAU",\r
			"SHCountry": "UAE",\r
			"SHIDIssuanceCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
  }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateShareHolder</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="AddBeneficialOwners" path="" id="f5a805b6-c248-4d50-8ef4-0eafe075d968">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of AddBeneficialOwners" path="/api/BankSmart/AddBeneficialOwners" id="ae5ba8cb-33e5-4cf7-9bd7-627902f3979e">
        <con:settings/>
        <con:parameters/>
        <con:method name="AddBeneficialOwners" id="f67b4e34-ba25-46e9-808b-1c7b9ce8a9ed" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>401</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:add="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddBeneficialOwners">add:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:add="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddBeneficialOwners">add:Fault</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400 401</con:status>
            <con:params/>
            <con:element xmlns:add="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddBeneficialOwners">add:Fault</con:element>
          </con:representation>
          <con:request name="Add BeneficialOwners" id="fbd0f30a-4fe9-4618-b0f4-f71093e3d4ce" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "BeneficialOwners":{\r
				"BeneficialName": "fahad",\r
			"BeneficialAddress": "4/c",\r
			"BeneficialIDNo": "1212",\r
			"BeneficialIDExpirydate": "2019-03-06",\r
			"ResidentNonResident": "Y",\r
			"CountryOfResidence": "UAE",\r
			"BeneficialIDtype": "DLL",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": "",\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": "",\r
			"TaxCountry3": null,\r
			"TinNo4": "",\r
			"TaxCountry4": null,\r
			"TinNo5": "",\r
			"TaxCountry5": null,\r
			"FATCANoReason": "Reason A",\r
			"ReasonB": "",\r
			"BOCity": "DBX",\r
			"BOState": "DAU",\r
			"BOCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
  }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddBeneficialOwners</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="UpdateBeneficialOwners" path="" id="2068cda6-fcf0-4ea4-a34a-5ddb0066aad0">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of UpdateBeneficialOwners" path="/api/BankSmart/UpdateBeneficialOwners" id="01b1b6e8-49aa-44f1-a9fa-a578d84b6034">
        <con:settings/>
        <con:parameters/>
        <con:method name="UpdateBeneficialOwners" id="243748bb-5676-4b9f-ab9c-f89bd95cb910" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>401</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBeneficialOwners">upd:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBeneficialOwners">upd:Fault</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBeneficialOwners">upd:Fault</con:element>
          </con:representation>
          <con:request name="Update BeneficialOwners" id="00c9581f-9ae9-41ec-bacb-79e199eba366" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "BeneficialOwners":{\r
  	"BeneficialOwnersID":55,\r
				"BeneficialName": "fahad",\r
			"BeneficialAddress": "4/c",\r
			"BeneficialIDNo": "1212",\r
			"BeneficialIDExpirydate": "2019-03-06",\r
			"ResidentNonResident": "Y",\r
			"CountryOfResidence": "UAE",\r
			"BeneficialIDtype": "DLL",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": "",\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": "",\r
			"TaxCountry3": null,\r
			"TinNo4": "",\r
			"TaxCountry4": null,\r
			"TinNo5": "",\r
			"TaxCountry5": null,\r
			"FATCANoReason": "Reason A",\r
			"ReasonB": "",\r
			"BOCity": "DBX",\r
			"BOState": "DAU",\r
			"BOCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
  }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBeneficialOwners</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="AddBoardDirectors" path="" id="9cd16d2c-aa4c-4398-b6a0-8ce28f8109c1">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of AddBoardDirectors" path="/api/BankSmart/AddBoardDirectors" id="f5dc0397-bc2b-4722-b401-845f7ba038d8">
        <con:settings/>
        <con:parameters/>
        <con:method name="AddBoardDirectors" id="92278b50-a47d-4607-9a0a-5cf485804ca8" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>401</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400 401</con:status>
            <con:params/>
            <con:element xmlns:add="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddBoardDirectors">add:Fault</con:element>
          </con:representation>
          <con:request name="Add  BoardDirectors" id="6bcb7a04-939b-4903-97af-fd45e30385df" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "BoardDirectors":{\r
"BoardDirectorName": "fahad",\r
			"Designation": "president",\r
			"BoardDirectorAddress": "4/c",\r
			"BoardDirectorIDExpirydate": "2019-03-06",\r
			"ResidentNonResident": "N",\r
			"CountryofResidence": "UAE",\r
			"BoardDirectorIDtype": "DLL",\r
			"BoardDirectorIDNo": "123123",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": "",\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": "",\r
			"TaxCountry3": null,\r
			"TinNo4": "",\r
			"TaxCountry4": null,\r
			"TinNo5": "",\r
			"TaxCountry5": null,\r
			"FATCANoReason": "Reason A",\r
			"ReasonB": "",\r
			"BDCity": "DBX",\r
			"BDState": "DAU",\r
			"BDCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
  }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddBoardDirectors</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="UpdateBoardDirectors" path="" id="94f4bf7c-a244-43b0-8a3b-6a3f9334c901">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of UpdateBoardDirectors" path="/api/BankSmart/UpdateBoardDirectors" id="86f6e475-0157-4663-ba3b-4573c54a0785">
        <con:settings/>
        <con:parameters/>
        <con:method name="UpdateBoardDirectors" id="a1b0cb97-80c1-4115-9ecc-82916b50d456" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="FAULT">
            <con:mediaType xsi:nil="true"/>
            <con:status>401</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBoardDirectors">upd:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBoardDirectors">upd:Response</con:element>
          </con:representation>
          <con:request name="Update BoardDirectors" id="71a870e1-1c94-4ff1-ad98-a80cb7266017" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "BoardDirectors":{\r
  	"BoardDirector":65,\r
"BoardDirectorName": "fahad",\r
			"Designation": "president",\r
			"BoardDirectorAddress": "4/c",\r
			"BoardDirectorIDExpirydate": "2019-03-06",\r
			"ResidentNonResident": "N",\r
			"CountryofResidence": "UAE",\r
			"BoardDirectorIDtype": "DLL",\r
			"BoardDirectorIDNo": "123123",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": "",\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": "",\r
			"TaxCountry3": null,\r
			"TinNo4": "",\r
			"TaxCountry4": null,\r
			"TinNo5": "",\r
			"TaxCountry5": null,\r
			"FATCANoReason": "Reason A",\r
			"ReasonB": "",\r
			"BDCity": "DBX",\r
			"BDState": "DAU",\r
			"BDCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
  }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateBoardDirectors</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="AddAuthorisedSignatories" path="" id="958413a2-82cd-4200-93cf-e598617d8383">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of AddAuthorisedSignatories" path="/api/BankSmart/AddAuthorisedSignatories" id="4c47fd75-a287-4ec7-82f7-61642c80319f">
        <con:settings/>
        <con:parameters/>
        <con:method name="AddAuthorisedSignatories" id="7861d37a-9107-48d8-a0e9-03ae0609a5b1" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>//Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:add="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddAuthorisedSignatories">add:Fault</con:element>
          </con:representation>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>401 400</con:status>
            <con:params/>
            <con:element xmlns:add="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddAuthorisedSignatories">add:Fault</con:element>
          </con:representation>
          <con:request name="Add AuthorisedSignatories" id="826e3856-323f-4434-a5f3-529600be18e1" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "AuthorisedSignatories":{\r
  	"AuthorisedsignatoriesName": "fahad",\r
			"PhoneNumber": "123123",\r
			"EmailID": "fahad@hotmail.com",\r
			"CorrespondenceAddress": "4/x",\r
			"AuthorisedsignatoryIDtype1": "DLL",\r
			"AuthorisedsignatoryIDNumber1": "112312",\r
			"AuthorisedsignatoryIDExpirydate1": "2019-03-06",\r
			"AuthorisedsignatoryIDIssueCountry1": "UAE",\r
			"AuthorisedsignatoryIDtype2": "DLL",\r
			"AuthorisedsignatoryIDNumber2": "123",\r
			"AuthorisedsignatoryIDExpirydate2": "2019-03-06",\r
			"AuthorisedsignatoryIDIssueCountry2": "UAE",\r
			"AuthorisedsignatoryVisaIssuedby": "fahad",\r
			"AuthorisedsignatoryVisaNumber": "123",\r
			"AuthorisedsignatoryVisaExpiry": "2019-03-06",\r
			"Remarks": "test",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": null,\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": null,\r
			"TaxCountry3": null,\r
			"TinNo4": null,\r
			"TaxCountry4": null,\r
			"TinNo5": null,\r
			"TaxCountry5": null,\r
			"FATCANoReason": "",\r
			"ReasonB": "",\r
			"ASCity": "DBX",\r
			"ASState": "DAU",\r
			"ASCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
		 }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddAuthorisedSignatories</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="//Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>//Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="UpdateAuthorisedSignatories" path="" id="57a1a119-856d-4c13-99dd-1f104ecc8e7c">
      <con:settings/>
      <con:parameters/>
      <con:resource name="Copy of UpdateAuthorisedSignatories" path="/api/BankSmart/UpdateAuthorisedSignatories" id="ef3b3e25-e721-4fcb-a7f7-a3d67d97aa7b">
        <con:settings/>
        <con:parameters/>
        <con:method name="UpdateAuthorisedSignatories" id="b6856302-5cc9-4fc7-8d1d-c885d86c34ca" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>//Authorization</con:name>
              <con:value>Basic Og==</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateAuthorisedSignatories">upd:Fault</con:element>
          </con:representation>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateAuthorisedSignatories">upd:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:upd="http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateAuthorisedSignatories">upd:Response</con:element>
          </con:representation>
          <con:request name="Update AuthorisedSignatories" id="edd6c25b-ab74-47b7-bd0f-e53060835045" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "5",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"000000139",\r
  "AuthorisedSignatories":{\r
  	"AuthorisedSignatoriesID":77,\r
  	"AuthorisedsignatoriesName": "fahad",\r
			"PhoneNumber": "123123",\r
			"EmailID": "fahad@hotmail.com",\r
			"CorrespondenceAddress": "4/x",\r
			"AuthorisedsignatoryIDtype1": "DLL",\r
			"AuthorisedsignatoryIDNumber1": "112312",\r
			"AuthorisedsignatoryIDExpirydate1": "2019-03-06",\r
			"AuthorisedsignatoryIDIssueCountry1": "UAE",\r
			"AuthorisedsignatoryIDtype2": "DLL",\r
			"AuthorisedsignatoryIDNumber2": "123",\r
			"AuthorisedsignatoryIDExpirydate2": "2019-03-06",\r
			"AuthorisedsignatoryIDIssueCountry2": "UAE",\r
			"AuthorisedsignatoryVisaIssuedby": "fahad",\r
			"AuthorisedsignatoryVisaNumber": "123",\r
			"AuthorisedsignatoryVisaExpiry": "2019-03-06",\r
			"Remarks": "test",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": null,\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": null,\r
			"TaxCountry3": null,\r
			"TinNo4": null,\r
			"TaxCountry4": null,\r
			"TinNo5": null,\r
			"TaxCountry5": null,\r
			"FATCANoReason": "",\r
			"ReasonB": "",\r
			"ASCity": "DBX",\r
			"ASState": "DAU",\r
			"ASCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE",\r
			"GroupID": "A",\r
			"SignUpload": ""\r
  }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/UpdateAuthorisedSignatories</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="//Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>//Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="documents" path="/e-channels-global-uat/api/documents" id="0a99dffd-26de-49d5-b142-3819f8fe24f5">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="c084e474-d908-4d6d-9676-4e087f894da6" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=UTF-8</con:mediaType>
          <con:status>401 408 500</con:status>
          <con:params/>
          <con:element xmlns:doc="https://mule-dev.gslb.shd.eradahcapital.com/e-channels-global-uat/api/documents">doc:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=UTF-8</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:element>Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="e8bb296f-7996-4048-831b-75148ace65b6" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
          <con:request>{
"content": "",
"name": "tradelicense.pdf",
"correlationId": "{{uuid}}",
"type": "tradeLicense",
"scope": [
"_TradeLicesneType","_LicenseNo","_EntityType","_TradeName","_CompanyName","_IssueDate","_ExpiryDate","_Activity","_Address","_POBox","_Manager","_LicenseMembers"
]
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CloseAccount" path="/api/BankSmart/CloseAccount" id="20304a87-84b2-4622-9240-640d716904f4">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="1841cf98-941c-407e-95e4-061d09101777" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Authorization</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400 401</con:status>
          <con:params/>
          <con:element xmlns:clos="https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/CloseAccount">clos:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:clos="https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/CloseAccount">clos:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:clos="https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/CloseAccount">clos:Response</con:element>
        </con:representation>
        <con:request name="Request 1" id="44936d01-9464-4fc9-8da6-5ce2b0b42f86" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
          <con:request>{

	"SignOnRq": {
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
		"DateTime": "2019-03-06T00:00:00",
		"ChannelId": "5",
		"OurBranchId": "${CreateCorporateAccount#Request#$['SignOnRq']['OurBranchId']}"
		
	},
	"AccountId":"${CreateCorporateAccount#Response#$['content']['accountID']}"</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="UpdateCifStatus" path="/api/BankSmart/UpdateCifStatus" id="74aa0d95-aee6-485a-b1c8-aaa36bed8f5f">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="d09abe23-cc28-4295-94a2-39dc0f593d53" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Authorization</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element xmlns:upd="https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/UpdateCifStatus">upd:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:upd="https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/UpdateCifStatus">upd:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:upd="https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/UpdateCifStatus">upd:Fault</con:element>
        </con:representation>
        <con:request name="Request 1" id="ce91a8e2-ac89-423c-ab6b-c99aef1d5c88" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:interface xsi:type="con:RestService" id="76b3bcb0-6156-471b-9f42-7c16f48eb15f" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://${#Project#url} 2" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>http://${#Project#url}</con:endpoint>
    </con:endpoints>
    <con:resource name="InquireFIKycLiteCustomer" path="/api/BankSmart/InquireFIKycLiteCustomer" id="5131c8b0-d7c3-4727-9efa-d4b125dcba30">
      <con:settings/>
      <con:parameters/>
      <con:method name="InquireFIKycLiteCustomer" id="993506c5-a437-4f57-97dc-dfcadab98c8e" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Inquire FI Kyc Lite Customer" id="0d1a0602-d06a-492e-8f52-4432898bf6ad" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{\r
               "signOnRq":{ \r
               "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
                 "DateTime":"2019-03-06T00:00:00",\r
               "ChannelId":"5",\r
              "OurBranchId":"01"},\r
             "ClientID": "000024047"\r
          }</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCustomerPostingAccount" path="/api/BankSmart/GetCustomerPostingAccount" id="1fdf4619-db10-4bc2-8814-954e76ccece0">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCustomerPostingAccount" id="10fced47-a0cb-41a3-914a-869b5ac78d7f" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="GetCustomerPostingAccount" id="7642acde-ebc5-490d-b8c9-8582d992af6b" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "ClientID": "000024101"
}</con:request>
          <con:originalUri>http://null///api/BankSmart/GetCustomerPostingAccount</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCorporateCIFDetail" path="/api/BankSmart/GetCorporateCIFDetail" id="6653a3cc-f988-4fd9-9a50-8ab8b77df547">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCorporateCIFDetail" id="61cef010-5782-4f53-b307-90799882a98f" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Get Corporate CIF Detail" id="70a96ce0-863d-47c3-b0a6-c3fd7d7e5619" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{\r
	"signOnRq":{\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime":"2019-03-06T00:00:00",\r
		"ChannelId":"2",\r
		"OurBranchId":"01"\r
	},\r
	"ClientID": "000000037"\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetAccounts" path="/api/ODS/getAccounts" id="0cfcb731-0e9b-4ff8-b2aa-1d9f15087a02">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetAccounts" id="b0db4307-0210-4111-8f21-600f520d7495" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="getAccounts" id="b9aa3587-095f-4ac3-a6e8-953c549330e9" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-08-18",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "data": {
        "CustomerId": "1234"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CardRequest" path="/api/Common/CardRequest" id="e7bbdb42-f556-45ac-ae78-53e35213eab1">
      <con:settings/>
      <con:parameters/>
      <con:method name="CardRequest" id="f3fad183-e12f-472a-8d3f-ef3180d424c7" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="CardRequest" id="296be9c9-6a27-47cc-b719-e73cb4201c29" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "RootObject": {
        "Address": "Dubai",
        "CompleteAddress": "Al Salam Hotel",
        "City": "Dubai",
        "UserCardName": "Muhammad Taha Khosa",
        "NotesToDriver": "Chal beta katlo",
        "Latitude": "23.6777",
        "Longitude": "49.744",
        "CardDeliveryDate": "2019-11-20 09:35:22.487",
        "AccountNumber": "0130000001348901"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCard" path="/api/ODS/getCard" id="20023c63-0340-48a7-a4e8-59bd4bb0d6f6">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCard" id="76f10a47-3a3f-475a-90a5-367300673ce6" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="getCard" id="fda61f53-ab1a-48f4-b241-ed12c2d59c07" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-08-18",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "data": {
        "CustomerId": "1234"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CreateFIKycLiteCustomer" path="/api/BankSmart/CreateFIKycLiteCustomer" id="146f155e-6b37-4526-af89-f977be75b497">
      <con:settings/>
      <con:parameters/>
      <con:method name="CreateFIKycLiteCustomer" id="54aae8be-aac6-428e-8133-609b1aaab342" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:cre="https://waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/CreateFIKycLiteCustomer">cre:Fault</con:element>
        </con:representation>
        <con:request name="CreateFIKycLiteCustomer" id="539353e2-bad0-444e-83d4-e04a7545bdc8" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "9/8/2019 7:18:34 PM",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "Cust": {
        "Name": "alifahad",
        "CategoryId": "FIS",
        "RManager": "001",
        "RiskProfile": "High",
        "EntityNameCorp": "abc ",
        "EntityTypeCorp": "FOC",
        "YearofestablishmentCorp": "2019-03-06",
        "RegisteredAddressCorp": "abc",
        "ContactName1Corp": "Fahad",
        "ContactID1Corp": "abc",
        "IDTypeCorp": "DLL",
        "Address1Corp": "abc",
        "PhoneNumberCorp": "134234",
        "AlternatePhonenumberCorp": null,
        "EmailIDCorp": "fahad_Ali1003@hotmail.com",
        "ContactName2Corp": "",
        "ContactID2Corp": "",
        "IDType2": "",
        "Address2Corp": "",
        "PhoneNumber2Corp": null,
        "AlternatePhonenumber2Corp": null,
        "EmailID2Corp": "",
        "BusinessActivity": "0111",
        "SICCodesCorp": "110",
        "IndustryCorp": "MFT",
        "PresenceinCISCountryCorp": "Y",
        "DealingwithCISCountryCorp": "Y",
        "TradeLicenseNumberCorp": "675675674",
        "CountryofIncorporationCorp": "ARE",
        "TradeLicenseIssuedateCorp": "2019-03-06",
        "TradeLicenseExpirydateCorp": "2022-03-06",
        "TradeLicenseIssuanceAuthorityCorp": "abc",
        "TRNNoCorp": "",
        "PEPCorp": "Y",
        "BlackListCorp": "Y",
        "KYCReviewDateCorp": "2022-03-06",
        "FATCARelevantCorp": "Y",
        "CRSRelevantCorp": "Y",
        "USAEntityCorp": "SUP",
        "FFICorp": "Y",
        "FFICategoryCorp": null,
        "GIINNoCorp": "",
        "GIINNACorp": "",
        "SponsorNameCorp": "",
        "SponsorGIIN": "",
        "NFFECorp": null,
        "StockExchangeCorp": "",
        "TradingSymbolCorp": "",
        "USAORUAECorp": "Y",
        "TINAvailableCorp": "",
        "TinNo1Corp": "1",
        "TaxCountry1Corp": "",
        "TinNo2Corp": "",
        "TaxCountry2Corp": "",
        "TinNo3Corp": "",
        "TaxCountry3Corp": "",
        "TinNo4Corp": "",
        "TaxCountry4Corp": "",
        "TinNo5Corp": "",
        "TaxCountry5Corp": "",
        "FATCANoReasonCorp": "Reason B",
        "ReasonBCorp": "",
        "CompanyWebsite": "",
        "CompCashIntensive": "Y",
        "PubLimCompCorp": "Y",
        "RegAddCountryCorp": "ARE",
        "REGADDSTATECORP": "005",
        "RegAddCityCorp": "001",
        "Add1CountryCorp": "ARE",
        "Add1StateCorp": "005",
        "Add1CityCorp": "001",
        "Add2CountryCorp": "",
        "Add2StateCorp": "",
        "Add2CityCorp": "",
        "VATRegistered": null,
        "JurEmiratesID": "001",
        "JurTypeID": "001",
        "JurAuthorityID": "001",
        "POBox": "2344"
    },
    "ShareHolders": [
        {
            "ShareHolderName": "ALI FARAZ1",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2020",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "51",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAEntity": "SUP",
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "ShareHolderName": "ALI FARAZ2",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2020",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "39",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAEntity": null,
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "ShareHolderName": "ALI FARAZ3",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2022",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "10",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAEntity": null,
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ],
    "Authignatories": [
        {
            "AuthorisedsignatoriesName": "ALI FARAZ",
            "PhoneNumber": "132-3355-544466",
            "EmailID": "User@Company1.com",
            "CorrespondenceAddress": "ABC",
            "AuthorisedsignatoryIDtype1": "PAS",
            "AuthorisedsignatoryIDNumber1": "DY9895912",
            "AuthorisedsignatoryIDExpirydate1": "2020/03/03",
            "AuthorisedsignatoryIDIssueCountry1": "PAK",
            "AuthorisedsignatoryIDtype2": "EID",
            "AuthorisedsignatoryIDNumber2": "784197747972764",
            "AuthorisedsignatoryIDExpirydate2": "2020-05-30 16:53",
            "AuthorisedsignatoryIDIssueCountry2": "ARE",
            "AuthorisedsignatoryVisaIssuedby": "UAE",
            "AuthorisedsignatoryVisaNumber": "115751051",
            "AuthorisedsignatoryVisaExpiry": "2020-05-30 16:53",
            "Remarks": null,
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": null,
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": null,
            "ReasonB": null,
            "ASCity": "001",
            "ASState": "005",
            "ASCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "PAK",
            "GroupID": "",
            "SignUpload": ""
        }
    ],
    "BoardDirectors": [
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ],
    "BeneficialOwners": [
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ]
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CreateCorporateCIF" path="/api/BankSmart/CreateCorporateCIF" id="cf0da4e6-f0da-4c10-8958-32ed394779ed">
      <con:settings/>
      <con:parameters/>
      <con:method name="CreateCorporateCIF" id="929a49df-3ac7-4162-bfb4-35499360033b" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Create Corporate CIF" id="275e4ed4-8e24-4cde-9470-981cc93b7fc7" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "9/8/2019 7:18:34 PM",
        "ChannelId": "10",
        "OurBranchId": "01"
    },
    "Cust": {
        "Name": "Sept_08_Company 1",
        "CategoryId": "Corporate",
        "GroupCode": "",
        "RManager": "",
        "RiskProfile": "Low",
        "EntityNameCorp": "FUTURE EYE TECHNOLOGY L.L.C ",
        "EntityTypeCorp": "LLC",
        "YearofestablishmentCorp": "2010/09/08",
        "RegisteredAddressCorp": "ABC",
        "ContactName1Corp": "XYZ",
        "ContactID1Corp": "971-50-4850841 ",
        "IDTypeCorp": "TLL",
        "Address1Corp": "ABC",
        "PhoneNumberCorp": "971-4-4850841 ",
        "AlternatePhonenumberCorp": "213-3-324553",
        "EmailIDCorp": "User@Company1.com",
        "ContactName2Corp": "XYZ",
        "ContactID2Corp": "971-50-4850841 ",
        "IDType2": "",
        "Address2Corp": "",
        "PhoneNumber2Corp": "",
        "AlternatePhonenumber2Corp": "",
        "EmailID2Corp": "",
        "BusinessActivity": "",
        "SICCodesCorp": "",
        "IndustryCorp": "",
        "PresenceinCISCountryCorp": null,
        "DealingwithCISCountryCorp": null,
        "TradeLicenseNumberCorp": "234002366",
        "CountryofIncorporationCorp": "ARE",
        "TradeLicenseIssuedateCorp": "2010/03/12",
        "TradeLicenseExpirydateCorp": "2022/03/06",
        "TradeLicenseIssuanceAuthorityCorp": "Dubai",
        "TRNNoCorp": "0090909",
        "PEPCorp": "N",
        "BlackListCorp": null,
        "KYCReviewDateCorp": "2020/03/06",
        "FATCARelevantCorp": "Y",
        "CRSRelevantCorp": "Y",
        "USAEntityCorp": "SUP",
        "FFICorp": "Y",
        "FFICategoryCorp": null,
        "GIINNoCorp": null,
        "GIINNACorp": null,
        "SponsorNameCorp": null,
        "SponsorGIIN": null,
        "NFFECorp": "005",
        "StockExchangeCorp": null,
        "TradingSymbolCorp": null,
        "USAORUAECorp": "Y",
        "TINAvailableCorp": null,
        "TinNo1Corp": null,
        "TaxCountry1Corp": null,
        "TinNo2Corp": null,
        "TaxCountry2Corp": null,
        "TinNo3Corp": null,
        "TaxCountry3Corp": null,
        "TinNo4Corp": null,
        "TaxCountry4Corp": null,
        "TinNo5Corp": null,
        "TaxCountry5Corp": null,
        "FATCANoReasonCorp": "Reason A",
        "ReasonBCorp": null,
        "CompanyWebsite": "",
        "CompCashIntensive": "",
        "PubLimCompCorp": "",
        "RegAddCountryCorp": "ARE",
        "REGADDSTATECORP": "005",
        "RegAddCityCorp": "001",
        "Add1CountryCorp": "ARE",
        "Add1StateCorp": "005",
        "Add1CityCorp": "001",
        "Add2CountryCorp": "",
        "Add2StateCorp": "",
        "Add2CityCorp": "",
        "JurEmiratesID":"001",
        "JurTypeID":"001",
        "JurAuthorityID":"001",
        "POBox":"2344",
        
    },
    "ShareHolders": [
        {
            "ShareHolderName": "ALI FARAZ1",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2020",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "51",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAEntity": "SUP",
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "ShareHolderName": "ALI FARAZ2",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2020",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "39",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAEntity": null,
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "ShareHolderName": "ALI FARAZ3",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2022",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "10",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAEntity": null,
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ],
    "Authignatories": [
        {
            "AuthorisedsignatoriesName": "ALI FARAZ",
        
            "PhoneNumber": "132-3355-544466",
           
            "EmailID": "User@Company1.com",
            "CorrespondenceAddress": "ABC",
            "AuthorisedsignatoryIDtype1": "PAS",
            "AuthorisedsignatoryIDNumber1": "DY9895912",
            "AuthorisedsignatoryIDExpirydate1": "2020/03/03",
            "AuthorisedsignatoryIDIssueCountry1": "PAK",
            "AuthorisedsignatoryIDtype2": "EID",
          
            "AuthorisedsignatoryIDNumber2": "784197747972764",
          
            "AuthorisedsignatoryIDExpirydate2": "2020-05-30 16:53",
            "AuthorisedsignatoryIDIssueCountry2": "ARE",
            "AuthorisedsignatoryVisaIssuedby": "UAE",
         
            "AuthorisedsignatoryVisaNumber": "115751051",
          
            "AuthorisedsignatoryVisaExpiry": "2020-05-30 16:53",
            "Remarks": null,
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": null,
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": null,
            "ReasonB": null,
            "ASCity": "001",
            "ASState": "005",
            "ASCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "PAK",
            "GroupID": "",
            "SignUpload": ""
        }
    ],
    "BoardDirectors": [
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ],
    "BeneficialOwners": [
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ]
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="UpdateCorporateCifWithChilds" path="/api/BankSmart/UpdateCorporateCifWithChilds" id="3819a0b0-bbab-4d17-85bc-470ef8e94c8f">
      <con:settings/>
      <con:parameters/>
      <con:method name="UpdateCorporateCifWithChilds" id="ea14c43c-595c-4d22-8eb4-9fd6b5988399" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:upd="https://waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/UpdateCorporateCifWithChilds">upd:Fault</con:element>
        </con:representation>
        <con:request name="Update Corporate Cif With Childs" id="54ad038e-e802-4cdf-ada7-3f1870d9ee1d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "9/8/2019 7:18:34 PM",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "Cust": {
    		"ClientID": "000013434",
		"RManager": "001",
		"RiskProfile": "High",
		"EntityNameCorp": "abc ",
		"EntityTypeCorp": "FOC",
		"YearofestablishmentCorp": "2019-03-06",
		"RegisteredAddressCorp": "abc",
		"ContactName1Corp": "Fahad",
		"ContactID1Corp": "abc",
		"IDTypeCorp": "DLL",
		"Address1Corp": "abc",
		"PhoneNumberCorp": "134234",
		"AlternatePhonenumberCorp": null,
		"EmailIDCorp": "fahad_Ali1003@hotmail.com",
		"ContactName2Corp": "",
		"ContactID2Corp": "",
		"IDType2": "",
		"Address2Corp": "",
		"PhoneNumber2Corp": null,
		"AlternatePhonenumber2Corp": null,
		"EmailID2Corp": "",
		"BusinessActivity": "0111",
		"SICCodesCorp": "110",
		"IndustryCorp": "MFT",
		"PresenceinCISCountryCorp": "Y",
		"DealingwithCISCountryCorp": "Y",
		"TradeLicenseNumberCorp": "777701777",
		"CountryofIncorporationCorp": "ARE",
		"TradeLicenseIssuedateCorp": "2019-03-06",
		"TradeLicenseExpirydateCorp": "2022-03-06",
		"TradeLicenseIssuanceAuthorityCorp": "abc",
		"TRNNoCorp": "",
		"PEPCorp": "Y",
		"BlackListCorp": "Y",
		"KYCReviewDateCorp": "2022-03-06",
		"FATCARelevantCorp": "Y",
		"CRSRelevantCorp": "Y",
		"USAEntityCorp": "SUP",
		"FFICorp": "Y",
		"FFICategoryCorp": null,
		"GIINNoCorp": "",
		"GIINNACorp": "",
		"SponsorNameCorp": "",
		"SponsorGIIN": "",
		"NFFECorp": null,
		"StockExchangeCorp": "",
		"TradingSymbolCorp": "",
		"USAORUAECorp": "Y",
		"TINAvailableCorp": "",
		"TinNo1Corp": "1",
		"TaxCountry1Corp": "",
		"TinNo2Corp": "",
		"TaxCountry2Corp": "",
		"TinNo3Corp": "",
		"TaxCountry3Corp": "",
		"TinNo4Corp": "",
		"TaxCountry4Corp": "",
		"TinNo5Corp": "",
		"TaxCountry5Corp": "",
		"FATCANoReasonCorp": "Reason B",
		"ReasonBCorp": "",
		"CompanyWebsite": "",
		"CompCashIntensive": "Y",
		"PubLimCompCorp": "Y",
	  "RegAddCountryCorp": "ARE",
        "REGADDSTATECORP": "005",
        "RegAddCityCorp": "001",
        "Add1CountryCorp": "ARE",
        "Add1StateCorp": "005",
        "Add1CityCorp": "001",
      	"Add2CountryCorp": "",
		"Add2StateCorp": "",
		"Add2CityCorp": "",
		"VATRegistered":null,
		"JurEmiratesID":"001",
        "JurTypeID":"001",
        "JurAuthorityID":"001",
        "POBox":"2344"
    },
    "ShareHolders": [
        {
            "ShareHolderName": "ALI FARAZ1",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2020",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "51",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAEntity": "SUP",
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "ShareHolderName": "ALI FARAZ2",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2020",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "39",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAEntity": null,
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "ShareHolderName": "ALI FARAZ3",
            "ShareHolderAddress": "ABC",
            "ShareholderType": "IND",
            "ShareholdersIDtype": "EID",
            "ShareholdersIDNo": "DY9895912",
            "ShareholdersIDExpirydate": "3/2/2022",
            "CountryofIncorporation": "",
            "BoardMember": "Y",
            "AuthorisedSignatory": "Y",
            "BeneficialOwner": "Y",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "OwnershipPercentage": "10",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "USCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAEntity": null,
            "FFI": null,
            "FFICategory": null,
            "GIINNo": null,
            "GIINNA": null,
            "SponsorName": null,
            "SponsorGIIN": null,
            "NFFE": null,
            "StockExchange": null,
            "TradingSymbol": null,
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "SHCity": "001",
            "SHState": "005",
            "SHCountry": "ARE",
            "SHIDIssuanceCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ],
    "Authignatories": [
        {
            "AuthorisedsignatoriesName": "ALI FARAZ",
        
            "PhoneNumber": "132-3355-544466",
           
            "EmailID": "User@Company1.com",
            "CorrespondenceAddress": "ABC",
            "AuthorisedsignatoryIDtype1": "PAS",
            "AuthorisedsignatoryIDNumber1": "DY9895912",
            "AuthorisedsignatoryIDExpirydate1": "2020/03/03",
            "AuthorisedsignatoryIDIssueCountry1": "PAK",
            "AuthorisedsignatoryIDtype2": "EID",
          
            "AuthorisedsignatoryIDNumber2": "784197747972764",
          
            "AuthorisedsignatoryIDExpirydate2": "2020-05-30 16:53",
            "AuthorisedsignatoryIDIssueCountry2": "ARE",
            "AuthorisedsignatoryVisaIssuedby": "UAE",
         
            "AuthorisedsignatoryVisaNumber": "115751051",
          
            "AuthorisedsignatoryVisaExpiry": "2020-05-30 16:53",
            "Remarks": null,
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": null,
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": null,
            "ReasonB": null,
            "ASCity": "001",
            "ASState": "005",
            "ASCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "PAK",
            "GroupID": "",
            "SignUpload": ""
        }
    ],
    "BoardDirectors": [
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BoardDirectorName": "ALI FARAZ",
            "Designation": "Director",
            "BoardDirectorAddress": "dubai",
            "BoardDirectorIDExpirydate": "2020/09/08",
            "ResidentNonResident": "N",
            "CountryofResidence": "ARE",
            "BoardDirectorIDtype": "PAS",
            "BoardDirectorIDNo": "DY9895912",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BDCity": "001",
            "BDState": "005",
            "BDCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ],
    "BeneficialOwners": [
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "Y",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "Y",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        },
        {
            "BeneficialName": "ALI FARAZ",
            "BeneficialAddress": "ABC",
            "BeneficialIDNo": "DY9895912",
            "BeneficialIDExpirydate": "3/2/2020",
            "ResidentNonResident": "N",
            "CountryOfResidence": "ARE",
            "BeneficialIDtype": "EID",
            "Blacklist": null,
            "PEP": "N",
            "FATCARelevant": "N",
            "CRSRelevant": "N",
            "AreyouaUSCitizen": "N",
            "AreyouaUSTaxResident": "N",
            "WereyoubornintheUS": "N",
            "USAORUAE": "N",
            "TINAvailable": "N",
            "TinNo1": null,
            "TaxCountry1": null,
            "TinNo2": null,
            "TaxCountry2": null,
            "TinNo3": null,
            "TaxCountry3": null,
            "TinNo4": null,
            "TaxCountry4": null,
            "TinNo5": null,
            "TaxCountry5": null,
            "FATCANoReason": "Reason A",
            "ReasonB": null,
            "BOCity": "001",
            "BOState": "005",
            "BOCountry": "ARE",
            "IDGender": "M",
            "DateOfBirth": "2001/09/08",
            "IDNationality": "ARE"
        }
    ]
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCIFBasicDetails" path="/api/BankSmart/GetCIFBasicDetails" id="9e90aceb-461c-4d3c-80ab-b4947d8b1edd">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCIFBasicDetails" id="d098d601-b4f3-4e86-9488-917f34a83ae5" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Get CIFBasic Details" id="57bc8217-a450-4c77-a7d8-1bfd795e2d64" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "ClientID": "000000007"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetActivities" path="/api/ODS/getActivities" id="9d366948-b7cb-4114-858f-f79007ac4276">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetActivities" id="b06ee550-014f-459f-9073-b74ed0934a69" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="getActivities" id="575df24e-9fa0-4bbf-a392-27c0b6531de8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-08-18",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "data": {
        "CustomerId": "1234"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="CheckIDForCIF" path="/api/BankSmart/CheckIDForCIF" id="9c50de78-ff45-4160-ac07-b7986f6889aa">
      <con:settings/>
      <con:parameters/>
      <con:method name="CheckIDForCIF" id="61a7d7bb-4736-4094-af23-b98ba644e048" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Check ID For CIF" id="55915e2f-7b1a-47db-a705-005337ca4b68" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "IDNumber": "649949g59",
    "Type": "C"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="UpdateCorporateClient" path="/api/BankSmart/UpdateCorporateClient" id="fd3d2f22-4e3f-4e75-a72b-f3efc749c459">
      <con:settings/>
      <con:parameters/>
      <con:method name="UpdateCorporateClient" id="d04bd6cb-457c-41e0-9619-43e5bd54d4ee" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Update Corporate Client" id="ed10db29-79a2-410f-b4ee-a9049003e44f" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{\r
\r
	"SignOnRq": {\r
		"LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
		"DateTime": "2019-03-06",\r
		"ChannelId": "10",\r
		"OurBranchId": "01"\r
	},\r
	"Cust": {\r
		"ClientID": "000024026",\r
		"RManager": "001",\r
		"RiskProfile": "High",\r
		"EntityNameCorp": "abc ",\r
		"EntityTypeCorp": "FOC",\r
		"YearofestablishmentCorp": "2019-03-06",\r
		"RegisteredAddressCorp": "abc",\r
		"ContactName1Corp": "Fahad",\r
		"ContactID1Corp": "abc",\r
		"IDTypeCorp": "DLL",\r
		"Address1Corp": "abc",\r
		"PhoneNumberCorp": "134234",\r
		"AlternatePhonenumberCorp": null,\r
		"EmailIDCorp": "fahad_Ali1003@hotmail.com",\r
		"ContactName2Corp": "",\r
		"ContactID2Corp": "",\r
		"IDType2": "",\r
		"Address2Corp": "",\r
		"PhoneNumber2Corp": null,\r
		"AlternatePhonenumber2Corp": null,\r
		"EmailID2Corp": "",\r
		"BusinessActivity": "0111",\r
		"SICCodesCorp": "110",\r
		"IndustryCorp": "MFT",\r
		"PresenceinCISCountryCorp": "Y",\r
		"DealingwithCISCountryCorp": "Y",\r
		"TradeLicenseNumberCorp": "777701777",\r
		"CountryofIncorporationCorp": "ARE",\r
		"TradeLicenseIssuedateCorp": "2019-03-06",\r
		"TradeLicenseExpirydateCorp": "2022-03-06",\r
		"TradeLicenseIssuanceAuthorityCorp": "abc",\r
		"TRNNoCorp": "",\r
		"PEPCorp": "Y",\r
		"BlackListCorp": "Y",\r
		"KYCReviewDateCorp": "2022-03-06",\r
		"FATCARelevantCorp": "Y",\r
		"CRSRelevantCorp": "Y",\r
		"USAEntityCorp": "SUP",\r
		"FFICorp": "Y",\r
		"FFICategoryCorp": null,\r
		"GIINNoCorp": "",\r
		"GIINNACorp": "",\r
		"SponsorNameCorp": "",\r
		"SponsorGIIN": "",\r
		"NFFECorp": null,\r
		"StockExchangeCorp": "",\r
		"TradingSymbolCorp": "",\r
		"USAORUAECorp": "Y",\r
		"TINAvailableCorp": "",\r
		"TinNo1Corp": "1",\r
		"TaxCountry1Corp": "",\r
		"TinNo2Corp": "",\r
		"TaxCountry2Corp": "",\r
		"TinNo3Corp": "",\r
		"TaxCountry3Corp": "",\r
		"TinNo4Corp": "",\r
		"TaxCountry4Corp": "",\r
		"TinNo5Corp": "",\r
		"TaxCountry5Corp": "",\r
		"FATCANoReasonCorp": "Reason B",\r
		"ReasonBCorp": "",\r
		"CompanyWebsite": "",\r
		"CompCashIntensive": "Y",\r
		"PubLimCompCorp": "Y",\r
	  "RegAddCountryCorp": "ARE",\r
        "REGADDSTATECORP": "005",\r
        "RegAddCityCorp": "001",\r
        "Add1CountryCorp": "ARE",\r
        "Add1StateCorp": "005",\r
        "Add1CityCorp": "001",\r
      	"Add2CountryCorp": "",\r
		"Add2StateCorp": "",\r
		"Add2CityCorp": "",\r
		"VATRegistered":null,\r
		"JurEmiratesID":"001",\r
        "JurTypeID":"001",\r
        "JurAuthorityID":"001",\r
        "POBox":"2344"\r
	}\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetSplunkDetails" path="/api/ODS/GetSplunkDetails" id="3b2f3a47-7754-445e-88bb-7ad8945966c8">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetSplunkDetails" id="d81676b9-1a5a-4d56-9632-0cfc1e70409d" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="GetSplunkDetails" id="3708c812-d695-4129-af8e-a3b502c4641c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-08-18",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "data": {
        "CustomerId": "1234"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetBeneficiaries" path="/api/ODS/getBeneficiaries" id="841a11f9-9718-4022-8a79-53692032fc75">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetBeneficiaries" id="33b11549-6609-4e14-a7a1-6a9298e541a1" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="getBeneficiaries" id="6a7249fe-506b-41ad-bd47-a18bade4e552" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-08-18",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "data": {
        "CustomerId": "1234"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="AccountStatusMarking" path="/api/BankSmart/AccountStatusMarking" id="5bfff419-0738-4977-867b-892c13c3b846">
      <con:settings/>
      <con:parameters/>
      <con:method name="AccountStatusMarking" id="f3096fef-ba0c-4768-bef0-cea0824b3443" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:acc="https://waqfepayment.gslb.uat.eradahcapital.com/api/BankSmart/AccountStatusMarking">acc:Response</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Account Status Marking" id="23abca7e-b2bf-4d22-81ed-a7b7fdfc1897" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "AccountId": "",
    "IBAN": "AE700330100100000003202"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetFDAccountsProductwise" path="/api/BankSmart/GetFDAccountsProductwise" id="1efe7f70-2ccc-4990-8ff3-849854c1bf29">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetFDAccountsProductwise" id="5f204416-213c-4b7a-a70d-c2a871196244" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter>
            <con:name>Authorization</con:name>
            <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Get FD Account Productwise" id="bcd3bab8-cde2-4b59-96b8-8a773d3e4538" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
"SignOnRq":{
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
    "DateTime": "2019-03-06T00:00:00",
    "ChannelId": "20",
    "OurBranchId": "01"
},

"ProductID":"TDR1Y"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetZXDetails" path="/api/BankSmart/GetZXDetails" id="676c5f91-1505-4726-9006-a8badc4b9735">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetZXDetails" id="94c8d4c0-af74-473f-9a68-b7346bcf6e7e" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="Get ZX Details" id="6e369bf6-bda4-4bd6-a228-18df27c69567" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "SignOnRq": {
        "LogId": "12398129381283123",
        "DateTime": "2020-02-11T07:42:56.867Z",
        "ChannelId": "1",
        "OurBranchId": "01"
    },
    "ZAccountID": "0130000000091201",
    "ZXAccountID": "0142500000091201"
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCustomerDetails" path="/api/ODS/GetCustomerDetails" id="1811ecd2-15b1-4523-addd-95cd484d7905">
      <con:settings/>
      <con:parameters/>
      <con:method name="GetCustomerDetails" id="cfa41fa2-4864-4b9d-a9ea-6f41404624c0" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>Content-Type</con:name>
            <con:value>application/json</con:value>
            <con:style>HEADER</con:style>
            <con:default/>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
        </con:parameters>
        <con:request name="GetCustomerDetails" id="f733ff22-fd06-43a2-81a6-b5937b4fede2" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
    "signOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-08-18",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "data": {
        "CustomerId": "1234"
    }
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="UnmarkAccountStatus" path="" id="af7ea320-d996-431e-85e8-2ed5e40b3d0b">
      <con:settings/>
      <con:parameters/>
      <con:resource name="UnmarkAccountStatus" path="api/BankSmart/UnMarkAccountStatus" id="81b7ea20-267e-4c88-bf6f-0ef929efd68e">
        <con:settings/>
        <con:parameters/>
        <con:method name="UnmarkAccountStatus" id="feffe07a-9b1a-4421-954f-391d226c0253" method="POST">
          <con:settings/>
          <con:parameters>
            <con:parameter>
              <con:name>Content-Type</con:name>
              <con:value>application/json</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
            <con:parameter>
              <con:name>Authorization</con:name>
              <con:value>Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5</con:value>
              <con:style>HEADER</con:style>
              <con:default/>
              <con:path xsi:nil="true"/>
              <con:description xsi:nil="true"/>
            </con:parameter>
          </con:parameters>
          <con:representation type="RESPONSE">
            <con:mediaType xsi:nil="true"/>
            <con:status>0</con:status>
            <con:params/>
            <con:element>data</con:element>
          </con:representation>
          <con:representation type="REQUEST">
            <con:mediaType>application/json</con:mediaType>
            <con:params/>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json</con:mediaType>
            <con:status>401</con:status>
            <con:params/>
            <con:element xmlns:get="https://waqfepayment.gslb.uat.eradahcapital.com/api/BankSmart/GetAccountDetail">get:Fault</con:element>
          </con:representation>
          <con:representation type="RESPONSE">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>200</con:status>
            <con:params/>
            <con:element xmlns:get="https://waqfepayment.gslb.uat.eradahcapital.com/api/BankSmart/GetAccountDetail">get:Response</con:element>
          </con:representation>
          <con:representation type="FAULT">
            <con:mediaType>application/json; charset=utf-8</con:mediaType>
            <con:status>400</con:status>
            <con:params/>
            <con:element xmlns:get="https://waqfepayment.gslb.uat.eradahcapital.com/api/BankSmart/GetAccountDetail">get:Fault</con:element>
          </con:representation>
          <con:request name="UnMark Account Status" id="9ccc95a3-2370-49d0-aaff-3a6ac696a6b7" mediaType="application/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>http://localhost:2181</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "5",
        "OurBranchId": "01"
    },
    "AccountId": "",
    "IBAN": "AE700330100100000003202"
}</con:request>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:request>
        </con:method>
      </con:resource>
    </con:resource>
    <con:resource name="CloseFixedDeposit" path="/api/BankSmart/CloseFixedDeposit" id="9463d879-6964-453b-bb34-4302cd19a91d">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="fe3d01f5-f4c1-48fb-b6e7-e998a60250cc" method="POST">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>Content-Type</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>Authorization</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xmlns:clos="https://waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/CloseFixedDeposit">clos:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:clos="https://waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/CloseFixedDeposit">clos:Response</con:element>
        </con:representation>
        <con:request name="Request 1" id="425e8388-c8f2-4040-851a-3a5c1edffbce" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://${#Project#url}</con:endpoint>
          <con:request>{
  "signOnRq": {
    "logId": "string",
    "dateTime": "2021-11-22T13:09:32.131Z",
    "channelId": "10",
    "ourBranchId": "string"
  },
  "receiptID": "string",
  "accountID": "string",
  "preMatureRate": 0,
  "penalty": "N",
  "penaltyType": "R",
  "penaltyRate": 0
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="Content-Type" value="application/json"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>Content-Type</con:entry>
            <con:entry>Authorization</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="a677a48c-39c1-4f47-877d-1cbf266c01a1" name="Corporate_OnBoarding">
    <con:settings>
      <con:setting id="GeneratableJUnitReport@Folder">D:\API_Testing\Report\Report-27-04-2020\Corporate_CIF_And_Account_Creation</con:setting>
      <con:setting id="FlowLayout">true</con:setting>
    </con:settings>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="64ad410e-9607-4b3a-bce7-4b94fecbbb3e" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Corporate_OnBoarding" searchProperties="true" timeout="0" maxResults="5" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" zephyrTestName="" zephyrTestId="">
      <con:settings>
        <con:setting id="FlowLayout">false</con:setting>
      </con:settings>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OCRTradeLicense" id="b23c3688-bce3-4549-a3b7-5e82fc820d2e">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/e-channels-global-uat/api/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OCRTradeLicense" id="e8bb296f-7996-4048-831b-75148ace65b6" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
  &lt;con:entry key="client_secret" value="1EAA5ac7161848118D3Bc39585334003"/>
  &lt;con:entry key="client_id" value="80df912eae03457d819210bb4dbe3c16"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
            <con:request>{
    "content": "",
    "name": "Sharjah department Trade License.pdf",
    "correlationId": "13dd19c8-bc00-4e4c-959d-8608b09e8b5d",
    "type": "tradeLicense",
    "scope": [
        "_LicenseMembers",
        "_POBox",
        "_Activity",
        "_TradeName",
        "_EstablishmentDate",
        "_ExpiryDate",
        "_IssueDate",
        "_LicenseNo",
        "_TradeLicesneType",
        "_Manager",
        "_EntityType",
        "_Address",
        "_CompanyName"
    ]
}</con:request>
            <con:originalUri>https://mule-dev.gslb.shd.eradahcapital.com/e-channels-global-uat/api/documents</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="280a4478-aaf1-4bdc-a401-f93c08050961" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>vendor10-erc</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="OCREID_newID" id="fa2f4e8d-7714-4eb1-9418-3600f98a5540">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/e-channels-global-uat/api/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OCREID_newID" id="e8bb296f-7996-4048-831b-75148ace65b6" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
  &lt;con:entry key="client_secret" value="E24C2589332e4a1A87A711C2D8Ea891c"/>
  &lt;con:entry key="client_id" value="d13b3ccd05144037ad5838b4f11e4279"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
            <con:request>{
    "content": "",
    "name": "eid_abhinav.pdf",
    "correlationId": "eid_abhinav.pdf",
    "type": "eid",
    "scope": [
    "_MRMRBlockZcode",
    "_CardNumberMRZ",
    "_IDNumberMRZ",
    "_CountryMRZ",
    "_DateofBirthMRZ",
    "_ExpiryDateMRZ",
    "_NameMRZ",
    "_Name",
    "_Surname",
    "_Sex"
    ]
}</con:request>
            <con:originalUri>https://mule-dev.gslb.shd.eradahcapital.com/e-channels-global-uat/api/documents</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="8d44e011-cfeb-4cee-ad20-92b1484b8618" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>vendor10-erc</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="OCREID_oldID" id="cf14fe9e-6b79-4730-946f-0bdd1f6f7ff5">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/e-channels-global-uat/api/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OCREID_oldID" id="e8bb296f-7996-4048-831b-75148ace65b6" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="client_id" value="d13b3ccd05144037ad5838b4f11e4279"/>
  &lt;con:entry key="client_secret" value="E24C2589332e4a1A87A711C2D8Ea891c"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
            <con:request>{
    "content": "",
    "name": "eid_dani.jpeg",
    "correlationId": "eid_dani.jpeg",
    "type": "eid",
    "scope": [
    "_MRMRBlockZcode",
    "_CardNumberMRZ",
    "_IDNumberMRZ",
    "_CountryMRZ",
    "_DateofBirthMRZ",
    "_ExpiryDateMRZ",
    "_NameMRZ",
    "_Name",
    "_Surname",
    "_Sex"
    ]
}</con:request>
            <con:originalUri>https://mule-dev.gslb.shd.eradahcapital.com/e-channels-global-uat/api/documents</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="9cc6abaf-87c4-472c-9400-fa2620e46450" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="OCRPassport" id="f03d235d-2f53-472d-a249-1bc2e9430698">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/e-channels-global-uat/api/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OCRPassport" id="e8bb296f-7996-4048-831b-75148ace65b6" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
  &lt;con:entry key="client_secret" value="1EAA5ac7161848118D3Bc39585334003"/>
  &lt;con:entry key="client_id" value="80df912eae03457d819210bb4dbe3c16"/>
&lt;/xml-fragment></con:setting>
            </con:settings>
            <con:endpoint>https://mule-dev.gslb.shd.eradahcapital.com</con:endpoint>
            <con:request>{
    "content": "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",
    "name": "PASSPORT.jpg",
    "correlationId": "a83f2b44-b190-4f57-b171-46eb50cb9132",
    "type": "passport",
    "scope": [
        "_PersonalCode",
        "_ExpireDate",
        "_Number",
        "_Name",
        "_Nationality",
        "_MRBlock",
        "_Surname",
        "_Country",
        "_Sex",
        "_BirthDate"
    ]
}</con:request>
            <con:originalUri>https://mule-dev.gslb.shd.eradahcapital.com/e-channels-global-uat/api/documents</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="46ec20fb-e779-46f3-bb19-0a4998bb7e3d" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>vendor10-erc</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="ExpiryDate" id="c589584a-0c59-4b25-96d4-8ee2dc318645">
        <con:settings/>
        <con:config>
          <script>import groovy.time.TimeCategory
def today = new Date()+31;
def dateformat = today.format("yyyy-MM-dd")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy Script" id="4dd98ac5-18d3-4193-b3cd-61b7e5343d13">
        <con:settings/>
        <con:config>
          <script>import groovy.time.TimeCategory
def today = new Date();
//today= today.format("yyyy-MM-dd")
def dateformat = today.format("yyyy-MM-dd'T'HH:mm:ss")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="CustomerName" id="23dea707-2b1b-4915-9a3c-52b7349a47eb">
        <con:settings/>
        <con:config>
          <script>def APIname = testRunner.testCase.getPropertyValue("apiname")
def firstname = context.expand('${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(6)}')
//def middlename = context.expand( '${DataSource#middleName}' )
//def lastname = context.expand( '${DataSource#lastName}' )
String name= APIname+" "+firstname
//return name
if(name.length()> 100){
return name.substring(0,10)
}
else{
	return name
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="MaturityDate" id="0198f780-e0d1-42d3-aefb-df58697a8e51">
        <con:settings/>
        <con:config>
          <script>import java.util.Calendar; 
import java.time.*;
import java.time.DayOfWeek;
Calendar date = Calendar.getInstance();
//def today = new Date();

String isWeekend = 'No';

int dayOfTheWeek = date.get(Calendar.DAY_OF_WEEK);

if(dayOfTheWeek == Calendar.SUNDAY) {
        isWeekend = 'Yes';
}

//return isWeekend;
if(isWeekend=='No'){
	def today = new Date()+3;  // if date is not weekend then it will increment to next week
	return today.format("yyyy-MM-dd");
	}
	else{
		def today = new Date()+3;  //  if the date is weekend then it will be increment to next week +1day;
		return today.format("yyyy-MM-dd")
	}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="issuedate" id="b1361554-cde7-4fc9-8677-b1e6113868c7">
        <con:settings/>
        <con:config>
          <script>import java.util.Calendar; 
import java.time.*;
import java.time.DayOfWeek;
Calendar date = Calendar.getInstance();
//def today = new Date();

String isWeekend = 'No';

int dayOfTheWeek = date.get(Calendar.DAY_OF_WEEK);

if(dayOfTheWeek == Calendar.SUNDAY) {
        isWeekend = 'Yes';
}

//return isWeekend;
if(isWeekend=='No'){
	def today = new Date();  // if date is not weekend then it will increment to next week
	return today.format("yyyy-MM-dd'T'HH:mm:ss");
	}
	else{
		def today = new Date();;  //  if the date is weekend then it will be increment to next week +1day;
		return today.format("yyyy-MM-dd'T'HH:mm:ss")
	}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="transfer" name="Property Transfer" id="f8f6c6e8-a926-4906-8149-e7dcc37b9c6d">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
            <con:name>Date</con:name>
            <con:sourceType>result</con:sourceType>
            <con:sourceStep>Groovy Script</con:sourceStep>
            <con:sourcePath/>
            <con:targetType>Date</con:targetType>
            <con:targetStep>#TestCase#</con:targetStep>
            <con:targetPath/>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CreateCorporateCIFV2" id="bf4f5b32-0efb-4ded-9e13-8fca91fe341b">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/CreateCorporateCIFV2" methodName="CreateCorporateCIF" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateCorporateCIFV2" id="5d62baed-678d-4062-9083-7ab192d5d64e" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "signOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "11",\r
      "OurBranchId" : "03"\r
   },\r
   "Cust" : {\r
      "Name" : "${CustomerName#result}",
      "DualCitizen": "N",\r
      "CategoryId" : "Corporate",\r
      "GroupCode" : "LCORP",\r
      "RManager" : "006",\r
      "RiskProfile" : "Low",\r
      "EntityNameCorp" : "Limited Liability Company",\r
      "EntityTypeCorp" : "LLC",\r
      "YearofestablishmentCorp" : "2020/01/08",\r
      "RegisteredAddressCorp" : "Bruj Khalifa ${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
      "ContactName1Corp" : "API_HC_Ahmad Ali Mohamad${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
      "ContactID1Corp" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(10)}",\r
      "IDTypeCorp" : "TLL",\r
      "Address1Corp" : "Bruj Khalifa ${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
      "PhoneNumberCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(10)}",\r
      "AlternatePhonenumberCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(10)}",\r
      "EmailIDCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(10)}@eradahcapital.com",\r
      "ContactName2Corp" : "",\r
      "ContactID2Corp" : "",\r
      "IDType2" : "",\r
      "Address2Corp" : "",\r
      "PhoneNumber2Corp" : "",\r
      "AlternatePhonenumber2Corp" : "",\r
      "EmailID2Corp" : "",\r
      "BusinessActivity" : "0111",\r
      "SICCodesCorp" : "0112",\r
      "IndustryCorp" : "MFT",\r
      "PresenceinCISCountryCorp" : "Y",\r
      "DealingwithCISCountryCorp" : "Y",\r
      "TradeLicenseNumberCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(10)}",\r
      "CountryofIncorporationCorp" : "ARE",\r
      "TradeLicenseIssuedateCorp" : "2020/03/12",\r
      "TradeLicenseExpirydateCorp" : "${ExpiryDate#result}",\r
      "TradeLicenseIssuanceAuthorityCorp" : "Dubai",\r
      "TRNNoCorp" : "0090909",\r
      "PEPCorp" : "N",\r
      "BlackListCorp" : "N",\r
      "KYCReviewDateCorp" : "2022-12-31",\r
      "FATCARelevantCorp" : "N",\r
      "CRSRelevantCorp" : "N",\r
      "USAEntityCorp" : "SUP",\r
      "FFICorp" : "N",\r
      "FFICategoryCorp" : "PFI",\r
      "GIINNoCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(9)}",\r
      "GIINNACorp" : "001",\r
      "SponsorNameCorp" : "API_HC_${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
      "SponsorGIIN" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
      "NFFECorp" : "005",\r
      "StockExchangeCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
      "TradingSymbolCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
      "USAORUAECorp" : "N",\r
      "TINAvailableCorp" : "Y",\r
      "TinNo1Corp" : "1",\r
      "TaxCountry1Corp" : "ARE",\r
      "TinNo2Corp" : "1",\r
      "TaxCountry2Corp" : "ARE",\r
      "TinNo3Corp" : "1",\r
      "TaxCountry3Corp" : "ARE",\r
      "TinNo4Corp" : "1",\r
      "TaxCountry4Corp" : "ARE",\r
      "TinNo5Corp" : "1",\r
      "TaxCountry5Corp" : "ARE",\r
      "FATCANoReasonCorp" : "Reason A",\r
      "ReasonBCorp" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
      "CompanyWebsite" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(10)}@eradahcapital.com",\r
      "CompCashIntensive" : "Y",\r
      "PubLimCompCorp" : "Y",\r
      "RegAddCountryCorp" : "ARE",\r
      "REGADDSTATECORP" : "006",\r
      "RegAddCityCorp" : "00014",\r
      "Add1CountryCorp" : "ARE",\r
      "Add1StateCorp" : "006",\r
      "Add1CityCorp" : "00014",\r
      "Add2CountryCorp" : "ARE",\r
      "Add2StateCorp" : "006",\r
      "Add2CityCorp" : "00014",\r
      "JurEmiratesID" : "001",\r
      "JurTypeID" : "001",\r
      "JurAuthorityID" : "001",\r
      "POBox" : "2344"\r
   },\r
   "ShareHolders" : [\r
      {\r
         "ShareHolderName" : "API_HC_Saif Al Ghurair${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
         "ShareHolderAddress" : "Burj Khalifa${=org.apache.commons.lang.RandomStringUtils.randomNumeric(2)}",\r
         "ShareholderType" : "IND",\r
         "ShareholdersIDtype" : "EID",\r
         "ShareholdersIDNo" : "7841968${=org.apache.commons.lang.RandomStringUtils.randomNumeric(7)}1",\r
         "ShareholdersIDExpirydate" : "2022-12-31",\r
         "CountryofIncorporation" : "ARE",\r
         "BoardMember" : "Y",\r
         "AuthorisedSignatory" : "Y",\r
         "BeneficialOwner" : "Y",\r
         "ResidentNonResident" : "N",\r
         "CountryofResidence" : "ARE",\r
         "OwnershipPercentage" : "100",\r
         "Blacklist" : "N",\r
         "PEP" : "N",\r
         "FATCARelevant" : "N",\r
         "CRSRelevant" : "N",\r
         "USCitizen" : "N",\r
         "AreyouaUSTaxResident" : "N",\r
         "WereyoubornintheUS" : "N",\r
         "USAEntity" : "SUP",\r
         "FFI" : "Y",\r
         "FFICategory" : "PFI",\r
         "GIINNo" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(3)}",\r
         "GIINNA" : "001",\r
         "SponsorName" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(3)}",\r
         "SponsorGIIN" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(3)}",\r
         "NFFE" : "005",\r
         "StockExchange" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(3)}",\r
         "TradingSymbol" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(3)}",\r
         "USAORUAE" : "N",\r
         "TINAvailable" : "Y",\r
         "TinNo1" : "1",\r
         "TaxCountry1" : "ARE",\r
         "TinNo2" : "1",\r
         "TaxCountry2" : "ARE",\r
         "TinNo3" : "1",\r
         "TaxCountry3" : "ARE",\r
         "TinNo4" : "1",\r
         "TaxCountry4" : "ARE",\r
         "TinNo5" : "1",\r
         "TaxCountry5" : "ARE",\r
         "FATCANoReason" : "Reason A",\r
         "ReasonB" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
         "SHCity" : "00014",\r
         "SHState" : "006",\r
         "SHCountry" : "ARE",\r
         "SHIDIssuanceCountry" : "ARE",\r
         "IDGender" : "M",\r
         "DateOfBirth" : "2001/09/08",\r
         "IDNationality" : "ARE"\r
      }\r
   ],\r
   "Authignatories" : [\r
      {\r
         "AuthorisedsignatoriesName" : "API_HC_Sunny Varkey${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
         "PhoneNumber" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(10)}",\r
         "EmailID" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(10)}@eradahcapital.com",\r
         "CorrespondenceAddress" : "Burj khlifa ${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
         "AuthorisedsignatoryIDtype1" : "PAS",\r
         "AuthorisedsignatoryIDNumber1" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(9)}",\r
         "AuthorisedsignatoryIDExpirydate1" : "2022-12-31",\r
         "AuthorisedsignatoryIDIssueCountry1" : "PAK",\r
         "AuthorisedsignatoryIDtype2" : "EID",\r
         "AuthorisedsignatoryIDNumber2" : "7841968${=org.apache.commons.lang.RandomStringUtils.randomNumeric(7)}1",\r
         "AuthorisedsignatoryIDExpirydate2" : "2022-12-31",\r
         "AuthorisedsignatoryIDIssueCountry2" : "ARE",\r
         "AuthorisedsignatoryVisaIssuedby" : "UAE",\r
         "AuthorisedsignatoryVisaNumber" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(8)}",\r
         "AuthorisedsignatoryVisaExpiry" : "2022-05-30 16:53",\r
         "Remarks" : "API_HC_${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
         "Blacklist" : "N",\r
         "PEP" : "N",\r
         "FATCARelevant" : "N",\r
         "CRSRelevant" : "N",\r
         "AreyouaUSCitizen" : "N",\r
         "AreyouaUSTaxResident" : "N",\r
         "WereyoubornintheUS" : "N",\r
         "USAORUAE" : "N",\r
         "TINAvailable" : "Y",\r
         "TinNo1" : "1",\r
         "TaxCountry1" : "ARE",\r
         "TinNo2" : "1",\r
         "TaxCountry2" : "ARE",\r
         "TinNo3" : "1",\r
         "TaxCountry3" : "ARE",\r
         "TinNo4" : "1",\r
         "TaxCountry4" : "ARE",\r
         "TinNo5" : "1",\r
         "TaxCountry5" : "ARE",\r
         "FATCANoReason" : "Reason A",\r
         "ReasonB" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
         "ASCity" : "00014",\r
         "ASState" : "006",\r
         "ASCountry" : "ARE",\r
         "IDGender" : "M",\r
         "DateOfBirth" : "2001/09/08",\r
         "IDNationality" : "PAK",\r
         "GroupID" : null,\r
         "SignUpload" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}"\r
      }\r
   ],\r
   "BoardDirectors" : [\r
      {\r
         "BoardDirectorName" : "API_HC_Micky Jagtiani${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
         "Designation" : "Director",\r
         "BoardDirectorAddress" : "Dubai${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
         "BoardDirectorIDExpirydate" : "2022/09/08",\r
         "ResidentNonResident" : "N",\r
         "CountryofResidence" : "ARE",\r
         "BoardDirectorIDtype" : "PAS",\r
         "BoardDirectorIDNo" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(9)}",\r
         "Blacklist" : "N",\r
         "PEP" : "N",\r
         "FATCARelevant" : "N",\r
         "CRSRelevant" : "N",\r
         "AreyouaUSCitizen" : "N",\r
         "AreyouaUSTaxResident" : "N",\r
         "WereyoubornintheUS" : "N",\r
         "USAORUAE" : "N",\r
         "TINAvailable" : "Y",\r
         "TinNo1" : "1",\r
         "TaxCountry1" : "ARE",\r
         "TinNo2" : "1",\r
         "TaxCountry2" : "ARE",\r
         "TinNo3" : "1",\r
         "TaxCountry3" : "ARE",\r
         "TinNo4" : "1",\r
         "TaxCountry4" : "ARE",\r
         "TinNo5" : "1",\r
         "TaxCountry5" : "ARE",\r
         "FATCANoReason" : "Reason A",\r
         "ReasonB" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(9)}",\r
         "BDCity" : "00014",\r
         "BDState" : "006",\r
         "BDCountry" : "ARE",\r
         "IDGender" : "M",\r
         "DateOfBirth" : "2001/09/08",\r
         "IDNationality" : "ARE"\r
      }\r
   ],\r
   "BeneficialOwners" : [\r
      {\r
         "BeneficialName" : "API_HC_Faiza${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
         "BeneficialAddress" : "Dubai Mall",\r
         "BeneficialIDNo" : "7841968${=org.apache.commons.lang.RandomStringUtils.randomNumeric(7)}1",\r
         "BeneficialIDExpirydate" : "2022-12-31",\r
         "ResidentNonResident" : "N",\r
         "CountryOfResidence" : "ARE",\r
         "BeneficialIDtype" : "EID",\r
         "Blacklist" : "N",\r
         "PEP" : "N",\r
         "FATCARelevant" : "N",\r
         "CRSRelevant" : "N",\r
         "AreyouaUSCitizen" : "N",\r
         "AreyouaUSTaxResident" : "N",\r
         "WereyoubornintheUS" : "N",\r
         "USAORUAE" : "N",\r
         "TINAvailable" : "Y",\r
         "TinNo1" : "1",\r
         "TaxCountry1" : "ARE",\r
         "TinNo2" : "1",\r
         "TaxCountry2" : "ARE",\r
         "TinNo3" : "1",\r
         "TaxCountry3" : "ARE",\r
         "TinNo4" : "1",\r
         "TaxCountry4" : "ARE",\r
         "TinNo5" : "1",\r
         "TaxCountry5" : "ARE",\r
         "FATCANoReason" : "Reason A",\r
         "ReasonB" : "${=org.apache.commons.lang.RandomStringUtils.randomAlphabetic(5)}",\r
         "BOCity" : "00014",\r
         "BOState" : "006",\r
         "BOCountry" : "ARE",\r
         "IDGender" : "M",\r
         "DateOfBirth" : "2001/09/08",\r
         "IDNationality" : "ARE"\r
      }\r
   ]\r
}</con:request>
            <con:originalUri>http://null/api/BankSmart/CreateCorporateCIF</con:originalUri>
            <con:assertion type="Simple Contains" id="959b0623-9de5-424d-b79e-9ef7bf2b0627" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4ff8877f-9b05-4b94-b2aa-a28f1f13763e" name="JSONPath Match">
              <con:configuration>
                <path>$.status.statusMessage</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="56859b3e-a886-452c-a52e-5f98a06df0e3" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-30T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:clientID[1]</con:xpath>
                  <con:element>clientID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>000009287</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:shareHolderID[1]/ns1:e[1]/ns1:id[1]</con:xpath>
                  <con:element>id</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:shareHolderID[1]/ns1:e[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>fahad</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:authorisedSignatorieID[1]/ns1:e[1]/ns1:id[1]</con:xpath>
                  <con:element>id</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>10</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:authorisedSignatorieID[1]/ns1:e[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>fahad</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:beneficialOwner[1]/ns1:e[1]/ns1:id[1]</con:xpath>
                  <con:element>id</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:beneficialOwner[1]/ns1:e[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>fahad</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:boardDirectors[1]/ns1:e[1]/ns1:id[1]</con:xpath>
                  <con:element>id</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/CreateCorporateCIF';
//ns1:Response[1]/ns1:content[1]/ns1:boardDirectors[1]/ns1:e[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>fahad</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://null/api/BankSmart/CreateCorporateCIF">
   <requestDateTime>2019-08-30T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <clientID>000009287</clientID>
      <shareHolderID>
         <e>
            <id>11</id>
            <name>fahad</name>
         </e>
      </shareHolderID>
      <authorisedSignatorieID>
         <e>
            <id>10</id>
            <name>fahad</name>
         </e>
      </authorisedSignatorieID>
      <beneficialOwner>
         <e>
            <id>11</id>
            <name>fahad</name>
         </e>
      </beneficialOwner>
      <boardDirectors>
         <e>
            <id>11</id>
            <name>fahad</name>
         </e>
      </boardDirectors>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="c6708cad-5daf-4113-8ca2-7a95efb50919" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor11-erc</con:username>
              <con:password>P@ssw0rd11</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="${DataSource#Authorization}"/>
              <con:entry key="Content-Type" value="${DataSource#Content-Type}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="UpdateCorporateClientV2" id="3c4bf52f-7341-4566-ab38-f36082025925">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/UpdateCorporateClientV2" methodName="UpdateCorporateClient" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="UpdateCorporateClientV2" id="1bb55f0f-7866-4261-8aba-74b5f7e0dd63" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "11",\r
      "OurBranchId" : "03"\r
   },\r
   "Cust" : {\r
      "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
      "DualCitizen": "N",
      "RManager" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['RManager']}",\r
      "RiskProfile" : "Low",\r
      "EntityNameCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['EntityNameCorp']}",\r
      "EntityTypeCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['EntityTypeCorp']}",\r
      "YearofestablishmentCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['YearofestablishmentCorp']}",\r
      "RegisteredAddressCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['RegisteredAddressCorp']}",\r
      "ContactName1Corp" : "API_HC_${CreateCorporateCIFV2#RawRequest#$['Cust']['ContactName1Corp']}",\r
      "ContactID1Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['ContactID1Corp']}",\r
      "IDTypeCorp" : "TLL",\r
      "Address1Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['Address1Corp']}",\r
      "PhoneNumberCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['PhoneNumberCorp']}",\r
      "AlternatePhonenumberCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['AlternatePhonenumberCorp']}",\r
      "EmailIDCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['EmailIDCorp']}",\r
      "ContactName2Corp" : "API_HC_${CreateCorporateCIFV2#RawRequest#$['Cust']['ContactName2Corp']}",\r
      "ContactID2Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['ContactID2Corp']}",\r
      "IDType2" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['IDType2']}",\r
      "Address2Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['Address2Corp']}",\r
      "PhoneNumber2Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['PhoneNumber2Corp']}",\r
      "AlternatePhonenumber2Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['AlternatePhonenumber2Corp']}",\r
      "EmailID2Corp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['EmailID2Corp']}",\r
      "BusinessActivity" : "0111",\r
      "IndustryCorp" : "MFT",\r
      "PresenceinCISCountryCorp" : "Y",\r
      "DealingwithCISCountryCorp" : "Y",\r
      "TradeLicenseNumberCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['TradeLicenseNumberCorp']}",\r
      "CountryofIncorporationCorp" : "ARE",\r
      "TradeLicenseIssuedateCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['TradeLicenseIssuedateCorp']}",\r
      "TradeLicenseExpirydateCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['TradeLicenseExpirydateCorp']}",\r
      "TradeLicenseIssuanceAuthorityCorp" : "Dubai",\r
      "TRNNoCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['TRNNoCorp']}",\r
      "PEPCorp" : "N",\r
      "BlackListCorp" : "N",\r
      "KYCReviewDateCorp" : "2022-12-31",\r
      "FATCARelevantCorp" : "N",\r
      "CRSRelevantCorp" : "N",\r
      "USAEntityCorp" : "SUP",\r
      "FFICorp" : "N",\r
      "FFICategoryCorp" : "PFI",\r
      "GIINNoCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['GIINNoCorp']}",\r
      "GIINNACorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['GIINNACorp']}",\r
      "SponsorNameCorp" : "API_HC_${CreateCorporateCIFV2#RawRequest#$['Cust']['SponsorNameCorp']}",\r
      "SponsorGIIN" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['SponsorGIIN']}",\r
      "NFFECorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['NFFECorp']}",\r
      "StockExchangeCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['StockExchangeCorp']}",\r
      "TradingSymbolCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['TradingSymbolCorp']}",\r
      "USAORUAECorp" : "N",\r
      "TINAvailableCorp" : "Y",\r
      "TinNo1Corp" : "1",\r
      "TaxCountry1Corp" : "ARE",\r
      "TinNo2Corp" : "1",\r
      "TaxCountry2Corp" : "ARE",\r
      "TinNo3Corp" : "1",\r
      "TaxCountry3Corp" : "ARE",\r
      "TinNo4Corp" : "1",\r
      "TaxCountry4Corp" : "ARE",\r
      "TinNo5Corp" : "1",\r
      "TaxCountry5Corp" : "ARE",\r
      "FATCANoReasonCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['FATCANoReasonCorp']}",\r
      "ReasonBCorp" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['ReasonBCorp']}",\r
      "CompanyWebsite" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['CompanyWebsite']}",\r
      "CompCashIntensive" : "Y",\r
      "PubLimCompCorp" : "Y",\r
      "RegAddCountryCorp" : "ARE",\r
      "REGADDSTATECORP" : "006",\r
      "RegAddCityCorp" : "00014",\r
      "Add1CountryCorp" : "ARE",\r
      "Add1StateCorp" : "006",\r
      "Add1CityCorp" : "00014",\r
      "Add2CountryCorp" : "ARE",\r
      "Add2StateCorp" : "006",\r
      "Add2CityCorp" : "00014",\r
      "VATRegistered" : "1970-01-01 00:00:00.000",\r
      "JurEmiratesID" : "001",\r
      "JurTypeID" : "001",\r
      "JurAuthorityID" : "001",\r
      "POBox" : "2344"\r
   },\r
   "SICCODECORP" : [\r
      {\r
         "sicCodeCorp" : "0112",\r
         "type" : "P"\r
      }\r
   ]\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/UpdateCorporateClient</con:originalUri>
            <con:assertion type="Simple Contains" id="c0e0f5b5-47d7-43b6-a779-0d33571c8e38" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="61906fb4-c297-4c08-b474-3d633c9a3118" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateCorporateClient';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateCorporateClient';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateCorporateClient';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateCorporateClient';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateCorporateClient';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateCorporateClient';
//ns1:Response[1]/ns1:content[1]</con:xpath>
                  <con:element>content</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/UpdateCorporateClient">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>true</content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6387902f-5501-42de-82ea-402f3475a0ae" name="JSONPath Match">
              <con:configuration>
                <path>$.content</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor11-erc</con:username>
              <con:password>P@ssw0rd11</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CreateCorporateAccount" id="9a579bc0-6e9e-4410-adf9-d9230fd98197">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/CreateCorporateAccount" methodName="CreateCorporateAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CreateCorporateAccount" id="acbd2f65-3b5f-4ae8-b962-07ba00c71d96" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "2019-03-06T00:00:00",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "SignatureInstructions" : "this is to allow all",\r
   "Acc" : {\r
      "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
      "ProductID" : "CCAAED",\r
      "Name" : "${CreateCorporateCIFV2#Request#$['Cust']['Name']}",\r
      "Address" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['RegisteredAddressCorp']}",\r
      "CountryID" : "ARE",\r
      "StateID" : "006",\r
      "CityID" : "00014",\r
      "StatementFrequency" : "Y",\r
      "HoldMail" : 1,\r
      "ZakatExemption" : 1,\r
      "ContactPersonName" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['ContactName1Corp']}",\r
      "Designation" : "",\r
      "Phone1" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['PhoneNumberCorp']}",\r
      "Phone2" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['AlternatePhonenumberCorp']}",\r
      "MobileNo" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(10)}",\r
      "Fax" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(10)}",\r
      "EmailID" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['EmailIDCorp']}",\r
      "IntroducerAccountNo" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(10)}",\r
      "IntroducedBy" : "API_HC_${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
      "IntroducerAddress" : "Freser Suite${=org.apache.commons.lang.RandomStringUtils.randomNumeric(2)}",\r
      "IntroducerCityID" : "00014",\r
      "IntroducerStateID" : "006",\r
      "IntroducerCountryID" : "ARE",\r
      "ModeOfOperation" : "Company Mandate",\r
      "Reminder" : "API_HC_${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
      "Notes" : "API_HC_Reminder Notes${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}",\r
      "NatureID" : "0101",\r
      "RelationshipCode" : "CAD",\r
      "AllowCreditTransaction" : 0,\r
      "AllowDebitTransaction" : 0,\r
      "NotServiceCharges" : 1,\r
      "NotStopPaymentCharges" : 1,\r
      "NotChequeBookCharges" : 1,\r
      "TurnOver" : "Above 10M",\r
      "NoOfDrTrx" : 1,\r
      "NoOfCrTrx" : 1,\r
      "DrThresholdLimit" : 1,\r
      "CrThresholdLimit" : 1,\r
      "ProductCash" : 1,\r
      "ProductClearing" : 1,\r
      "ProductCollection" : 1,\r
      "ProductRemittance" : 1,\r
      "ProductCross" : 1,\r
      "ProductOthers" : 1,\r
      "ProductOthersDesc" : "API_HC_Remarks${=org.apache.commons.lang.RandomStringUtils.randomNumeric(3)}"\r
   }\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/CreateCorporateAccount</con:originalUri>
            <con:assertion type="Simple Contains" id="795761a6-33d6-4a06-99f3-03f62a28df27" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="43701d47-2dff-463c-a997-bdf3f91e1698" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:content[1]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100001439101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:content[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Amar</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:content[1]/ns1:iban[1]</con:xpath>
                  <con:element>iban</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AE900900150100001439101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:content[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>InActive</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CreateCorporateAccount';
//ns1:Response[1]/ns1:content[1]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/CreateCorporateAccount">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <accountID>0150100001439101</accountID>
      <name>Amar</name>
      <iban>AE900900150100001439101</iban>
      <status>InActive</status>
      <currencyID>AED</currencyID>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5e5154e7-0c08-4d9b-a3d5-c520053fd9a1" name="JSONPath Match">
              <con:configuration>
                <path>$['content']['status']</path>
                <content>InActive</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="${DataSource#Authorization}"/>
              <con:entry key="Content-Type" value="${DataSource#Content-Type}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="ScreeningLegalPersonModel" id="10d01434-3cf0-4f5c-886b-d6909a0ce06e">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/IMTF/ScreeningLegalPersonModel" methodName="ScreeningLegalPersonModel" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="ScreeningLegalPersonModel" id="fb269761-0750-49ef-b1ce-71e6da1eb3a1" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "RootObject" : {\r
      "RequestMetaData" : {\r
         "type" : "NBK_SCR_CRP",\r
         "sendTime" : "22/01/2020 05:01:32.203714",\r
         "timeZone" : "4",\r
         "userId" : "SYSTEM",\r
         "requestUid" : "${=java.util.UUID.randomUUID()}",\r
         "orgUnit" : "ORG_GLOBAL/ORG_AE/AE_CORP",\r
         "branchCompanyId" : "HAS",\r
         "branchLocationId" : "784101",\r
         "systemId" : "10",\r
         "serviceId" : "NBK_SCR_CRP"\r
      },\r
      "RequestDataObject" : {\r
         "DoiPerson" : [\r
            {\r
               "entityType" : "3001",\r
               "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
               "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",\r
               "legalStatus" : "L",\r
               "lastName" : "${CreateCorporateAccount#Response#$['content']['name']}",\r
               "activityCode" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['GroupCode']}",\r
               "businessCode" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['BusinessActivity']}",\r
               "startDtg" : "1/5/2006 00:00:00.000000",\r
               "giin" : "5645645",\r
               "tin" : "546546456",\r
               "DoiPersonPhysChar" : [\r
                  {\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",\r
                     "nationality" : "ARE"\r
                  },\r
                  {\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_SIC_4",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",\r
                     "businessCode" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['BusinessActivity']}"\r
                  }\r
               ],\r
               "DoiIdentificationDocEntity" : [\r
                  {\r
                     "entityType" : "18",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_1",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ID",\r
                     "type" : "TLL",\r
                     "issuingCountry" : "ARE",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['TradeLicenseNumberCorp']}",\r
                     "startDtg" : "1/5/2006 00:00:00.000000",\r
                     "endDtg" : "30/4/2020 00:00:00.000000"\r
                  }\r
               ],\r
               "DoiLocation" : [\r
                  {\r
                     "entityType" : "21",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_2",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ADR",\r
                     "fullStreetAddress" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['RegisteredAddressCorp']}",\r
                     "country" : "ARE",\r
                     "addressPurposeId" : "001",\r
                     "city" : "Dubai City"\r
                  }\r
               ],\r
               "DoiPhoneEntity" : [\r
                  {\r
                     "entityType" : "10",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_3",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_4N",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['PhoneNumberCorp']}"\r
                  }\r
               ],\r
               "DoiEMailEntity" : [\r
                  {\r
                     "entityType" : "16",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_5",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_EMAIL",\r
                     "email" : "${CreateCorporateCIFV2#RawRequest#$['Cust']['EmailIDCorp']}"\r
                  }\r
               ],\r
               "DoiRelation" : [\r
                  {\r
                     "entityType" : "2000",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_REL1",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/RELAT",\r
                     "originIdEnd2" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Contact",\r
                     "linkDirection" : "0",\r
                     "description" : "API_HC_ContactName",\r
                     "originIdEnd1" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
                  },\r
                  {\r
                     "entityType" : "2000",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_REL2",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/RELAT",\r
                     "originIdEnd2" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SH_${CreateCorporateCIFV2#Response#$['content']['shareHolderID'][0]['id']}",\r
                     "linkDirection" : "0",\r
                     "linkWeight" : "100.00",\r
                     "description" : "API_HC_ShareHolder",\r
                     "originIdEnd1" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
                  },\r
                  {\r
                     "entityType" : "2000",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_REL3",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/RELAT",\r
                     "originIdEnd2" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SG_${CreateCorporateCIFV2#Response#$['content']['authorisedSignatorieID'][0]['id']}",\r
                     "linkDirection" : "0",\r
                     "description" : "API_HC_Authorised Signatories",\r
                     "originIdEnd1" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
                  },\r
                  {\r
                     "entityType" : "2000",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_REL4",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/RELAT",\r
                     "originIdEnd2" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BD_${CreateCorporateCIFV2#Response#$['content']['boardDirectors'][0]['id']}",\r
                     "linkDirection" : "0",\r
                     "description" : "API_HC_Board Director",\r
                     "originIdEnd1" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
                  },\r
                  {\r
                     "entityType" : "2000",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_REL5",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/RELAT",\r
                     "originIdEnd2" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BO_${CreateCorporateCIFV2#Response#$['content']['beneficialOwner'][0]['id']}",\r
                     "linkDirection" : "0",\r
                     "description" : "API_HC_Beneficial Owners",\r
                     "originIdEnd1" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
                  }\r
               ],\r
               "DoiAccountEntity" : [\r
                  {\r
                     "entityType" : "4",\r
                     "originId" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ACC",\r
                     "accountType" : "${CreateCorporateAccount#RawRequest#$['Acc']['ProductID']}",\r
                     "accountNumber" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
                     "bankIban" : "${CreateCorporateAccount#Response#$['content']['iban']}",\r
                     "branchCountry" : "AE",\r
                     "status" : "InActive",\r
                     "openingDate" : "22/01/2020 05:01:32.644816",\r
                     "DoiAccountBalance" : [\r
                        {\r
                           "originId" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
                           "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS_ACC",\r
                           "baseAmountBalance" : "0",\r
                           "baseCurrency" : "AED",\r
                           "balanceDate" : "22/01/2020 05:01:32.644816"\r
                        }\r
                     ]\r
                  }\r
               ],\r
               "fullName" : "${CreateCorporateAccount#Response#$['content']['name']}",\r
               "DoiRisk" : [\r
                  {\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_BLK",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",\r
                     "riskCategory" : "16) Blacklist Flag",\r
                     "riskSubCategory" : "Confirmed Blacklist",\r
                     "riskScoring" : 0\r
                  },\r
                  {\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_PEP",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/CUS",\r
                     "riskCategory" : "15) PEP Flag",\r
                     "riskSubCategory" : "Confirmed PEP",\r
                     "riskScoring" : 0\r
                  }\r
               ]\r
            },\r
            {\r
               "entityType" : "3001",\r
               "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Contact",\r
               "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP",\r
               "legalStatus" : "L",\r
               "DoiRelation" : [ ],\r
               "fullName" : "${CreateCorporateAccount#Response#$['content']['name']}"\r
            },\r
            {\r
               "entityType" : "3001",\r
               "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SH_${CreateCorporateCIFV2#Response#$['content']['shareHolderID'][0]['id']}",\r
               "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP",\r
               "legalStatus" : "N",\r
               "tin" : "",\r
               "DoiIdentificationDocEntity" : [\r
                  {\r
                     "entityType" : "18",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SH_${CreateCorporateCIFV2#Response#$['content']['shareHolderID'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ID",\r
                     "type" : "EID",\r
                     "issuingCountry" : "ARE",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['ShareHolders'][0]['ShareholdersIDNo']}",\r
                     "endDtg" : "27/02/2022 00: 02:00.000000"\r
                  }\r
               ],\r
               "DoiRelation" : [ ],\r
               "fullName" : "${CreateCorporateCIFV2#Response#$['content']['shareHolderID'][0]['name']}",\r
               "dob" : "08/09/1975 00:00:00.000000"\r
            },\r
            {\r
               "entityType" : "3001",\r
               "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SG_${CreateCorporateCIFV2#Response#$['content']['authorisedSignatorieID'][0]['id']}",\r
               "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP",\r
               "legalStatus" : "N",\r
               "tin" : "",\r
               "DoiIdentificationDocEntity" : [\r
                  {\r
                     "entityType" : "18",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SG_${CreateCorporateCIFV2#Response#$['content']['authorisedSignatorieID'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ID",\r
                     "type" : "PAS",\r
                     "issuingCountry" : "ARE",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['Authignatories'][0]['AuthorisedsignatoryIDNumber1']}",\r
                     "endDtg" : "04/12/2022 00: 12:00.000000"\r
                  }\r
               ],\r
               "DoiPhoneEntity" : [\r
                  {\r
                     "entityType" : "10",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SG_${CreateCorporateCIFV2#Response#$['content']['authorisedSignatorieID'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_4N",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['Authignatories'][0]['PhoneNumber']}"\r
                  }\r
               ],\r
               "DoiEMailEntity" : [\r
                  {\r
                     "entityType" : "16",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_SG_${CreateCorporateCIFV2#Response#$['content']['authorisedSignatorieID'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_EMAIL",\r
                     "email" : "${CreateCorporateCIFV2#RawRequest#$['Authignatories'][0]['EmailID']}"\r
                  }\r
               ],\r
               "DoiRelation" : [ ],\r
               "fullName" : "${CreateCorporateCIFV2#Response#$['content']['authorisedSignatorieID'][0]['name']}",\r
               "dob" : "08/09/1975 00:00:00.000000"\r
            },\r
            {\r
               "entityType" : "3001",\r
               "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BD_${CreateCorporateCIFV2#Response#$['content']['boardDirectors'][0]['id']}",\r
               "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP",\r
               "legalStatus" : "N",\r
               "tin" : "",\r
               "DoiIdentificationDocEntity" : [\r
                  {\r
                     "entityType" : "18",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BD_${CreateCorporateCIFV2#Response#$['content']['boardDirectors'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ID",\r
                     "type" : "PAS",\r
                     "issuingCountry" : "ARE",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['BoardDirectors'][0]['BoardDirectorIDNo']}",\r
                     "endDtg" : "27/02/2021 00:02:00.000000"\r
                  }\r
               ],\r
               "DoiLocation" : [\r
                  {\r
                     "entityType" : "21",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BD_${CreateCorporateCIFV2#Response#$['content']['boardDirectors'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ADR",\r
                     "country" : "ARE"\r
                  }\r
               ],\r
               "DoiRelation" : [ ],\r
               "fullName" : "${CreateCorporateCIFV2#Response#$['content']['boardDirectors'][0]['name']}",\r
               "dob" : "08/09/1975 00:02:00.000000"\r
            },\r
            {\r
               "entityType" : "3001",\r
               "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BO_${CreateCorporateCIFV2#Response#$['content']['boardDirectors'][0]['id']}",\r
               "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP",\r
               "legalStatus" : "N",\r
               "tin" : "",\r
               "DoiIdentificationDocEntity" : [\r
                  {\r
                     "entityType" : "18",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BO_${CreateCorporateCIFV2#Response#$['content']['beneficialOwner'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ID",\r
                     "type" : "EID",\r
                     "issuingCountry" : "ARE",\r
                     "number" : "${CreateCorporateCIFV2#RawRequest#$['BeneficialOwners'][0]['BeneficialIDNo']}",\r
                     "endDtg" : "27/02/2022 00:02:00.000000"\r
                  }\r
               ],\r
               "DoiLocation" : [\r
                  {\r
                     "entityType" : "21",\r
                     "originId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}_Rep_BO_${CreateCorporateCIFV2#Response#$['content']['beneficialOwner'][0]['id']}",\r
                     "listId" : "ORG_GLOBAL/ORG_AE/AE_CORP/REP_ADR",\r
                     "country" : "ARE"\r
                  }\r
               ],\r
               "DoiRelation" : [ ],\r
               "fullName" : "${CreateCorporateCIFV2#RawRequest#$['BoardDirectors'][0]['BoardDirectorName']}",\r
               "dob" : "08/09/1975 00:02:00.000000"\r
            }\r
         ]\r
      }\r
   }\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/IMTF/ScreeningLegalPersonModel</con:originalUri>
            <con:assertion type="JsonPath Match" id="568acdbb-178e-4ecb-a80b-a7ac8b90c4b9" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['statusMessage']</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="2ef67d6f-035b-4c9f-ad9c-e3f21be676b1" name="Contains">
              <con:configuration>
                <token>success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Content-Type" value="${DataSource#Content-Type}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="UpdateAccountStatus" id="26381e1b-d368-42e6-b8bd-b402cf429faa">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/UpdateAccountStatus" methodName="UpdateAccountStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="UpdateAccountStatus" id="811fa04a-efaa-4e33-b850-5fb0f30e1cef" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "signOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //11
      "OurBranchId" : "03"\r
   },\r
   "AccountID" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
   "Status" : ""\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/UpdateAccountStatus</con:originalUri>
            <con:assertion type="Simple Contains" id="52451193-a5ee-4daa-a04b-01abc10ad3f6" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="b72f12c8-ddb0-4018-9d34-36612f55c74f" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:content[1]</con:xpath>
                  <con:element>content</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/UpdateAccountStatus';
//ns1:Response[1]/ns1:content[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/UpdateAccountStatus">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content null="true"/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="f70b79d2-60cd-41fc-b9a9-46a04628c80e" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['statusMessage']</path>
                <content>Success</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetCorporateAccountDetail" id="3615490b-6ce9-4fda-996c-c1c08abd739a">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetCorporateAccountDetail" methodName="GetCorporateAccountDetail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetCorporateAccountDetail" id="87c21957-0d4c-4df2-a3ef-227b1401526e" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //11
      "OurBranchId" : "03"\r
   },\r
   "AccountID" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
   "IBAN" : ""\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail</con:originalUri>
            <con:assertion type="Simple Contains" id="eb9e6db0-8577-40e4-a1af-20a3f60d892c" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="4ff4b1dc-7a58-4083-b5be-436d5be3d76c" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:clientID[1]</con:xpath>
                  <con:element>clientID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>000109863</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Amar</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:address[1]</con:xpath>
                  <con:element>address</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4/c block a</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:countryID[1]</con:xpath>
                  <con:element>countryID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>ARE</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:stateID[1]</con:xpath>
                  <con:element>stateID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>001</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:cityID[1]</con:xpath>
                  <con:element>cityID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>005</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:statementFrequency[1]</con:xpath>
                  <con:element>statementFrequency</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Q</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:holdMail[1]</con:xpath>
                  <con:element>holdMail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:zakatExemption[1]</con:xpath>
                  <con:element>zakatExemption</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:contactPersonName[1]</con:xpath>
                  <con:element>contactPersonName</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:designation[1]</con:xpath>
                  <con:element>designation</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Software Engineer</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:phone1[1]</con:xpath>
                  <con:element>phone1</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1231231</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:phone2[1]</con:xpath>
                  <con:element>phone2</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2312312</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:mobileNo[1]</con:xpath>
                  <con:element>mobileNo</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>9076532156</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:fax[1]</con:xpath>
                  <con:element>fax</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>test</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:emailID[1]</con:xpath>
                  <con:element>emailID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:introducerAccountNo[1]</con:xpath>
                  <con:element>introducerAccountNo</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>test</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:introducedBy[1]</con:xpath>
                  <con:element>introducedBy</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>test</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:introducerAddress[1]</con:xpath>
                  <con:element>introducerAddress</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:introducerCityID[1]</con:xpath>
                  <con:element>introducerCityID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>005</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:introducerStateID[1]</con:xpath>
                  <con:element>introducerStateID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>001</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:introducerCountryID[1]</con:xpath>
                  <con:element>introducerCountryID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>ARE</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:modeOfOperation[1]</con:xpath>
                  <con:element>modeOfOperation</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Company Mandate</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:reminder[1]</con:xpath>
                  <con:element>reminder</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>test</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:notes[1]</con:xpath>
                  <con:element>notes</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>test</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:natureID[1]</con:xpath>
                  <con:element>natureID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:relationshipCode[1]</con:xpath>
                  <con:element>relationshipCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CAD</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:allowCreditTransaction[1]</con:xpath>
                  <con:element>allowCreditTransaction</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:allowDebitTransaction[1]</con:xpath>
                  <con:element>allowDebitTransaction</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:notServiceCharges[1]</con:xpath>
                  <con:element>notServiceCharges</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:notStopPaymentCharges[1]</con:xpath>
                  <con:element>notStopPaymentCharges</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:notChequeBookCharges[1]</con:xpath>
                  <con:element>notChequeBookCharges</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:turnOver[1]</con:xpath>
                  <con:element>turnOver</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Above 10M</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:noOfDrTrx[1]</con:xpath>
                  <con:element>noOfDrTrx</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:noOfCrTrx[1]</con:xpath>
                  <con:element>noOfCrTrx</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:drThresholdLimit[1]</con:xpath>
                  <con:element>drThresholdLimit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:crThresholdLimit[1]</con:xpath>
                  <con:element>crThresholdLimit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productCash[1]</con:xpath>
                  <con:element>productCash</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productClearing[1]</con:xpath>
                  <con:element>productClearing</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productCollection[1]</con:xpath>
                  <con:element>productCollection</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productRemittance[1]</con:xpath>
                  <con:element>productRemittance</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productCross[1]</con:xpath>
                  <con:element>productCross</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productOthers[1]</con:xpath>
                  <con:element>productOthers</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:productOthersDesc[1]</con:xpath>
                  <con:element>productOthersDesc</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>test</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:iban[1]</con:xpath>
                  <con:element>iban</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AE860900150100010986301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:openDate[1]</con:xpath>
                  <con:element>openDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-01-21T14:14:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:activationDate[1]</con:xpath>
                  <con:element>activationDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-01-21T14:14:19.947</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail';
//ns1:Response[1]/ns1:content[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Active</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/GetCorporateAccountDetail">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <clientID>000109863</clientID>
      <productID>CCAAED</productID>
      <name>Amar</name>
      <address>4/c block a</address>
      <countryID>ARE</countryID>
      <stateID>001</stateID>
      <cityID>005</cityID>
      <statementFrequency>Q</statementFrequency>
      <holdMail>1</holdMail>
      <zakatExemption>1</zakatExemption>
      <contactPersonName/>
      <designation>Software Engineer</designation>
      <phone1>1231231</phone1>
      <phone2>2312312</phone2>
      <mobileNo>9076532156</mobileNo>
      <fax>test</fax>
      <emailID/>
      <introducerAccountNo>test</introducerAccountNo>
      <introducedBy>test</introducedBy>
      <introducerAddress/>
      <introducerCityID>005</introducerCityID>
      <introducerStateID>001</introducerStateID>
      <introducerCountryID>ARE</introducerCountryID>
      <modeOfOperation>Company Mandate</modeOfOperation>
      <reminder>test</reminder>
      <notes>test</notes>
      <natureID>0101</natureID>
      <relationshipCode>CAD</relationshipCode>
      <allowCreditTransaction>0</allowCreditTransaction>
      <allowDebitTransaction>0</allowDebitTransaction>
      <notServiceCharges>1</notServiceCharges>
      <notStopPaymentCharges>1</notStopPaymentCharges>
      <notChequeBookCharges>1</notChequeBookCharges>
      <turnOver>Above 10M</turnOver>
      <noOfDrTrx>1.0</noOfDrTrx>
      <noOfCrTrx>1.0</noOfCrTrx>
      <drThresholdLimit>1.0000</drThresholdLimit>
      <crThresholdLimit>1.0000</crThresholdLimit>
      <productCash>1</productCash>
      <productClearing>1</productClearing>
      <productCollection>1</productCollection>
      <productRemittance>1</productRemittance>
      <productCross>1</productCross>
      <productOthers>1</productOthers>
      <productOthersDesc>test</productOthersDesc>
      <iban>AE860900150100010986301</iban>
      <openDate>2020-01-21T14:14:00</openDate>
      <activationDate>2020-01-21T14:14:19.947</activationDate>
      <status>Active</status>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1c177ae0-88fc-433c-b9b3-116f74d4ce09" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AccountInquiry" id="ea581138-c29a-4eec-9880-30f85cbcf658">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/AccountInquiry" methodName="AccountInquiry" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AccountInquiry" id="beafddd0-0a15-4428-bd5e-cdd0db732a6e" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{

	"SignOnRq": {
		"LogId": "${=java.util.UUID.randomUUID()}",
		"DateTime": "${#TestCase#Date}",
          "ChannelId": "100", //9
          "OurBranchId": "01"
	},
	"AccountId":"${CreateCorporateAccount#Response#$['content']['accountID']}",
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/AccountInquiry</con:originalUri>
            <con:assertion type="Simple Contains" id="f192b1ba-3770-42df-9ac1-42e15ce93ba6" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="0da05d0b-c94a-48a3-bc5b-a7098621b54d" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0001-01-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:clientID[1]</con:xpath>
                  <con:element>clientID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>000014391</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100001439101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Amar</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:iban[1]</con:xpath>
                  <con:element>iban</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AE900900150100001439101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:natureID[1]</con:xpath>
                  <con:element>natureID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:accountType[1]</con:xpath>
                  <con:element>accountType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Non-Individual</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:mobileNo[1]</con:xpath>
                  <con:element>mobileNo</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>9076532156</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Active</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/AccountInquiry';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:openDate[1]</con:xpath>
                  <con:element>openDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T10:33:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/AccountInquiry">
   <requestDateTime>0001-01-01T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <e>
         <clientID>000014391</clientID>
         <accountID>0150100001439101</accountID>
         <productID>CCAAED</productID>
         <name>Amar</name>
         <iban>AE900900150100001439101</iban>
         <natureID>0101</natureID>
         <accountType>Non-Individual</accountType>
         <mobileNo>9076532156</mobileNo>
         <status>Active</status>
         <currencyID>AED</currencyID>
         <openDate>2019-09-03T10:33:00</openDate>
      </e>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ab69f40d-b808-49d1-82b4-09d5bac1fe48" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetBasicAccountInquiry" id="618ae32f-1d8c-4a98-9f31-d2c49ec56174">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetBasicAccountInquiry" methodName="GetBasicAccountInquiry" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetBasicAccountInquiry" id="31706188-18bd-4631-9724-4171df9e80bf" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "${=java.util.UUID.randomUUID()}",
        "DateTime": "${#TestCase#Date}",
        "ChannelId": "100",
        "OurBranchId": "01"
    },
    "AccountId": "${CreateCorporateAccount#Response#$['content']['accountID']}"
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/BalanceInquiry</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="7fa97bc8-aea8-4c45-bb8d-4d7831289eec" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetCIFAccountsBalanceInq" id="4f14ddce-beda-4016-a722-1095353dc465">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetCIFAccountsBalanceInq" methodName="GetCIFAccountsBalanceInq" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetCIFAccountsBalanceInq" id="ee7046ef-fa17-4024-a1d1-9d82c570c7ef" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "signOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq</con:originalUri>
            <con:assertion type="Simple Contains" id="964cff8c-f5bd-4f9b-bb1e-33ca142e179d" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="fcc3be71-6626-493f-832c-c06f9d3d463f" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0001-01-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:totalBalance[1]</con:xpath>
                  <con:element>totalBalance</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0.0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:availableBalance[1]</con:xpath>
                  <con:element>availableBalance</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>-10000.0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:accountId[1]</con:xpath>
                  <con:element>accountId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100001439101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:name[1]</con:xpath>
                  <con:element>name</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Amar</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Active</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:clientID[1]</con:xpath>
                  <con:element>clientID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>000014391</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:iban[1]</con:xpath>
                  <con:element>iban</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AE900900150100001439101</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:openDate[1]</con:xpath>
                  <con:element>openDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>9/3/2019 10:33:00 AM</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productType[1]</con:xpath>
                  <con:element>productType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AE</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productDESC[1]</con:xpath>
                  <con:element>productDESC</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>A&amp;E Product</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/GetCIFAccountsBalanceInq">
   <requestDateTime>0001-01-01T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <e>
         <totalBalance>0.0</totalBalance>
         <availableBalance>-10000.0</availableBalance>
         <accountId>0150100001439101</accountId>
         <productID>CCAAED</productID>
         <name>Amar</name>
         <currencyID>AED</currencyID>
         <status>Active</status>
         <clientID>000014391</clientID>
         <iban>AE900900150100001439101</iban>
         <openDate>9/3/2019 10:33:00 AM</openDate>
         <productType>AE</productType>
         <productDESC>A&amp;E Product</productDESC>
      </e>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="0570164c-c0d3-4b40-9e91-9c8f190e2a03" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CIFInquiryViaCIF" id="404c6e14-c704-4102-bb93-0e8003f64707">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/CIFinquiryViaCIF" methodName="CIFinquiryViaCIF" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CIFInquiryViaCIF" id="b3cee076-90fc-4126-b65a-d6d95689b67d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF</con:originalUri>
            <con:assertion type="Simple Contains" id="9d28d725-c314-4def-bc4c-db8eab8e6d7a" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="82d8a777-849e-4d08-9b53-7b481048d168" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T17:10:35.985736+04:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>d23ba6cd-77f4-4f93-b0ef-6fc64dafddc5</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:customerName[1]</con:xpath>
                  <con:element>customerName</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Jyothi</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:customerEmail[1]</con:xpath>
                  <con:element>customerEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:clientID[1]</con:xpath>
                  <con:element>clientID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>000109863</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:idno[1]</con:xpath>
                  <con:element>idno</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:phoneNum1[1]</con:xpath>
                  <con:element>phoneNum1</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:phoneNum2[1]</con:xpath>
                  <con:element>phoneNum2</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:mobileNum[1]</con:xpath>
                  <con:element>mobileNum</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:customerAddress[1]</con:xpath>
                  <con:element>customerAddress</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:customerAddress[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:customerPromoCode[1]</con:xpath>
                  <con:element>customerPromoCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF';
//ns1:Response[1]/ns1:content[1]/ns1:customerPromoCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/CIFinquiryViaCIF">
   <requestDateTime>2019-09-02T17:10:35.985736+04:00</requestDateTime>
   <logId>d23ba6cd-77f4-4f93-b0ef-6fc64dafddc5</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <customerName>Jyothi</customerName>
      <customerEmail/>
      <clientID>000109863</clientID>
      <idno/>
      <phoneNum1/>
      <phoneNum2/>
      <mobileNum/>
      <customerAddress null="true"/>
      <customerPromoCode null="true"/>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6c725dd2-5be7-4d8a-add4-c29388713abb" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Multibranch" id="28529b8c-7f12-462a-acd4-981291dc96b7">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/Multibranch" methodName="Multibranch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Multibranch" id="9f92a562-d89d-4b06-b7d2-4dc66f1d635a" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${Groovy Script#result}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "01"\r
   },\r
   "ChannelRefId" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(16)}",\r
   "TransferEntries" : [\r
      {\r
         "branchID" : "03",\r
         "NarrationId" : "200001",\r
         "AccountId" : "0310100031864601",\r
         "AccountType" : "C",\r
         "EntryType" : "D",\r
         "CurrencyID" : "AED",\r
         "Amount" : 111,\r
         "LocalEq" : 111,\r
         "ExchangeRate" : 1,\r
         "CoverRate" : 1,\r
         "Memo" : "API_HC_outgoing domestic transfer from Account ID: 0310100031864601",\r
         "valueDate" : "",\r
         "chequeID" : "",\r
         "chequeDate" : ""\r
      },\r
      {\r
         "BranchID" : "03",\r
         "NarrationId" : "100001",\r
         "AccountId" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
         "AccountType" : "C",\r
         "EntryType" : "C",\r
         "CurrencyID" : "AED",\r
         "Amount" : 111,\r
         "LocalEq" : 111,\r
         "ExchangeRate" : 1,\r
         "CoverRate" : 1,\r
         "Memo" : "API_HC_incoming domestic transfer to Account ID: ${CreateCorporateAccount#Response#$['content']['accountID']}",\r
         "valueDate" : "",\r
         "chequeID" : "",\r
         "chequeDate" : ""\r
      }\r
   ]\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="bd614043-3dcb-44ee-9976-48399b7d73d5" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetTransactionListCorporate" id="1b5f5ba9-635c-4a2e-bde6-49133b000b77">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetTransactionListCorporate" methodName="GetTransactionListCorporate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetTransactionListCorporate" id="9f7f6a61-f6f7-4e5e-9a2b-1148d618a58f" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "2021-05-31T00:00:00",\r
      "ChannelId" : "100",\r //10
      "OurBranchId" : "03"\r
   },\r
   "AccountID" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
   "startdate" : "${Groovy Script#result}",\r
   "enddate" : "${Groovy Script#result}"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/GetTransactionListCorporate</con:originalUri>
            <con:assertion type="Simple Contains" id="a90d4d56-559c-4974-bb5b-78d2ee9e119f" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ab882990-0c38-43fa-9f31-8c3bb34aea4a" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T18:58:26.623</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Debit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>FD issueance</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T18:04:07.87</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Credit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>500000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>102</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Intra bank funds transfer</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T18:05:13.27</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Debit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>FD issueance</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T18:06:54.747</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Debit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-08-31T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>FD issueance</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:00:33.357</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Debit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>FD issueance</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:07:11.61</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Debit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11111.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11111.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>FD issueance</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:workingDate[1]</con:xpath>
                  <con:element>workingDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:09:55.67</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:valueDate[1]</con:xpath>
                  <con:element>valueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:trxType[1]</con:xpath>
                  <con:element>trxType</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Debit</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>CCAAED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:chequeID[1]</con:xpath>
                  <con:element>chequeID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>V</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:chequeDate[1]</con:xpath>
                  <con:element>chequeDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>20000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:foreignAmount[1]</con:xpath>
                  <con:element>foreignAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:exchangeRate[1]</con:xpath>
                  <con:element>exchangeRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.00000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:descriptioID[1]</con:xpath>
                  <con:element>descriptioID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>103</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetTransactionListCorporate';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>20000 test(Transfer from A/C 0150100000929303 Transfer to A/C 0150100000929301)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/GetTransactionListCorporate">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <e>
         <workingDate>2019-09-02T18:58:26.623</workingDate>
         <valueDate>2019-09-02T00:00:00</valueDate>
         <trxType>Debit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-09-02T00:00:00</chequeDate>
         <amount>100.0000</amount>
         <foreignAmount>100.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>4</descriptioID>
         <description>FD issueance</description>
      </e>
      <e>
         <workingDate>2019-08-31T18:04:07.87</workingDate>
         <valueDate>2019-08-31T00:00:00</valueDate>
         <trxType>Credit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-08-31T00:00:00</chequeDate>
         <amount>500000.0000</amount>
         <foreignAmount>0.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>102</descriptioID>
         <description>Intra bank funds transfer</description>
      </e>
      <e>
         <workingDate>2019-08-31T18:05:13.27</workingDate>
         <valueDate>2019-08-31T00:00:00</valueDate>
         <trxType>Debit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-08-31T00:00:00</chequeDate>
         <amount>2000.0000</amount>
         <foreignAmount>2000.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>4</descriptioID>
         <description>FD issueance</description>
      </e>
      <e>
         <workingDate>2019-08-31T18:06:54.747</workingDate>
         <valueDate>2019-08-31T00:00:00</valueDate>
         <trxType>Debit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-08-31T00:00:00</chequeDate>
         <amount>1000.0000</amount>
         <foreignAmount>1000.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>4</descriptioID>
         <description>FD issueance</description>
      </e>
      <e>
         <workingDate>2019-09-02T19:00:33.357</workingDate>
         <valueDate>2019-09-02T00:00:00</valueDate>
         <trxType>Debit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-09-02T00:00:00</chequeDate>
         <amount>100.0000</amount>
         <foreignAmount>100.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>4</descriptioID>
         <description>FD issueance</description>
      </e>
      <e>
         <workingDate>2019-09-02T19:07:11.61</workingDate>
         <valueDate>2019-09-02T00:00:00</valueDate>
         <trxType>Debit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-09-02T00:00:00</chequeDate>
         <amount>11111.0000</amount>
         <foreignAmount>11111.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>4</descriptioID>
         <description>FD issueance</description>
      </e>
      <e>
         <workingDate>2019-09-02T19:09:55.67</workingDate>
         <valueDate>2019-09-02T00:00:00</valueDate>
         <trxType>Debit</trxType>
         <productID>CCAAED</productID>
         <currencyID>AED</currencyID>
         <chequeID>V</chequeID>
         <chequeDate>2019-09-02T00:00:00</chequeDate>
         <amount>20000.0000</amount>
         <foreignAmount>0.0000</foreignAmount>
         <exchangeRate>1.00000000</exchangeRate>
         <descriptioID>103</descriptioID>
         <description>20000 test(Transfer from A/C 0150100000929303 Transfer to A/C 0150100000929301)</description>
      </e>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3e6a5fbe-1d08-499f-bf06-31d411e0c607" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetDepositRates" id="ef4ccda9-b20a-4a5a-849c-12118a33af19">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetDepositRates" methodName="GetDepositRates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetDepositRates" id="8ccc867a-d298-4457-b6a5-b621736fdb30" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //10
      "OurBranchId" : "03"\r
   },\r
   "ProductID" : "TDR1Y",\r
   "ReciptID" : "",\r
   "Date" : "2022-03-13T10:26:32"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/GetDepositRates</con:originalUri>
            <con:assertion type="Simple Contains" id="983acc99-8e76-4d15-b0c9-7da508e77ad7" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="9d360563-3f68-441a-89f6-fb42093dbdde" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:serialID[1]</con:xpath>
                  <con:element>serialID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:type[1]</con:xpath>
                  <con:element>type</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>A</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:minAmount[1]</con:xpath>
                  <con:element>minAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:maxAmount[1]</con:xpath>
                  <con:element>maxAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>999999999999.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:effectiveDate[1]</con:xpath>
                  <con:element>effectiveDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-07-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:monthRate[1]</con:xpath>
                  <con:element>monthRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:weightRate[1]</con:xpath>
                  <con:element>weightRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:premiumRate[1]</con:xpath>
                  <con:element>premiumRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>6.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:depositRates[1]/ns1:e[1]/ns1:preMatureRate[1]</con:xpath>
                  <con:element>preMatureRate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4.5000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:specialRates[1]</con:xpath>
                  <con:element>specialRates</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetDepositRates';
//ns1:Response[1]/ns1:content[1]/ns1:prematureRates[1]</con:xpath>
                  <con:element>prematureRates</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/GetDepositRates">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <depositRates>
         <e>
            <productID>TDR1Y</productID>
            <serialID>1.0</serialID>
            <type>A</type>
            <minAmount>1.0000</minAmount>
            <maxAmount>999999999999.0000</maxAmount>
            <effectiveDate>2019-07-01T00:00:00</effectiveDate>
            <monthRate>5.0000</monthRate>
            <weightRate>1.0000</weightRate>
            <premiumRate>6.0000</premiumRate>
            <preMatureRate>4.5000</preMatureRate>
         </e>
      </depositRates>
      <specialRates/>
      <prematureRates/>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8d0c3fb4-02e7-4ada-ad9e-7534f8c3aa6b" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetFixDeposit Products" id="b890a861-73d4-4176-a34f-5eedbcb23d17">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetFixDepositProducts" methodName="GetFixDepositProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetFixDeposit Products" id="b5f6b9f0-06de-410f-9fb1-59847e2d1a9e" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "2022-03-13T10:26:32",\r
      "ChannelId" : "100",\r //10
      "OurBranchId" : "03"\r
   }\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/GetFixDepositProducts</con:originalUri>
            <con:assertion type="Simple Contains" id="762b3bc5-05e4-42ee-b608-18fbf8afe40e" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="7997eae6-5a10-486d-8027-2a7a15c65b5a" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:description[1]</con:xpath>
                  <con:element>description</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>PLS TERM DEPOSITS - TDR's - 01 YEAR</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:isTermDeposit[1]</con:xpath>
                  <con:element>isTermDeposit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:periodsInFigure[1]</con:xpath>
                  <con:element>periodsInFigure</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:period[1]</con:xpath>
                  <con:element>period</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:isAutoProfit[1]</con:xpath>
                  <con:element>isAutoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:profitPeriod[1]</con:xpath>
                  <con:element>profitPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Half Yearly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:maturityProfit[1]</con:xpath>
                  <con:element>maturityProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Principal Rollover</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:isAutoRollover[1]</con:xpath>
                  <con:element>isAutoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:isAutoRollover[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:optionsAtMaturity[1]</con:xpath>
                  <con:element>optionsAtMaturity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:optionsAtMaturity[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:minimumAmount[1]</con:xpath>
                  <con:element>minimumAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:isTiersAllow[1]</con:xpath>
                  <con:element>isTiersAllow</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:isMultipleReceipts[1]</con:xpath>
                  <con:element>isMultipleReceipts</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:currencyID[1]</con:xpath>
                  <con:element>currencyID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>AED</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/GetFixDepositProducts';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:currencyDesc[1]</con:xpath>
                  <con:element>currencyDesc</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>UAE DIRHAMS</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/GetFixDepositProducts">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <e>
         <productID>TDR1Y</productID>
         <description>PLS TERM DEPOSITS - TDR's - 01 YEAR</description>
         <isTermDeposit>Yes</isTermDeposit>
         <periodsInFigure>1</periodsInFigure>
         <period>Y</period>
         <isAutoProfit>Yes</isAutoProfit>
         <profitPeriod>Half Yearly</profitPeriod>
         <maturityProfit>Principal Rollover</maturityProfit>
         <isAutoRollover null="true"/>
         <optionsAtMaturity null="true"/>
         <minimumAmount>1.0000</minimumAmount>
         <isTiersAllow>0</isTiersAllow>
         <isMultipleReceipts>1</isMultipleReceipts>
         <currencyID>AED</currencyID>
         <currencyDesc>UAE DIRHAMS</currencyDesc>
      </e>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="36cb65f4-d309-4ce7-880b-b9120b5f31bd" name="JSONPath Match">
              <con:configuration>
                <path>$['content'][0]['isTermDeposit']</path>
                <content>Yes</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Calculate Maturity Date" id="6c3e8155-b485-459b-9b77-0743c0ebdedf">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/CalculateMaturityDate" methodName="CalculateMaturityDate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Calculate Maturity Date" id="da25c2ae-04cc-4bc7-9915-0b47d577d094" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${Groovy Script#result}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "ProductID" : "TDR1Y",\r
   "ValueDate" : "${Groovy Script#result}",\r
   "noOfDays" : 10,\r
   "Rate" : 1.2,\r
   "Amount" : 1000\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/CalculateMaturityDate</con:originalUri>
            <con:assertion type="Simple Contains" id="54daae11-1142-4998-a3ea-daae8c6d005d" name="Contains">
              <con:configuration>
                <token>success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="5902b158-84da-4f3b-9c88-672d9e54c661" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:content[1]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-03-05T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/CalculateMaturityDate';
//ns1:Response[1]/ns1:content[1]/ns1:maturityAmount[1]</con:xpath>
                  <con:element>maturityAmount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>10.12</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/CalculateMaturityDate">
   <requestDateTime>2019-03-06T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <maturityDate>2020-03-05T00:00:00</maturityDate>
      <maturityAmount>10.12</maturityAmount>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ea790ef5-b4bc-447b-9e1b-f1a2454e2936" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="OpenFDAccount" id="b9090310-3c33-4e8d-b6ab-b8a22d309ab2">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/OpenFDAccount" methodName="OpenFDAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OpenFDAccount" id="41fe8948-e550-447f-838a-5e903c3b0480" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100", //10,
      "OurBranchId" : "03"\r
   },\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
   "ProductID" : "TDR7D"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/OpenFDAccount</con:originalUri>
            <con:assertion type="Simple Contains" id="a7c1c80e-43f9-4bbc-8878-13622a6698f9" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="74ce93fa-daf6-4447-b017-b90afa17a286" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFDAccount';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFDAccount';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFDAccount';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFDAccount';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFDAccount';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFDAccount';
//ns1:Response[1]/ns1:content[1]</con:xpath>
                  <con:element>content</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200001440801</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/OpenFDAccount">
   <requestDateTime>2019-03-06T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>0101200001440801</content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="af8ed204-7ffc-439b-b79e-10feea09c9f1" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="${DataSource#Authorization}"/>
              <con:entry key="Content-Type" value="${DataSource#Content-Type}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="OpenFixDeposit" id="f1fd0b2c-a5c4-42ab-8847-c13bac6bd603">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/OpenFixDeposit" methodName="OpenFixDeposit" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OpenFixDeposit" id="f29bff09-f748-4615-b26f-87e1c5123862" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "79675fe6-3bf2-496b-a42f-74227c7d0044",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "NoOfIssues" : 1,\r
   "TDRIssuance" : {\r
      "clientId" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
      "ProductID" : "TDR7D",\r
      "AccountID" : "${OpenFDAccount#Response#$['content']}",\r
      "NAccount" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
      "Amount" : "10",\r
      "ExchangeRate" : "1",\r
      "IssueDate" : "${issuedate#result}",\r
      "StartDate" : "${issuedate#result}",\r
      "MaturityDate" : "${MaturityDate#result}",\r
      "Rate" : 3,\r
      "AutoProfit" : "NO",\r
      "Treatment" : "Encashment",\r
      "PaymentPeriod" : "Monthly",\r
      "AutoRollOver" : "No"\r
   }\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/OpenFixDeposit</con:originalUri>
            <con:assertion type="MessageContentAssertion" id="b750fc0e-8057-4b78-85ee-2b22ad9f8768" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:content[1]/ns1:referenceNo[1]</con:xpath>
                  <con:element>referenceNo</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/OpenFixDeposit';
//ns1:Response[1]/ns1:content[1]/ns1:recipts[1]</con:xpath>
                  <con:element>recipts</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>8|</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/OpenFixDeposit">
   <requestDateTime>2019-03-06T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <referenceNo>2</referenceNo>
      <recipts>8|</recipts>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="13cff8dc-c99d-479d-98a4-87d0be1e7194" name="Contains">
              <con:configuration>
                <token>success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="${DataSource#Authorization}"/>
              <con:entry key="Content-Type" value="${DataSource#Content-Type}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DepositsList" id="2a0f6505-7914-4890-9776-11cda3878713">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/DepositsList" methodName="DepositsList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DepositsList" id="6cdfb268-0ea5-4eea-a242-97b932ec8a02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "2021-05-31T00:00:00",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "03"\r
   },\r
   "clientID" : "${OpenFixDeposit#RawRequest#$['TDRIssuance']['clientId']}"\r
}</con:request>
            <con:originalUri>http://null/api/BankSmart/DepositsList</con:originalUri>
            <con:assertion type="Simple Contains" id="60de2d5b-f37d-4204-bed9-9ea2ba31ac6c" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="f577f608-6f7b-4fb0-ae5f-9faaa0105ce1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>200.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>10</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>500.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>500.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T18:58:34.333</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>6</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:00:41.617</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[8]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>7</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11111.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:07:19.727</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Quarterly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[9]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>8</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[10]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>9</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://null/api/BankSmart/DepositsList';
//ns1:Response[1]/ns1:content[1]/ns1:e[11]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://null/api/BankSmart/DepositsList">
   <requestDateTime>2019-03-06T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <e>
         <recieptID>1</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>200.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>10</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>2000.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>11</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>2000.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>2</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>2000.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>3</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>500.0000</amount>
         <issueDate>2019-09-01T00:00:00</issueDate>
         <startDate>2019-09-01T00:00:00</startDate>
         <maturityDate>2020-09-01T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>4</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>500.0000</amount>
         <issueDate>2019-09-01T00:00:00</issueDate>
         <startDate>2019-09-01T00:00:00</startDate>
         <maturityDate>2020-09-01T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>5</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>100.0000</amount>
         <issueDate>2019-09-02T18:58:34.333</issueDate>
         <startDate>2019-09-02T00:00:00</startDate>
         <maturityDate>2020-09-02T00:00:00</maturityDate>
         <rate>5.0000</rate>
         <autoProfit>No</autoProfit>
         <paymentPeriod/>
         <treatment/>
         <status null="true"/>
         <autoRollover>No</autoRollover>
      </e>
      <e>
         <recieptID>6</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>100.0000</amount>
         <issueDate>2019-09-02T19:00:41.617</issueDate>
         <startDate>2019-09-02T00:00:00</startDate>
         <maturityDate>2020-09-02T00:00:00</maturityDate>
         <rate>5.0000</rate>
         <autoProfit>No</autoProfit>
         <paymentPeriod/>
         <treatment/>
         <status null="true"/>
         <autoRollover>No</autoRollover>
      </e>
      <e>
         <recieptID>7</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>11111.0000</amount>
         <issueDate>2019-09-02T19:07:19.727</issueDate>
         <startDate>2019-09-02T00:00:00</startDate>
         <maturityDate>2020-09-02T00:00:00</maturityDate>
         <rate>5.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Quarterly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>8</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>2000.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>9</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>2000.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b2e4d39b-f8c0-4914-84b3-e47f416743ec" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DepositsListClientWise" id="e06101f5-9dfc-4f12-a1fb-428599bc9eb7">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/DepositsListClientWise" methodName="DepositsListClientWise" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DepositsListClientWise" id="51acd0c6-9f40-48ff-ba8f-8e0a9ea162d8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //10
      "OurBranchId" : "03"\r
   },\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
   "ProductID" : "TDR7D"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/DepositsListClientWise</con:originalUri>
            <con:assertion type="Simple Contains" id="3fd1730b-e2f2-4f69-a056-79d288c33a88" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="301cb2e7-6800-4538-ae08-ee0f21e54e9b" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-03T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>200.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[1]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2000.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[2]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>500.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[3]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>4</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>500.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[4]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T18:58:34.333</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[5]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>6</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>100.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:00:41.617</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[6]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>No</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:recieptID[1]</con:xpath>
                  <con:element>recieptID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>7</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>11111.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T19:07:19.727</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-02T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>5.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Quarterly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:status[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsListClientWise';
//ns1:Response[1]/ns1:content[1]/ns1:e[7]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/DepositsListClientWise">
   <requestDateTime>2019-09-03T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <e>
         <recieptID>1</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>200.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>2</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>2000.0000</amount>
         <issueDate>2019-03-06T00:00:00</issueDate>
         <startDate>2019-03-06T00:00:00</startDate>
         <maturityDate>2019-03-06T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>3</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>500.0000</amount>
         <issueDate>2019-09-01T00:00:00</issueDate>
         <startDate>2019-09-01T00:00:00</startDate>
         <maturityDate>2020-09-01T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>4</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>500.0000</amount>
         <issueDate>2019-09-01T00:00:00</issueDate>
         <startDate>2019-09-01T00:00:00</startDate>
         <maturityDate>2020-09-01T00:00:00</maturityDate>
         <rate>1.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Monthly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
      <e>
         <recieptID>5</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>100.0000</amount>
         <issueDate>2019-09-02T18:58:34.333</issueDate>
         <startDate>2019-09-02T00:00:00</startDate>
         <maturityDate>2020-09-02T00:00:00</maturityDate>
         <rate>5.0000</rate>
         <autoProfit>No</autoProfit>
         <paymentPeriod/>
         <treatment/>
         <status null="true"/>
         <autoRollover>No</autoRollover>
      </e>
      <e>
         <recieptID>6</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>100.0000</amount>
         <issueDate>2019-09-02T19:00:41.617</issueDate>
         <startDate>2019-09-02T00:00:00</startDate>
         <maturityDate>2020-09-02T00:00:00</maturityDate>
         <rate>5.0000</rate>
         <autoProfit>No</autoProfit>
         <paymentPeriod/>
         <treatment/>
         <status null="true"/>
         <autoRollover>No</autoRollover>
      </e>
      <e>
         <recieptID>7</recieptID>
         <productID>TDR1Y</productID>
         <accountID>0101200000929301</accountID>
         <nAccount>0150100000929303</nAccount>
         <amount>11111.0000</amount>
         <issueDate>2019-09-02T19:07:19.727</issueDate>
         <startDate>2019-09-02T00:00:00</startDate>
         <maturityDate>2020-09-02T00:00:00</maturityDate>
         <rate>5.0000</rate>
         <autoProfit>Yes</autoProfit>
         <paymentPeriod>Quarterly</paymentPeriod>
         <treatment>Encashment</treatment>
         <status null="true"/>
         <autoRollover/>
      </e>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6e7df5-a431-4fc4-aef0-46e93676459d" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CloseFixDeposit" id="2f85d10f-0824-4128-95bc-280dbcb06a97">
        <con:settings/>
        <con:config service="http://${#Project#url} 2" resourcePath="/api/BankSmart/CloseFixedDeposit" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CloseFixDeposit" id="425e8388-c8f2-4040-851a-3a5c1edffbce" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "signOnRq" : {\r
      "logId" : "${=java.util.UUID.randomUUID()}",\r
      "dateTime" : "2021-11-22T13:09:32.131Z",\r
      "channelId" : "100", //10
      "ourBranchId" : "${CreateCorporateCIFV2#Request#$['signOnRq']['OurBranchId']}"\r
   },\r
   "receiptID" : "${DepositsListClientWise#Response#$['content'][0]['recieptID']}",\r
   "accountID" : "${OpenFDAccount#Response#$['content']}",\r
   "preMatureRate" : 3.0,\r
   "penalty" : "N",\r
   "penaltyType" : "R",\r
   "penaltyRate" : 0\r
}</con:request>
            <con:originalUri>https://waqfevendor.gslb.uat.eradahcapital.com/api/BankSmart/CloseFixedDeposit</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="fd694c34-a64a-4ca4-a626-be3e3a1432d0" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DepositsDetails" id="29282182-40a4-4ee3-a604-e6a47d6c8daa">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/DepositsDetails" methodName="DepositsDetails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DepositsDetails" id="8c48ae28-67d1-41fb-a914-00e726226f3f" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //10
      "OurBranchId" : "03"\r
   },\r
   "AccountID" : "${DepositsListClientWise#Response#$['content'][0]['accountID']}",\r
   "ClientID" : "${OpenFixDeposit#RawRequest#$['TDRIssuance']['clientId']}",\r
   "ReceiptID" : "${DepositsListClientWise#Response#$['content'][0]['recieptID']}"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/DepositsDetails</con:originalUri>
            <con:assertion type="Simple Contains" id="004ea31a-fd7b-46e6-a526-69fab95407d2" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>true</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="66e518e8-c0f9-42e2-a5d2-6cb670e783f4" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:requestDateTime[1]</con:xpath>
                  <con:element>requestDateTime</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-03-06T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:logId[1]</con:xpath>
                  <con:element>logId</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:status[1]/ns1:code[1]</con:xpath>
                  <con:element>code</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>MSG-000000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:status[1]/ns1:severity[1]</con:xpath>
                  <con:element>severity</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:status[1]/ns1:statusMessage[1]</con:xpath>
                  <con:element>statusMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Success</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:productID[1]</con:xpath>
                  <con:element>productID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>TDR1Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:accountID[1]</con:xpath>
                  <con:element>accountID</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0101200000929301</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:nAccount[1]</con:xpath>
                  <con:element>nAccount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>0150100000929303</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:amount[1]</con:xpath>
                  <con:element>amount</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>500.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:issueDate[1]</con:xpath>
                  <con:element>issueDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:startDate[1]</con:xpath>
                  <con:element>startDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2019-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:maturityDate[1]</con:xpath>
                  <con:element>maturityDate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>2020-09-01T00:00:00</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:rate[1]</con:xpath>
                  <con:element>rate</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>1.0000</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:autoProfit[1]</con:xpath>
                  <con:element>autoProfit</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Yes</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:paymentPeriod[1]</con:xpath>
                  <con:element>paymentPeriod</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Monthly</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:treatment[1]</con:xpath>
                  <con:element>treatment</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Encashment</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>false</con:enabled>
                  <con:expectedValue>Open</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://10.4.128.8/api/BankSmart/DepositsDetails';
//ns1:Response[1]/ns1:content[1]/ns1:autoRollover[1]</con:xpath>
                  <con:element>autoRollover</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>exists</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://10.4.128.8/api/BankSmart/DepositsDetails">
   <requestDateTime>2019-03-06T00:00:00</requestDateTime>
   <logId>e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3</logId>
   <status>
      <code>MSG-000000</code>
      <severity>Success</severity>
      <statusMessage>Success</statusMessage>
   </status>
   <content>
      <productID>TDR1Y</productID>
      <accountID>0101200000929301</accountID>
      <nAccount>0150100000929303</nAccount>
      <amount>500.0000</amount>
      <issueDate>2019-09-01T00:00:00</issueDate>
      <startDate>2019-09-01T00:00:00</startDate>
      <maturityDate>2020-09-01T00:00:00</maturityDate>
      <rate>1.0000</rate>
      <autoProfit>Yes</autoProfit>
      <paymentPeriod>Monthly</paymentPeriod>
      <treatment>Encashment</treatment>
      <status>Open</status>
      <autoRollover/>
   </content>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6563c94d-8b15-45c6-9b49-ae3a60ab496c" name="JSONPath Match">
              <con:configuration>
                <path>$['status']['code']</path>
                <content>MSG-000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetFixDepositProducts" id="3caf8cfb-1afc-40f7-8882-f5eccc3a6f5c">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/GetFixDepositProducts" methodName="GetFixDepositProducts" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetFixDepositProducts" id="b5f6b9f0-06de-410f-9fb1-59847e2d1a9e" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "signOnRq" : {\r
      "LogId" : "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //10
      "OurBranchId" : "03"\r
   }\r
}</con:request>
            <con:originalUri>https://waqfevendor.gslb.sit.eradahcapital.com/api/BankSmart/GetFixDepositProducts</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="bac18781-5106-437b-bb8f-112ea2f9964c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="BalanceInquiry" id="cc2ba8db-e91c-4389-a98d-b8e9cdb1b860">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/BalanceInquiry" methodName="BalanceInquiry" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="BalanceInquiry" id="31706188-18bd-4631-9724-4171df9e80bf" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${#TestCase#Date}",\r
      "ChannelId" : "100",\r //1 and pass=Lkjh123!@#
      "OurBranchId" : "04"\r
   },\r
   "AccountId" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
   "ClientID" : "${CreateCorporateCIFV2#Response#$['content']['clientID']}"\r
}</con:request>
            <con:originalUri>http://10.4.128.8/api/BankSmart/BalanceInquiry</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="13aed7a7-8df8-4963-bc66-4d20bd0e4648" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="CheckBalance" id="c1b342dc-ab92-49d3-adce-2e9c9bcff1e0" disabled="true">
        <con:settings/>
        <con:config>
          <script>import java.text.DecimalFormat
def jsonSlurper= new groovy.json.JsonSlurper()
def balanceresponse=jsonSlurper.parseText(testRunner.testCase.getTestStepByName("BalanceInquiry").getPropertyValue("Response"));

float amount =balanceresponse.content.totalBalance;
//float bankUSDAmount=responserest1.routes[0].bankUSDAmount;
if (amount !=0){
//def multibranch=testRunner.testCase.getTestStepByName("BalanceInquiry").getPropertyValue("Response");
def multibranch = testRunner.runTestStepByName("MultiBranch_Debit")
log.info(multibranch.status)
//def closeAccount = testRunner.runTestStepByName("CloseAccount")
//log.info(closeAccount.status)
//def tCase = testRunner.testCase.testSuite.testCases["Corporate_OnBoarding"]

//def tStep = tCase.testSteps["Multibranch"]
//tStep.run(testRunner, context)
}
else{
//return amount;
def closeAccount = testRunner.runTestStepByName("CloseAccount")
log.info(closeAccount.status)

}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="MultiBranch_Debit" id="406d6443-2dfc-479a-bf23-5618a59c6377">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/Multibranch" methodName="Multibranch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="MultiBranch_Debit" id="9f92a562-d89d-4b06-b7d2-4dc66f1d635a" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
   "SignOnRq" : {\r
      "LogId" : "${=java.util.UUID.randomUUID()}",\r
      "DateTime" : "${Groovy Script#result}",\r
      "ChannelId" : "100",\r
      "OurBranchId" : "01"\r
   },\r
   "ChannelRefId" : "${=org.apache.commons.lang.RandomStringUtils.randomNumeric(16)}",\r
   "TransferEntries" : [\r
      {\r
         "branchID" : "03",\r
         "NarrationId" : "200001",\r
         "AccountId" : "${CreateCorporateAccount#Response#$['content']['accountID']}",\r
         "AccountType" : "C",\r
         "EntryType" : "D",\r
         "CurrencyID" : "AED",\r
         "Amount" : "${BalanceInquiry#Response#$['content']['totalBalance']}",\r
         "LocalEq" : "${BalanceInquiry#Response#$['content']['totalBalance']}",\r
         "ExchangeRate" : 1,\r
         "CoverRate" : 1,\r
         "Memo" : "API_HC_outgoing domestic transfer from Account ID: 0310100031864601",\r
         "valueDate" : "",\r
         "chequeID" : "",\r
         "chequeDate" : ""\r
      },\r
      {\r
         "BranchID" : "03",\r
         "NarrationId" : "100001",\r
         "AccountId" : "0310100031864601",\r
         "AccountType" : "C",\r
         "EntryType" : "C",\r
         "CurrencyID" : "AED",\r
         "Amount" : "${BalanceInquiry#Response#$['content']['totalBalance']}",\r
         "LocalEq" : "${BalanceInquiry#Response#$['content']['totalBalance']}",\r
         "ExchangeRate" : 1,\r
         "CoverRate" : 1,\r
         "Memo" : "API_HC_incoming domestic transfer to Account ID: ${CreateCorporateAccount#Response#$['content']['accountID']}",\r
         "valueDate" : "",\r
         "chequeID" : "",\r
         "chequeDate" : ""\r
      }\r
   ]\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/transfer</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="e880ae35-f04f-4c53-be43-1a2f3fc9b415" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yNS1lcmM6UEBzc3cwcmQ1"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CloseAccount" id="39db5acf-9d66-4563-8fc2-a32988074a73">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/CloseAccount" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CloseAccount" id="44936d01-9464-4fc9-8da6-5ce2b0b42f86" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{
  "signOnRq": {
    "logId": "${=java.util.UUID.randomUUID()}",
    "dateTime": "${#TestCase#Date}",
    "channelId": "100",
    "ourBranchId": "${CreateCorporateAccount#Request#$['SignOnRq']['OurBranchId']}"
  },
  "accountId": "${CreateCorporateAccount#Response#$['content']['accountID']}",
  "clientId": "${CreateCorporateCIFV2#Response#$['content']['clientID']}"
}</con:request>
            <con:originalUri>https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/CloseAccount</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="a8545a1d-7d06-46e7-8034-df41c986800f" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="UpdateCIFStatus" id="6f41c95f-9bd3-4c0e-a43c-060d5f2060e7">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/UpdateCifStatus" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="UpdateCIFStatus" id="ce91a8e2-ac89-423c-ab6b-c99aef1d5c88" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{
  "signOnRq": {
    "logId": "${=java.util.UUID.randomUUID()}",
    "dateTime": "${#TestCase#Date}",
    "channelId": "100", //13
    "ourBranchId": "03"
  },
  "clientId": "${CreateCorporateCIFV2#Response#$['content']['clientID']}",
  "status": "D"
}</con:request>
            <con:originalUri>https://mule-dev.gslb.shd.eradahcapital.com/api/BankSmart/UpdateCifStatus</con:originalUri>
            <con:assertion type="Simple Contains" id="b54ffe75-f256-4b29-a5b8-0c8fa8b9bd10" name="Contains">
              <con:configuration>
                <token>Success</token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor100-erc</con:username>
              <con:password>P@ssw0rd100</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="AddAuthorisedSignatories" id="d3e0d0d0-9b19-4039-a70a-5da2ba4133cf" disabled="true">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/AddAuthorisedSignatories" methodName="AddAuthorisedSignatories" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AddAuthorisedSignatories" id="826e3856-323f-4434-a5f3-529600be18e1" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{\r
  "SignOnRq": {\r
    "LogId": "e0ccbe1a-dfdd-4753-a4c7-acc6fb0665e3",\r
    "DateTime": "2019-03-06T00:00:00",\r
    "ChannelId": "10",\r
    "OurBranchId": "01"\r
  },\r
  "ClientID":"${CreateCorporateCIFV2#Response#$['content']['clientID']}",\r
  "AuthorisedSignatories":{\r
  	"AuthorisedsignatoriesName": "Avantika",\r
			"PhoneNumber": "123123",\r
			"EmailID": "ava@hotmail.com",\r
			"CorrespondenceAddress": "4/x",\r
			"AuthorisedsignatoryIDtype1": "DLL",\r
			"AuthorisedsignatoryIDNumber1": "112312",\r
			"AuthorisedsignatoryIDExpirydate1": "2019-03-06",\r
			"AuthorisedsignatoryIDIssueCountry1": "UAE",\r
			"AuthorisedsignatoryIDtype2": "DLL",\r
			"AuthorisedsignatoryIDNumber2": "123",\r
			"AuthorisedsignatoryIDExpirydate2": "2019-03-06",\r
			"AuthorisedsignatoryIDIssueCountry2": "UAE",\r
			"AuthorisedsignatoryVisaIssuedby": "fahad",\r
			"AuthorisedsignatoryVisaNumber": "123",\r
			"AuthorisedsignatoryVisaExpiry": "2019-03-06",\r
			"Remarks": "test",\r
			"Blacklist": "Y",\r
			"PEP": "Y",\r
			"FATCARelevant": "Y",\r
			"CRSRelevant": "Y",\r
			"AreyouaUSCitizen": "Y",\r
			"AreyouaUSTaxResident": "Y",\r
			"WereyoubornintheUS": "Y",\r
			"USAORUAE": "Y",\r
			"TINAvailable": "",\r
			"TinNo1": null,\r
			"TaxCountry1": null,\r
			"TinNo2": "",\r
			"TaxCountry2": null,\r
			"TinNo3": null,\r
			"TaxCountry3": null,\r
			"TinNo4": null,\r
			"TaxCountry4": null,\r
			"TinNo5": null,\r
			"TaxCountry5": null,\r
			"FATCANoReason": "",\r
			"ReasonB": "",\r
			"ASCity": "DBX",\r
			"ASState": "DAU",\r
			"ASCountry": "UAE",\r
			"IDGender": "M",\r
			"DateOfBirth": "2019-03-06",\r
			"IDNationality": "UAE"\r
		 }\r
}</con:request>
            <con:originalUri>http://waqfedev.northeurope.cloudapp.azure.com/api/BankSmart/AddAuthorisedSignatories</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3716d0c7-812e-4d65-b735-26f6d2b19dfe" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="b5c2eb15-c7b7-4f49-a2de-6456862c08fa" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
              <con:entry key="//Authorization" value="Basic Og=="/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>//Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="CloseFixedDeposit" id="6d030863-ae76-4968-8570-aa9b1dd5fb0a" disabled="true">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/CloseFixedDeposit" methodName="CloseFixedDeposit" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="CloseFixedDeposit" id="c460907d-0adf-4ee8-ac1e-33082ac102c7" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "{{$guid}}",
        "DateTime": "2019-03-06T00:00:00",
        "ChannelId": "10",
        "OurBranchId": "03"
    },
    "ReceiptID": "1034",
    "ClientId": null,
    "AccountID": "${OpenFixDeposit#RawRequest#$['TDRIssuance']['AccountID']}",
    "PreMatureRate": 3.0,
    "Penalty": "N",
    "PenaltyType": "R",
    "PenaltyAmount": 1.0,
    "PenaltyRate": 1.0,
    "ZeroInterest": "N"
}</con:request>
            <con:originalUri>http://https/waqfevendor.gslb.sit.eradahcapital.com/api/BankSmart/CloseFixedDeposit</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="345c0509-5588-4b58-9495-23989d8007b6" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="FDPartialWithdrawal" id="b86ec376-b9a2-44cc-bed1-d802c72611d7" disabled="true">
        <con:settings/>
        <con:config service="http://${#Project#url}" resourcePath="/api/BankSmart/FDPartialWithdrawal" methodName="FDPartialWithdrawal" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="FDPartialWithdrawal" id="c460907d-0adf-4ee8-ac1e-33082ac102c7" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#pURL}</con:endpoint>
            <con:request>{
    "SignOnRq": {
        "LogId": "{{$guid}}",
        "DateTime": "2020-11-29T16:03:12",
        "ChannelId": "10",
        "OurBranchId": "03"
    },
    "ReceiptID": "${DepositsListClientWise#Response#$['content'][0]['recieptID']}",
    "AccountID": "${OpenFDAccount#Response#$['content']}",
    "PreMatureRate": 0.0000,
    "NewReceiptRate": 1.0000,
    "Penalty": "N",
    "PenaltyType": "R",
    "PenaltyAmount": 0.00,
    "PenaltyRate": 0.0000,
    "PartialAmount": 4.0000
}</con:request>
            <con:originalUri>https://waqfevendor.gslb.sit.eradahcapital.com/api/BankSmart/FDPartialWithdrawal</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="66621388-13c0-4cef-a5f5-160a19c953f5" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username>vendor10-erc</con:username>
              <con:password>P@ssw0rd10</con:password>
              <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
              <con:preemptive>true</con:preemptive>
              <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
              <con:authType>Preemptive</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="Authorization" value="Basic dmVuZG9yOS1lcmM6UEBzc3cwcmQ5"/>
              <con:entry key="Content-Type" value="application/json"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>Content-Type</con:entry>
              <con:entry>Authorization</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>Date</con:name>
          <con:value>2022-04-02T12:21:33</con:value>
        </con:property>
        <con:property>
          <con:name>apiname</con:name>
          <con:value>API HC</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>0198f780-e0d1-42d3-aefb-df58697a8e51</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e06101f5-9dfc-4f12-a1fb-428599bc9eb7</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>29282182-40a4-4ee3-a604-e6a47d6c8daa</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>2a0f6505-7914-4890-9776-11cda3878713</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>cc2ba8db-e91c-4389-a98d-b8e9cdb1b860</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>10d01434-3cf0-4f5c-886b-d6909a0ce06e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>28529b8c-7f12-462a-acd4-981291dc96b7</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>618ae32f-1d8c-4a98-9f31-d2c49ec56174</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>4f14ddce-beda-4016-a722-1095353dc465</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>c1b342dc-ab92-49d3-adce-2e9c9bcff1e0</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>39db5acf-9d66-4563-8fc2-a32988074a73</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>3caf8cfb-1afc-40f7-8882-f5eccc3a6f5c</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>2f85d10f-0824-4128-95bc-280dbcb06a97</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>406d6443-2dfc-479a-bf23-5618a59c6377</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>b23c3688-bce3-4549-a3b7-5e82fc820d2e</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>fa2f4e8d-7714-4eb1-9418-3600f98a5540</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>f03d235d-2f53-472d-a249-1bc2e9430698</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6f41c95f-9bd3-4c0e-a43c-060d5f2060e7</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>23dea707-2b1b-4915-9a3c-52b7349a47eb</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>pURL</con:name>
      <con:value>https://waqfevendor.gslb.uat.eradahcapital.com</con:value>
    </con:property>
    <con:property>
      <con:name>Date</con:name>
      <con:value/>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:loadUiTest name="Create_CORP_ACC" id="fc876f8c-a6bf-4b4b-ad1d-04cc6558b0df">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">83eb50b6-2fe0-43f0-a276-1172b684b250</con:setting>
      <con:setting id="soapUIObjectSourceType">soapUIObjectSourceType_TestCase</con:setting>
    </con:settings>
    <con1:loadui-project id="023a1a6b-57cf-4fab-af6c-5b4017db2aee" label="Create_CORP_ACC" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.id" type="java.lang.String">fc876f8c-a6bf-4b4b-ad1d-04cc6558b0df</con1:property>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=600;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="f0a29fbf-49b7-45a4-8df2-8d4f36042614">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=600;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="cdc66d45-d64d-4453-81c0-0c068e63cc89" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 1" id="a53b0d78-e373-4aad-b240-61e11724ba3c" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">10</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Corporate_OnBoarding:CreateCorporateAccount" id="2fe9ba37-85fe-4844-9b3e-2a78e524c908" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">64ad410e-9607-4b3a-bce7-4b94fecbbb3e</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="cdc66d45-d64d-4453-81c0-0c068e63cc89/outgoingTerminal" inputTerminalId="a53b0d78-e373-4aad-b240-61e11724ba3c/stateTerminal"/>
        <con1:connection outputTerminalId="a53b0d78-e373-4aad-b240-61e11724ba3c/triggerTerminal" inputTerminalId="2fe9ba37-85fe-4844-9b3e-2a78e524c908/triggerTerminal"/>
        <con1:connection outputTerminalId="2fe9ba37-85fe-4844-9b3e-2a78e524c908/runningTerminal" inputTerminalId="a53b0d78-e373-4aad-b240-61e11724ba3c/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage">
          <con1:chartGroup type="com.eviware.loadui.api.statistics.model.chart.line.LineChartView" title="" groupType="Monitors">
            <con1:attributes>
              <con1:property key="GroupId">06d25948-161b-4193-bc35-7450ed21274f</con1:property>
            </con1:attributes>
          </con1:chartGroup>
        </con1:page>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="023a1a6b-57cf-4fab-af6c-5b4017db2aee" scenarioId="f0a29fbf-49b7-45a4-8df2-8d4f36042614" name="New Scenario" id="49332014-b6df-447a-8932-172cb7abc490">
      <con:settings/>
    </con:loadUITestScenario>
    <con:loadUIPanelData id="c8c0ae9a-f828-4fa5-b253-f66f242a2cc2">
      <con:panel>Log</con:panel>
      <con:data>
        <con:paramName>column_width@Timestamp</con:paramName>
        <con:paramValue>84</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Timestamp</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@ID</con:paramName>
        <con:paramValue>74</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@ID</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Test step status</con:paramName>
        <con:paramValue>120</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Test step status</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@TriggerTimestamp</con:paramName>
        <con:paramValue>84</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@TriggerTimestamp</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@TimeTaken</con:paramName>
        <con:paramValue>115</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@TimeTaken</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@_wait_time_</con:paramName>
        <con:paramValue>106</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@_wait_time_</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Bytes</con:paramName>
        <con:paramValue>52</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Bytes</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@HTTP Status</con:paramName>
        <con:paramValue>90</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@HTTP Status</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@CurrentlyRunning</con:paramName>
        <con:paramValue>75</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@CurrentlyRunning</con:paramName>
        <con:paramValue>true</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Request</con:paramName>
        <con:paramValue>67</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Request</con:paramName>
        <con:paramValue>false</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_width@Response</con:paramName>
        <con:paramValue>77</con:paramValue>
      </con:data>
      <con:data>
        <con:paramName>column_visible@Response</con:paramName>
        <con:paramValue>false</con:paramValue>
      </con:data>
    </con:loadUIPanelData>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:tags/>
  <con:sensitiveInformation/>
</con:soapui-project>
